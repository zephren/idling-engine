{"version":3,"sources":["lib/game.ts","lib/context.ts","views/Code.tsx","components/Settings/index.tsx","components/Settings/StringSetting.tsx","components/Settings/DropdownSetting.tsx","components/user/Button.tsx","config/sharedStyle.ts","components/user/Text.tsx","components/user/Container.tsx","components/user/Card.tsx","components/user/PathContainer.tsx","components/Settings/SliderSetting.tsx","components/user/VariableText.tsx","components/user/ToolBarTabs.tsx","components/user/AppBar.tsx","components/Settings/CustomRepeatSetting.ts","components/user/Table.tsx","components/Toolbox.tsx","components/SettingsPanel.tsx","lib/saveLayout.ts","components/AutoSave.tsx","lib/components.ts","lib/loadGameData.ts","views/Edit.tsx","views/Play.tsx","components/Header.tsx","config/theme.ts","components/OptionsDrawer.tsx","App.tsx","index.tsx"],"names":["setUpdateUIFunction","fn","game","update","settings","tickInterval","data","actions","conditionals","dataSources","configure","console","log","isInitialized","_initialize","this","tick","currentTimeout","setTimeout","executeCode","files","localStorage","gameCode","JSON","parse","finalCode","file","code","clearTimeout","eval","initialize","err","message","error","window","store","state","drawerOpen","editorQuery","Context","React","createContext","Code","history","useHistory","useState","updateValue","save","stringify","useContext","useEffect","interval","setInterval","clearInterval","length","push","name","map","index","variant","location","pathname","includes","color","onClick","path","render","mode","theme","onChange","editorProps","$blockScrolling","style","width","fontSize","value","tabSize","to","Settings","config","properties","setProp","settingsRows","configItem","property","remainingProps","TableRow","TableCell","component","scope","type","TableContainer","size","TableBody","StringSetting","TextField","fullWidth","event","props","target","DropdownSetting","itemsFn","items","item","MenuItem","Select","labelId","id","Button","text","onClickAction","actionContext","useNode","connectors","connect","drag","ref","action","craft","related","node","Object","keys","useSharedStyles","makeStyles","componentEditing","boxShadow","paddingTop","paddingBottom","componentSelected","componentClass","editing","selected","sharedClasses","additonalClasses","join","Text","events","dragged","enabled","useEditor","options","disabled","html","e","replace","tagName","className","rules","canDrag","FormControl","FormLabel","Slider","step","min","max","_","Container","background","padding","children","Input","CardTop","CardBottom","canMoveIn","incomingNode","Card","is","canvas","useStyles","main","PathContainer","classes","visible","float","height","SliderSetting","newValue","VariableText","dataProperty","ToolBarTabs","tabs","defaultTab","tab","default","match","parseInt","getCurrentTab","currentTabIndex","Tabs","label","root","flexGrow","spacer","fullHeight","mixins","toolbar","AppBar","position","Toolbar","triggerUpdate","updateTab","Switch","checked","setDefault","CustomRepeatSetting","TableRows","columnNames","rows","itemIndex","cells","column","itemProperty","Table","itemSource","headerRow","itemSourceFunction","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","Toolbox","Box","px","py","Grid","container","direction","alignItems","justify","spacing","pb","Typography","create","SettingsPanel","query","currentNodeId","nodes","isDeletable","mt","xs","Chip","createElement","delete","saveLayout","gameData","Math","random","layout","serialize","AutoSave","debug","components","loadGameData","assign","baseComponents","Content","layoutData","Paper","undefined","Edit","resolver","Play","setGameData","playGameData","Header","createMuiTheme","palette","primary","blueGrey","secondary","ImportExportDialog","onClose","currentAllGameData","btoa","allGameData","setAllGameData","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","reload","OptionsDrawer","showImportExprt","setShowImportExport","Drawer","List","ListItem","button","ListItemIcon","ListItemText","App","setState","ThemeProvider","CssBaseline","Provider","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.917e7831.chunk.js","sourcesContent":["interface AnyObject {\n  [key: string]: any;\n}\n\nexport function setUpdateUIFunction(fn: any) {\n  game.update = fn;\n}\n\nexport const game = {\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Conditionals\n  conditionals: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialize\n  isInitialized: false,\n  _initialize: (data: any) => {\n    console.log(\"game.initialize not defined\");\n  },\n  get initialize() {\n    return this._initialize;\n  },\n  set initialize(fn) {\n    this._initialize = () => {\n      console.log(\"Initializing\");\n      this.isInitialized = true;\n      fn(game.data);\n    };\n  },\n\n  // Tick\n  tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  // Update\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n};\n\nlet currentTimeout: any = null;\n\n// Tick\nfunction tick() {\n  currentTimeout = setTimeout(() => {\n    game.tick();\n    tick();\n  }, game.settings.tickInterval);\n}\n\nexport function executeCode() {\n  const files: any = localStorage.gameCode\n    ? JSON.parse(localStorage.gameCode)\n    : [];\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\\n\";\n  }\n\n  try {\n    // Stop anything currently executing\n    if (currentTimeout) {\n      clearTimeout(currentTimeout);\n    }\n\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    if (!game.isInitialized) {\n      game.initialize(game.data);\n    }\n\n    game.configure(game.settings);\n\n    tick();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\n(window as any).game = game;\n","import React from \"react\";\n\nexport const store = {\n  state: {\n    drawerOpen: false,\n  },\n  editorQuery: null as any,\n  update: () => {\n    console.log(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../lib/context\";\nimport { executeCode } from \"../lib/game\";\n\nconst initialCode = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = () => {\n  // Update any initial game data here\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n`;\n\nconst files: any = localStorage.gameCode\n  ? JSON.parse(localStorage.gameCode)\n  : [];\n\nexport function Code() {\n  const history = useHistory();\n  const [updateValue, update] = useState(false);\n  useContext(Context);\n\n  function save() {\n    localStorage.gameCode = JSON.stringify(files);\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode();\n    };\n  }, []);\n\n  if (files.length === 0) {\n    files.push({\n      name: \"main\",\n      code: \"//main\\n\" + initialCode,\n    });\n  }\n\n  return (\n    <div>\n      {files.map((file: any, index: number) => {\n        const variant = history.location.pathname.includes(file.name)\n          ? \"contained\"\n          : \"text\";\n        return (\n          <Button\n            key={file.name}\n            color=\"primary\"\n            variant={variant}\n            onClick={() => {\n              history.push(`/code/${file.name}`);\n            }}\n          >\n            {file.name}\n          </Button>\n        );\n      })}\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => {\n          const name = `New File ${files.length}`;\n\n          files.push({\n            name: name,\n            code: `//${name}`,\n          });\n\n          update(!updateValue);\n        }}\n      >\n        + New File\n      </Button>\n      <Switch>\n        {files.map((file: any) => {\n          return (\n            <Route\n              key={file.name}\n              path={`/code/${file.name}`}\n              render={() => {\n                return (\n                  <AceEditor\n                    mode=\"javascript\"\n                    theme=\"monokai\"\n                    onChange={(code: string) => {\n                      file.code = code;\n                    }}\n                    name=\"Code Editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    style={{ width: \"100%\", fontSize: \"1em\" }}\n                    value={file.code}\n                    tabSize={2}\n                  />\n                );\n              }}\n            />\n          );\n        })}\n        <Route path=\"/code\">\n          <Redirect to={`/code/${files[0].name}`} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  for (const configItem of config) {\n    const { property, name, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={name}>\n        <TableCell component=\"td\" scope=\"row\">\n          {property}\n        </TableCell>\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value}\n      onChange={(event: any) => {\n        setProp((props: any) => (props[property] = event.target.value));\n      }}\n    />\n  );\n};\n","import { MenuItem, Select } from \"@material-ui/core\";\n\nexport const DropdownSetting = ({ property, value, itemsFn, setProp }: any) => {\n  const items = [];\n\n  for (const item of itemsFn()) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    items.push(<MenuItem value={value}>{name}</MenuItem>);\n  }\n\n  return (\n    <Select\n      fullWidth\n      labelId=\"demo-simple-select-label\"\n      id=\"demo-simple-select\"\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => (props[property] = event.target.value));\n      }}\n    >\n      {items}\n    </Select>\n  );\n};\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { useNode } from \"@craftjs/core\";\nimport { store } from \"../../lib/context\";\nimport { Settings } from \"../Settings\";\nimport { StringSetting } from \"../Settings/SettingTypes\";\nimport { game } from \"../../lib/game\";\nimport { DropdownSetting } from \"../Settings/DropdownSetting\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n}: any) => {\n  const {\n    connectors: { connect, drag },\n  } = useNode();\n\n  return (\n    <MaterialButton\n      ref={(ref) => connect(drag(ref))}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nconst ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n\n  // return (\n  //   <div>\n  //     <FormControl size=\"small\" component=\"fieldset\">\n  //       <FormLabel component=\"legend\">Size</FormLabel>\n  //       <RadioGroup\n  //         defaultValue={props.size}\n  //         onChange={(e) => setProp((props) => (props.size = e.target.value))}\n  //       >\n  //         <FormControlLabel\n  //           label=\"Small\"\n  //           value=\"small\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Medium\"\n  //           value=\"medium\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Large\"\n  //           value=\"large\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //       </RadioGroup>\n  //     </FormControl>\n  //     <FormControl component=\"fieldset\">\n  //       <FormLabel component=\"legend\">Variant</FormLabel>\n  //       <RadioGroup\n  //         defaultValue={props.variant}\n  //         onChange={(e) => setProp((props) => (props.variant = e.target.value))}\n  //       >\n  //         <FormControlLabel\n  //           label=\"Text\"\n  //           value=\"text\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Outlined\"\n  //           value=\"outlined\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Contained\"\n  //           value=\"contained\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //       </RadioGroup>\n  //     </FormControl>\n  //     <FormControl component=\"fieldset\">\n  //       <FormLabel component=\"legend\">Color</FormLabel>\n  //       <RadioGroup\n  //         defaultValue={props.color}\n  //         onChange={(e) => setProp((props) => (props.color = e.target.value))}\n  //       >\n  //         <FormControlLabel\n  //           label=\"Default\"\n  //           value=\"default\"\n  //           control={<Radio size=\"small\" color=\"default\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Primary\"\n  //           value=\"primary\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //         <FormControlLabel\n  //           label=\"Seconday\"\n  //           value=\"secondary\"\n  //           control={<Radio size=\"small\" color=\"primary\" />}\n  //         />\n  //       </RadioGroup>\n  //     </FormControl>\n  //   </div>\n  // );\n};\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Click me\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n","import { makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px red\",\n    paddingTop: \"1em !important\",\n    paddingBottom: \"1em !important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nexport function componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing ? sharedClasses.componentEditing : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { FormControl, FormLabel, Slider } from \"@material-ui/core\";\nimport ContentEditable from \"react-contenteditable\";\nimport { componentClass, useSharedStyles } from \"../../config/sharedStyle\";\n\nexport const Text = ({ text, fontSize }: any) => {\n  const {\n    connectors: { connect, drag },\n    selected,\n    actions: { setProp },\n  } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n  }));\n\n  const { enabled } = useEditor((state) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n\n  return (\n    <span ref={(ref) => connect(drag(ref))}>\n      <ContentEditable\n        disabled={!selected}\n        html={text}\n        onChange={(e) =>\n          setProp(\n            (props) =>\n              (props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\"))\n          )\n        }\n        tagName=\"span\"\n        style={{ fontSize: `${fontSize}px` }}\n        className={componentClass(enabled, selected, sharedClasses)}\n      />\n      {/* {selected && (\n        <div>\n          <FormControl className=\"text-additional-settings\" size=\"small\">\n            <FormLabel component=\"legend\">Font size</FormLabel>\n            <Slider\n              defaultValue={fontSize}\n              step={1}\n              min={7}\n              max={50}\n              valueLabelDisplay=\"auto\"\n              onChange={(_, value) => {\n                setProp((props) => (props.fontSize = value));\n              }}\n            />\n          </FormControl>\n        </div>\n      )} */}\n    </span>\n  );\n};\n\nconst TextSettings = () => {\n  const {\n    actions: { setProp },\n    fontSize,\n  } = useNode((node) => ({\n    fontSize: node.data.props.fontSize,\n  }));\n\n  return (\n    <>\n      <FormControl size=\"small\" component=\"fieldset\">\n        <FormLabel component=\"legend\">Font size</FormLabel>\n        <Slider\n          value={fontSize || 7}\n          step={7}\n          min={1}\n          max={50}\n          onChange={(_, value) => {\n            setProp((props) => (props.fontSize = value));\n          }}\n        />\n      </FormControl>\n    </>\n  );\n};\n\nText.craft = {\n  props: {\n    text: \"Hi\",\n    fontSize: 20,\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n","import { Container as MUIContainer, Input } from \"@material-ui/core\";\nimport { useNode } from \"@craftjs/core\";\n\nexport const Container = ({ background, padding, children }: any) => {\n  const {\n    connectors: { connect, drag },\n  } = useNode();\n\n  return (\n    <MUIContainer\n      ref={(ref: any) => connect(drag(ref))}\n      style={{ background, padding }}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nconst ContainerSettings = () => {\n  const {\n    actions: { setProp },\n    padding,\n  } = useNode((node) => ({\n    padding: node.data.props.padding,\n  }));\n\n  return (\n    <>\n      <Input\n        value={padding}\n        onChange={(event: any) => {\n          setProp((props) => (props.padding = event.target.value));\n        }}\n      />\n    </>\n  );\n};\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n","import { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { Container } from \"./Container\";\nimport { Element, useNode } from \"@craftjs/core\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n  return (\n    <div ref={connect} className=\"text-only\">\n      {children}\n    </div>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n  return <div ref={connect}>{children}</div>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = ({ background, padding = 20 }: any) => {\n  return (\n    <Container background={background} padding={padding}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </Container>\n  );\n};\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { useNode, useEditor } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { Context } from \"../../lib/context\";\nimport { Settings } from \"../Settings\";\nimport { StringSetting } from \"../Settings/SettingTypes\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { componentClass, useSharedStyles } from \"../../config/sharedStyle\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children }: any) => {\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const history = useHistory();\n  const classes = useStyles();\n  const sharedClasses = useSharedStyles();\n  useContext(Context);\n\n  const visible = history.location.pathname.includes(path);\n\n  return (\n    <MUIContainer\n      ref={(ref: any) => connect(drag(ref))}\n      className={componentClass(enabled, selected, sharedClasses, [\n        classes.main,\n      ])}\n    >\n      <div style={{ float: \"right\", height: \"0em\" }}>\n        {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n      </div>\n      {enabled && (\n        <div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    ...properties\n  } = useNode((node) => ({\n    path: node.data.props.path,\n  }));\n\n  return (\n    <Settings\n      config={[{ type: StringSetting, property: \"path\" }]}\n      properties={properties}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n","import { Slider } from \"@material-ui/core\";\n\nexport const SliderSetting = ({\n  property,\n  value,\n  min,\n  max,\n  step,\n  setProp,\n}: any) => {\n  return (\n    <Slider\n      value={value || 7}\n      step={step}\n      min={min}\n      max={max}\n      onChange={(_, newValue) => {\n        setProp((props: any) => (props[property] = newValue));\n      }}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { useContext } from \"react\";\nimport { Context } from \"../../lib/context\";\nimport { game } from \"../../lib/game\";\nimport { Settings } from \"../Settings\";\nimport { StringSetting } from \"../Settings/SettingTypes\";\nimport { SliderSetting } from \"../Settings/SliderSetting\";\n\nexport const VariableText = ({ dataProperty, fontSize }: any) => {\n  const {\n    connectors: { connect, drag },\n  } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n  }));\n\n  useContext(Context);\n\n  return (\n    <span ref={(ref) => connect(drag(ref))} style={{ fontSize }}>\n      {game.data[dataProperty] ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nconst TextSettings = () => {\n  const {\n    actions: { setProp },\n    ...properties\n  } = useNode((node) => ({\n    dataProperty: node.data.props.dataProperty,\n    fontSize: node.data.props.fontSize,\n  }));\n\n  return (\n    <Settings\n      config={[\n        { type: StringSetting, property: \"dataProperty\" },\n        { type: SliderSetting, property: \"fontSize\", min: 1, max: 50, step: 7 },\n      ]}\n      properties={properties}\n      setProp={setProp}\n    />\n  );\n};\n\nVariableText.craft = {\n  props: {\n    fontSize: 20,\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Switch,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../lib/context\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const {\n    connectors: { connect, drag },\n  } = useNode();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n  const store = useContext(Context);\n\n  return (\n    <div\n      ref={(ref) => connect(drag(ref))}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\">\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const updateTab = (tab: any, property: string, value: any) => {\n    tab[property] = value;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const setDefault = (tab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    updateTab(tab, \"default\", true);\n  };\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <div key={index}>\n            <TextField\n              label=\"Name\"\n              value={tab.name}\n              onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n            />\n            <TextField\n              label=\"Path\"\n              value={tab.path}\n              onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n            />\n            <TextField\n              label=\"To\"\n              value={tab.to}\n              onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n            />\n            <Switch\n              checked={tab.default || false}\n              onChange={() => setDefault(tab)}\n            />\n          </div>\n        );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import React, { useContext } from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { Settings } from \"../Settings\";\nimport { CustomRepeatSetting } from \"../Settings/CustomRepeatSetting\";\nimport { StringSetting } from \"../Settings/SettingTypes\";\nimport { game } from \"../../lib/game\";\nimport { Button } from \"./Button\";\nimport { Context } from \"../../lib/context\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n\n  for (const itemIndex in items) {\n    const item = items[itemIndex];\n    const cells = [];\n\n    for (const column of columnNames) {\n      const { name } = column;\n      const itemProperty = item[column.property];\n\n      switch (column.type) {\n        case \"string\":\n          cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n          break;\n        case \"textFromFunction\":\n          cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n          break;\n        case \"button\":\n          cells.push(\n            <TableCell key={name}>\n              <Button\n                text={itemProperty.text}\n                variant=\"contained\"\n                color=\"primary\"\n                onClickAction={itemProperty.onClickAction}\n                actionContext={item}\n              />\n            </TableCell>\n          );\n          break;\n      }\n    }\n\n    rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const {\n    connectors: { connect, drag },\n  } = useNode();\n\n  useContext(Context);\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={(ref) => connect(drag(ref))}>\n      Table!\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.type}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StringSetting,\n          property: \"itemSource\",\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n","import { Element, useEditor } from \"@craftjs/core\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { AppBar, PathContainer } from \"./user\";\nimport { Button } from \"./user/Button\";\nimport { Card } from \"./user/Card\";\nimport { Container } from \"./user/Container\";\nimport { Text } from \"./user/Text\";\nimport { VariableText } from \"./user/VariableText\";\nimport { Table } from \"./user/Table\";\n\nexport const Toolbox = () => {\n  const { connectors } = useEditor();\n\n  return (\n    <Box px={2} py={2}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={1}\n      >\n        <Box pb={2}>\n          <Typography>Drag to add</Typography>\n        </Box>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) =>\n              connectors.create(ref, <Button text=\"Click me\" size=\"small\" />)\n            }\n            variant=\"contained\"\n          >\n            Button\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <Text text=\"Hi world\" />)}\n            variant=\"contained\"\n          >\n            Text\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) =>\n              connectors.create(\n                ref,\n                <Element is={Container} padding={20} canvas />\n              )\n            }\n            variant=\"contained\"\n          >\n            Container\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <Card />)}\n            variant=\"contained\"\n          >\n            Card\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <VariableText />)}\n            variant=\"contained\"\n          >\n            Variable Text\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <AppBar />)}\n            variant=\"contained\"\n          >\n            App Bar\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) =>\n              connectors.create(ref, <Element is={PathContainer} canvas />)\n            }\n            variant=\"contained\"\n          >\n            Path Container\n          </MaterialButton>\n        </Grid>\n        <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <Table />)}\n            variant=\"contained\"\n          >\n            Table\n          </MaterialButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","import { store } from \"./context\";\n\nexport function saveLayout() {\n  const { editorQuery } = store;\n\n  if (!editorQuery) {\n    console.log(\"store.editorQuery not set\");\n    return;\n  }\n\n  console.log(\"Saving layout\");\n\n  localStorage.gameData = JSON.stringify({\n    id: Math.random(),\n    layout: editorQuery.serialize(),\n  });\n}\n","import { useEffect } from \"react\";\nimport { saveLayout } from \"../lib/saveLayout\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      console.log(\"Saving layout\");\n      saveLayout();\n    }, 10000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import * as baseComponents from \"../components/user\";\n\nexport const components = {};\n\n// Apply the predefined components to the full list\nObject.assign(components, baseComponents);\n","export function loadGameData() {\n  try {\n    let { gameData } = localStorage;\n\n    if (gameData) {\n      gameData = JSON.parse(gameData);\n    }\n\n    return gameData || null;\n  } catch (err) {\n    return null;\n  }\n}\n","import { Paper, Grid } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Toolbox } from \"../components/Toolbox\";\nimport { SettingsPanel } from \"../components/SettingsPanel\";\n\nimport { Container, Text } from \"../components/user\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"../components/AutoSave\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction Content() {\n  const { query } = useEditor();\n\n  console.log(\"Loading game data\");\n  const gameData = loadGameData() || {};\n  const layoutData = gameData.layout;\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <Grid container>\n      <Grid item xs>\n        <HashRouter>\n          <Frame data={layoutData}>\n            {/*This is the default layout*/}\n            <Element is={Container} padding={5} background=\"#eee\" canvas>\n              <Text text={\"Start dragging components in (and delete me)\"} />\n            </Element>\n          </Frame>\n        </HashRouter>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={undefined}>\n          <Toolbox />\n          <SettingsPanel />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function Edit() {\n  return (\n    <div>\n      <Editor resolver={components}>\n        <AutoSave />\n        <Content />\n      </Editor>\n    </div>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect, useState } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\n\nexport function Play() {\n  const [gameData, setGameData] = useState({} as any);\n  const history = useHistory();\n\n  useEffect(() => {\n    const playGameData = loadGameData();\n\n    // If there is no game data, then switch to the editor\n    if (!playGameData) {\n      history.push(\"/edit\");\n    }\n\n    setGameData(playGameData);\n  }, [history]);\n\n  return (\n    <div>\n      <Editor resolver={components} enabled={false}>\n        <HashRouter>\n          <Frame data={gameData.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../lib/context\";\nimport { saveLayout } from \"../lib/saveLayout\";\n\nexport const Header = () => {\n  const history = useHistory();\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          store.state.drawerOpen = true;\n          store.update();\n        }}\n      >\n        Options\n      </Button>\n      <Button\n        onClick={() => {\n          history.push(\"/edit\");\n        }}\n      >\n        Edit\n      </Button>\n      <Button\n        onClick={() => {\n          history.push(\"/code\");\n        }}\n      >\n        Code\n      </Button>\n      <Button\n        onClick={() => {\n          saveLayout();\n          history.push(\"/play\");\n        }}\n      >\n        Play\n      </Button>\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blueGrey[900],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: blueGrey[100],\n    },\n  },\n});\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\n// import { useHistory } from \"react-router-dom\";\nimport { store } from \"../lib/context\";\nimport { useState } from \"react\";\n\nconst ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameData = {\n    gameData: localStorage.gameData,\n    gameCode: localStorage.gameCode,\n  };\n\n  const [allGameData, setAllGameData] = useState(\n    btoa(JSON.stringify(currentAllGameData))\n  );\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Import or export game data\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameData}\n          onChange={(event) => {\n            setAllGameData(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameData));\n            localStorage.gameData = data.gameData;\n            localStorage.gameCode = data.gameCode;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const OptionsDrawer = () => {\n  // const history = useHistory();\n\n  const [showImportExprt, setShowImportExport] = useState(false);\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.drawerOpen}\n        onClose={() => {\n          store.state.drawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              delete localStorage.gameData;\n              delete localStorage.gameCode;\n              window.location.reload();\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Reset All\"\n              secondary=\"Reset all game configuration\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            onClick={() => {\n              setShowImportExport(true);\n            }}\n          >\n            <ListItemIcon>\n              <ImportExportIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Import / Export\"\n              secondary=\"Import or export your game data\"\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Edit, Play, Code } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { theme } from \"./config/theme\";\nimport { executeCode, setUpdateUIFunction } from \"./lib/game\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n\n    setUpdateUIFunction(store.update);\n    executeCode();\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Context.Provider\n          value={{\n            state: store.state,\n            update: this.update,\n            editorQuery: store.editorQuery,\n          }}\n        >\n          <BrowserRouter>\n            <div>\n              <OptionsDrawer />\n              <Header />\n              <Switch>\n                <Route\n                  path=\"/edit\"\n                  render={() => {\n                    return <Edit />;\n                  }}\n                />\n                <Route\n                  path=\"/code\"\n                  render={() => {\n                    return <Code />;\n                  }}\n                />\n                <Route\n                  path=\"/play\"\n                  render={() => {\n                    return <Play />;\n                  }}\n                />\n                <Route path=\"/\">\n                  <Redirect to=\"/edit\" />\n                </Route>\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </Context.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"gameConfig":{"id":"6b43d66b-453d-4818-84dd-55e0c80ea5f1","name":"Example Game","codeFiles":[{"id":"3e221a9a-43ca-4480-9217-4e86b9145dab","name":"main","code":"//main\n\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = (loadedGameData) => {\n  // Code executed when the application starts up\n  game.data = new GameData(loadedGameData);\n}\n\ngame.initializeGameData = () => {\n  // Code executed when the resetting the game data\n  game.data = new GameData({});\n  game.update();\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n  let additionalPoints = 0;\n\n  // Always getting at least 1 point\n  additionalPoints += 1;\n\n  generators.forEach((gen) => {\n    additionalPoints += gen.tick(game.data.generators[gen.name]);\n  });\n\n  if (game.data.upgrades['Double Output']) {\n    additionalPoints *= 2;\n  }\n\n  game.data.tickPoints = additionalPoints;\n  game.data.points += additionalPoints;\n\n  game.update();\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n\ngame.actions.startOver = () => {\n  game.initializeGameData();\n}\n\ngame.visibilitySources.winCondition = () => {\n  if (game.data.points >= 10000) {\n    return true;\n  }\n  \n  return false;\n}"},{"id":"2d2c84c9-6116-438b-9534-61013678532c","name":"gameData","code":"//gameData\nclass Strings {\n  get customString() {\n    return `You have ${this.points} points (+${this.tickPoints} per tick)`;\n  }\n}\n\nclass GameData extends Strings {\n  constructor(data) {\n    super();\n\n    this._updateData(data);\n\n    // Set the data\n    for (const property in data) {\n      this[property] = data[property];\n    }\n  }\n\n  _updateData() {\n    // Use this to update game data as changes are made\n    this.tickPoints = 0;\n    \n    if (!this.points) {\n      this.points = 0;\n    }\n\n    if (!this.generators) {\n      this.generators = {};\n    }\n\n    generators.forEach((gen) => {\n      if (!this.generators[gen.name]) {\n        this.generators[gen.name] = 0;\n      }\n    });\n    \n    if (!this.upgrades) {\n      this.upgrades = {};\n    }\n  }\n\n  // Can use getters as well for use with variableText\n}"},{"id":"42218392-d210-4591-9367-ea63bb8b2c2c","name":"generators","code":"//Generators\n\nconst generators = [{\n  name: 'Single',\n  tick: (count) => {\n    return count\n  },\n  cost: (count) => {\n    return (count + 1) * 10;\n  }\n}, {\n  name: 'Double',\n  tick: (count) => {\n    return count * 10\n  },\n  cost: (count) => {\n    return (count + 1) * 100;\n  }\n}, {\n  name: 'Tripple',\n  tick: (count) => {\n    return count * 100\n  },\n  cost: (count) => {\n    return (count + 1) * 1000;\n  }\n}];\n\ngame.dataSources.generators = () => {\n  return generators.map((gen) => {\n    const count = game.data.generators[gen.name];\n\n    return {\n      name: gen.name,\n      cost: {\n        data: () => {\n          return `${gen.cost(count)} (${count})`;\n        }\n      },\n      action: {\n        text: 'Buy',\n        onClickAction: 'buyGenerator',\n      },\n      generator: gen,\n    }\n  })\n};\n\ngame.actions.buyGenerator = (context) => {\n  const count = game.data.generators[context.name];\n  const cost = context.generator.cost(count);\n\n  if (game.data.points < cost) {\n    alert('Cannot afford');\n    return;\n  }\n\n  game.data.points -= cost;\n\n  game.data.generators[context.name]++;\n};"},{"id":"c0caf314-e31a-4832-9509-e9db13ee6ac7","name":"upgrades","code":"//Upgrades\n\nconst upgrades = [{\n  name: 'Double Output',\n  tick: () => {\n    game.data.points *= 2;\n  },\n  cost: () => {\n    return 1000;\n  }\n}];\n\ngame.dataSources.upgrades = () => {\n  return upgrades\n  .filter((upgrade) => {\n    return !game.data.upgrades[upgrade.name];\n  })\n  .map((upgrade) => {\n  return {\n    name: upgrade.name,\n    cost: {\n      data: () => {\n        return `${upgrade.cost()}`;\n      }\n    },\n    action: {\n      text: 'Buy',\n      onClickAction: 'buyUpgrade',\n    },\n    upgrade,\n  }\n})\n};\n\ngame.actions.buyUpgrade = (context) => {\nconst cost = context.upgrade.cost();\n\nif (game.data.points < cost) {\nalert('Cannot afford');\nreturn;\n}\n\ngame.data.points -= cost;\n\ngame.data.upgrades[context.name] = true;\n};"}],"layout":"{\"ROOT\":{\"type\":{\"resolvedName\":\"Container\"},\"isCanvas\":true,\"props\":{\"padding\":5},\"displayName\":\"Element\",\"custom\":{},\"hidden\":false,\"nodes\":[\"Quan6J4r2\",\"4dJNbqp4d\",\"9fQ4xiJs-\",\"p-bnADcGL\",\"jkSV3LQCD\",\"ptPRc7KGd\"],\"linkedNodes\":{}},\"dD0PpKm76\":{\"type\":{\"resolvedName\":\"Button\"},\"isCanvas\":false,\"props\":{\"size\":\"small\",\"variant\":\"contained\",\"color\":\"primary\",\"text\":\"Start Over\",\"onClickAction\":\"startOver\"},\"displayName\":\"Button\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"jkSV3LQCD\"},\"4dJNbqp4d\":{\"type\":{\"resolvedName\":\"VariableText\"},\"isCanvas\":false,\"props\":{\"dataProperty\":\"customString\",\"subProperty\":\"\",\"customStyleName\":\"e357d592-ca53-4150-b016-a423c9f3f7e8\"},\"displayName\":\"VariableText\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"-nOYRFbMu\":{\"type\":{\"resolvedName\":\"Table\"},\"isCanvas\":false,\"props\":{\"columnNames\":[{\"name\":\"Name\",\"property\":\"name\",\"type\":\"string\"},{\"name\":\"Cost\",\"property\":\"cost\",\"type\":\"variableString\"},{\"name\":\"Action\",\"property\":\"action\",\"type\":\"button\"}],\"itemSource\":\"generators\",\"updateVariable\":false,\"updateVarible\":true},\"displayName\":\"Table\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"9fQ4xiJs-\"},\"Quan6J4r2\":{\"type\":{\"resolvedName\":\"AppBar\"},\"isCanvas\":false,\"props\":{\"tabs\":[{\"name\":\"Main\",\"path\":\"main\",\"to\":\"/main\",\"default\":true},{\"name\":\"Upgrades\",\"path\":\"upgrades\",\"to\":\"/upgrades\"},{\"name\":\"Options\",\"path\":\"options\",\"to\":\"/options\"}],\"triggerUpdate\":false},\"displayName\":\"AppBar\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"9fQ4xiJs-\":{\"type\":{\"resolvedName\":\"PathContainer\"},\"isCanvas\":true,\"props\":{\"path\":\"/main\"},\"displayName\":\"Element\",\"custom\":{},\"hidden\":false,\"nodes\":[\"-nOYRFbMu\"],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"5Mbwp1Jl5\":{\"type\":{\"resolvedName\":\"Table\"},\"isCanvas\":false,\"props\":{\"columnNames\":[{\"name\":\"Name\",\"property\":\"name\",\"type\":\"string\"},{\"name\":\"Cost\",\"property\":\"cost\",\"type\":\"variableString\"},{\"name\":\"Action\",\"property\":\"action\",\"type\":\"button\"}],\"itemSource\":\"upgrades\",\"updateVariable\":false,\"updateVarible\":true},\"displayName\":\"Table\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"p-bnADcGL\"},\"p-bnADcGL\":{\"type\":{\"resolvedName\":\"PathContainer\"},\"isCanvas\":true,\"props\":{\"path\":\"/upgrades\"},\"displayName\":\"Element\",\"custom\":{},\"hidden\":false,\"nodes\":[\"5Mbwp1Jl5\"],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"jkSV3LQCD\":{\"type\":{\"resolvedName\":\"PathContainer\"},\"isCanvas\":true,\"props\":{\"path\":\"/options\"},\"displayName\":\"Element\",\"custom\":{},\"hidden\":false,\"nodes\":[\"dD0PpKm76\"],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"ptPRc7KGd\":{\"type\":{\"resolvedName\":\"Container\"},\"isCanvas\":true,\"props\":{\"padding\":\"0px\",\"visibilitySource\":\"winCondition\"},\"displayName\":\"Element\",\"custom\":{},\"hidden\":false,\"nodes\":[\"pcIC9h_cX1\"],\"linkedNodes\":{},\"parent\":\"ROOT\"},\"pcIC9h_cX1\":{\"type\":{\"resolvedName\":\"Text\"},\"isCanvas\":false,\"props\":{\"text\":\"You Win! You got 10000 points.\",\"customStyleName\":\"aaa895d2-b829-477c-adca-5e7e63323077\"},\"displayName\":\"Text\",\"custom\":{},\"hidden\":false,\"nodes\":[],\"linkedNodes\":{},\"parent\":\"ptPRc7KGd\"}}","baseStyles":{"Button":{"margin":"0em"},"Text":{"margin":"0em"},"Container":{"padding":"0em"},"GridItem":{"padding":"0em","height":"100%"},"PathContainer":{"margin":"0em"},"VariableText":{"margin":"0em"}},"customStyles":{},"customComponents":[]}}
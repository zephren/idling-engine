{"version":3,"sources":["styles/theme.ts","lib/dataStorage.ts","lib/localSettings.ts","data/customStyles.ts","config/useSetupComponent.ts","data/documentation.ts","lib/PluginRegistry/index.ts","lib/saveGameConfig.ts","views/Code.tsx","views/Documentation/Breadcrumbs.tsx","views/Documentation/components-md.ts","views/Documentation/templates/link.ts","views/Documentation/routes.ts","views/Documentation/game-md/index.ts","views/Documentation/game-md/configure.ts","views/Documentation/game-md/data.ts","views/Documentation/game-md/actions.ts","views/Documentation/game-md/dataSources.ts","views/Documentation/game-md/visibilitySources.ts","views/Documentation/game-md/initialize.ts","views/Documentation/game-md/initializeGameData.ts","views/Documentation/game-md/tick.ts","views/Documentation/customComponents-md.ts","views/Documentation/index-md.ts","views/Documentation/index.tsx","core/Settings/CustomRepeatSetting.ts","core/Controls/Dropdown.tsx","core/Settings/DropdownSetting.tsx","core/Settings/SliderSetting.tsx","core/Settings/StringSetting.tsx","actions/styleDrawer.ts","core/Settings/StyleSetting.tsx","core/Settings/SwitchSetting.tsx","core/Settings/index.tsx","components/Toolbox/getToolboxComponents.tsx","actions/localSettings.ts","components/Toolbox/index.tsx","components/SettingsPanel.tsx","components/CustomComponents/AppBar/AppBarDocumentation.ts","components/CustomComponents/AppBar/ToolBarTabs.tsx","components/CustomComponents/AppBar/index.tsx","config/useCustomStyle.ts","components/CustomComponents/Button/ButtonDocumentation.ts","components/CustomComponents/Button/index.tsx","components/CustomComponents/Button/ButtonSettings.tsx","components/CustomComponents/Text/TextSettings.tsx","components/CustomComponents/Text/TextDocumentation.ts","components/CustomComponents/Text/index.tsx","components/CustomComponents/Card/index.tsx","lib/checkVisibility.ts","components/CustomComponents/Container/ContainerDocumentation.ts","components/CustomComponents/Container/index.tsx","components/CustomComponents/Container/ContainerSettings.tsx","components/CustomComponents/Grid/GridSettings.tsx","components/CustomComponents/Grid/GridContainerDocumentation.ts","components/CustomComponents/Grid/GridItemDocumentation.ts","components/CustomComponents/Grid/index.tsx","components/CustomComponents/PathContainer/PathContainerDocumentation.ts","components/CustomComponents/PathContainer/index.tsx","components/CustomComponents/Table/TableDocumentation.ts","components/CustomComponents/Table/index.tsx","components/CustomComponents/VariableText/VariableTextSettings.tsx","components/CustomComponents/VariableText/VariableTextDocumentation.ts","components/CustomComponents/VariableText/index.tsx","views/Edit/AutoSave.tsx","styles/shared.ts","views/Edit/index.tsx","views/Play.tsx","components/Header.tsx","components/OptionsDrawer/ImportExportDialog.tsx","components/OptionsDrawer/ConfirmResetDialog.tsx","config/useUpdate.ts","components/OptionsDrawer/CustomComponentsDialog.tsx","components/OptionsDrawer/GameSettingsDialog.tsx","components/OptionsDrawer/index.tsx","components/StyleDrawer.tsx","lib/loadCustomComponents.ts","data/initial/code.ts","lib/loadGameConfig.ts","lib/initializeApp.ts","App.tsx","index.tsx","data/data.ts","lib/log.ts","data/game.ts","lib/GameManager.ts","lib/context.ts"],"names":["colors","primary","blueGrey","secondary","theme","createMuiTheme","palette","main","overrides","MuiSwitch","switchBase","color","colorSecondary","track","opacity","backgroundColor","dataStorage","key","defaultValue","localStorage","JSON","parse","value","stringify","saveLocalSettings","set","store","state","localSettings","customStyles","useSharedStyles","makeStyles","componentEditing","boxShadow","minHeight","minWidth","padding","componentSelected","componentClass","editing","selected","sharedClasses","additonalClasses","flags","highlightComponents","join","useSetupComponent","properties","additionalClasses","useContext","Context","useNode","events","connectors","connect","drag","useEditor","enabled","options","componentClassName","refFn","ref","documentation","components","component","this","componentName","pluginRegistry","_components","_componentsArray","Component","addComponent","componentsArray","push","window","saveGameConfig","a","editorQuery","console","debug","layout","serialize","data","gameConfig","baseStyles","baseStyle","Object","assign","customComponents","codeFiles","gameManager","save","useStyles","fileName","fontSize","typography","Code","history","useHistory","classes","useState","updateValue","update","deletingFiles","setDeletingFiles","selectedFiles","setSelectedFiles","files","deleteFiles","newFiles","setFiles","filter","item","index","useEffect","interval","setInterval","clearInterval","executeCode","then","game","initialize","Grid","container","style","position","height","width","sm","List","dense","overflowY","top","bottom","map","file","location","pathname","includes","id","ListItem","cursor","onClick","newSelectedFiles","lastCodeFile","handleFileClick","ListItemIcon","ListItemText","TextField","name","onChange","event","target","size","inputProps","className","Divider","button","length","addCodeFile","checked","background","path","render","mode","code","editorProps","$blockScrolling","tabSize","commands","beautify","focus","to","Breadcrumbs","parts","cumulativePath","aria-label","part","pathPart","getComponents","keys","link","text","routes","breadcrumbs","match","params","children","md","renderers","props","href","language","materialDark","paper","Documentation","log","Paper","basename","route","plugins","CustomRepeatSetting","items","Dropdown","label","itemElements","MenuItem","labelElement","InputLabel","shrink","FormControl","fullWidth","Select","DropdownSetting","property","itemsFn","setProp","Box","display","alignItems","flexGrow","IconButton","SliderSetting","min","max","step","Slider","_","newValue","StringSetting","openStyleDrawer","styleDrawerOpen","previousHighlightComponents","styleDrawerComponentName","styleDrawerStyleId","styleId","StyleSetting","styleName","variant","SwitchSetting","Switch","Settings","config","settingsRows","error","Error","configItem","remainingProps","TableRow","TableCell","scope","type","TableContainer","TableBody","getToolboxComponents","reduce","acc","toolboxItem","toggleLocalSetting","settingProperty","Toolbox","actions","selectedComponent","setSelectedComponent","px","py","direction","spacing","Typography","justifyContent","tickWhileEditing","selectNode","propertyConfigDefinitions","margin","BaseProperties","definition","mt","pb","xs","Chip","callback","newProps","SettingsPanel","query","currentNodeId","nodes","settings","related","isDeletable","node","React","createElement","delete","AppBarDocumentation","ToolBarTabs","tabs","defaultTab","tab","default","parseInt","getCurrentTab","currentTabIndex","Tabs","visibilitySource","visibilitySources","root","spacer","fullHeight","mixins","toolbar","AppBar","setTimeout","Toolbar","craft","triggerUpdate","setDefault","create","registerCustomComponent","useCustomStyle","base","styleGroup","customStyleName","setStyle","customStyle","customId","ButtonDocumentation","Button","onClickAction","actionContext","action","styleProperties","TextDocumentation","Text","rules","canDrag","CardTop","CardContent","CardBottom","CardActions","canMoveIn","incomingNode","checkVisibility","extraStyle","ContainerDocumentation","Container","is","canvas","sizes","GridContainerDocumentation","GridItemDocumentation","GridContainer","GridItem","PathContainerDocumentation","PathContainer","visible","float","TableDocumentation","TableRows","columnNames","rows","currentContext","column","itemIndex","cells","itemProperty","err","message","Table","itemSource","headerRow","itemSourceFunction","dataSources","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","VariableTextDocumentation","VariableText","dataProperty","subProperty","undefined","AutoSave","gameArea","Content","running","right","Edit","resolver","Play","Header","navigate","optionsDrawerOpen","ImportExportDialog","onClose","currentAllGameConfig","btoa","allGameConfig","setAllGameConfig","Dialog","open","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","lastGameId","reload","ConfirmResetDialog","getAll","games","useUpdate","custom","CustomComponent","icon","status","ok","indexOf","splice","url","CustomComponentsDialog","newComponentUrl","setNewComponentUrl","checkComponent","Promise","accept","axios","get","result","response","checkComponentUrls","requests","all","saveCustomComponents","GameSettingsDialog","setName","listGames","ButtonOption","Icon","OptionsDrawer","setGames","showImportExprt","setShowImportExport","showConfirmReset","setShowConfirmReset","showCustomComponents","setShowCustomComponents","showGameSettings","setShowGameSettings","Drawer","SettingsIcon","LoopIcon","initializeGameData","ImportExportIcon","AppsIcon","AddIcon","packageJson","version","supportedComponents","StyleDrawer","selectedStyle","updateSettings","anchor","BackdropProps","invisible","uuid","Math","random","styleIds","nextStyle","loadCustomComponents","loadingPromises","errors","groupCollapsed","groupEnd","customComponent","p","resolve","s","document","src","onload","onerror","head","append","initialCode","setupNewGameData","loadComponentProperties","load","gameData","newLayout","resolvedName","values","otherComponent","validateLayout","layoutData","cleanMissingComponents","loadCustomComponentData","gameId","storedGameData","loadGameConfig","warn","initializeApp","init","setUpdateUIFunction","storedLocalSettings","loadLocalSettings","App","ready","showCustomComponentsDialog","setState","enqueueSnackbar","Provider","flexDirection","withSnackbar","core","craftjs","notistackRef","createRef","onClickDismiss","current","closeSnackbar","ReactDOM","ThemeProvider","CssBaseline","maxSnack","autoHideDuration","getElementById","logEvents","EventEmitter","c","_customized","co","LogLevels","DEBUG","INFO","WARN","ERROR","logLevels","logLevel","args","info","emit","tickInterval","configure","isInitialized","isGameDataInitialized","_initialize","loadedGameData","fn","_initializeGameData","_tick","runningInterval","ticking","startTicking","tick","fileLineCounts","finalCode","split","lines","numberWidth","floor","line","toString","padEnd","eval","loadGameData","handleError","stack","snackbarMessage","lineNumber","stackLines","i","matches","lineTotal","fileLineCount","actualLine","col","preventDuplicate","saveGameData","on","db","setReady","openDB","upgrade","_upgrade","blocked","_blocked","blocking","_blocking","terminated","_terminated","errorCode","oldVersion","newVersion","transaction","objectStoreNames","contains","createObjectStore","keyPath","gamesStore","objectStore","done","put","gamesDataStore","resetGameStore","confirm","clear","setGameLayout","createContext"],"mappings":"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","file":"static/js/main.1047152d.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nconst colors = {\n  primary: blueGrey[900],\n  secondary: blueGrey[100],\n};\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: colors.primary,\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: colors.secondary,\n    },\n  },\n  overrides: {\n    MuiSwitch: {\n      switchBase: {\n        // Controls default (unchecked) color for the thumb\n        color: colors.secondary,\n      },\n      colorSecondary: {\n        \"&$checked\": {\n          // Controls checked color for the thumb\n          color: colors.primary,\n        },\n      },\n      track: {\n        // Controls default (unchecked) color for the track\n        opacity: 0.2,\n        backgroundColor: colors.primary,\n        \"$checked$checked + &\": {\n          // Controls checked color for the track\n          opacity: 0.5,\n          backgroundColor: colors.primary,\n        },\n      },\n    },\n  },\n});\n","class DataStorage {\n  get(key: string, defaultValue?: any) {\n    return localStorage[key] ? JSON.parse(localStorage[key]) : defaultValue;\n  }\n\n  set(key: string, value: any) {\n    localStorage[key] = JSON.stringify(value);\n  }\n\n  delete(key: string) {\n    delete localStorage[key];\n  }\n}\n\nexport const dataStorage = new DataStorage();\n","import { store } from \"./context\";\nimport { dataStorage } from \"./dataStorage\";\n\nexport function loadLocalSettings() {\n  const storedLocalSettings = dataStorage.get(\"localSettings\", undefined);\n\n  // Apply the stored settings or just use the defaults\n  if (storedLocalSettings) {\n    console.groupCollapsed(\"Stored Local Settings\");\n    console.log(JSON.stringify(storedLocalSettings, null, 2));\n    store.state.localSettings = Object.assign(\n      store.state.localSettings,\n      storedLocalSettings\n    );\n    console.groupEnd();\n  }\n}\n\nexport function saveLocalSettings() {\n  dataStorage.set(\"localSettings\", store.state.localSettings);\n}\n","export const customStyles: {\n  [key: string]: any;\n} = {};\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Context, store } from \"../lib/context\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px rgba(255, 50, 50, 1)\",\n    minHeight: \"5px\",\n    minWidth: \"5px\",\n    padding: \"10px!important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nfunction componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing && store.state.localSettings.flags.highlightComponents\n      ? sharedClasses.componentEditing\n      : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n\ntype Properties = {\n  additionalClasses?: string[];\n};\n\nexport function useSetupComponent(properties: Properties = {}) {\n  const { additionalClasses = [] } = properties;\n\n  const store = useContext(Context);\n\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state: any) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state: any) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n  const componentClassName = componentClass(\n    enabled,\n    selected,\n    sharedClasses,\n    additionalClasses\n  );\n\n  const refFn = (ref: any) => connect(drag(ref));\n\n  return {\n    refFn,\n    // connect,\n    // drag,\n    selected,\n    enabled,\n    // sharedClasses,\n    componentClassName,\n    store,\n  };\n}\n","class Documentation {\n  components: any = {};\n\n  addComponent(component: any) {\n    this.components[component.componentName] = {\n      componentName: component.componentName,\n      component,\n    };\n  }\n}\n\nexport const documentation = new Documentation();\n","import { useSetupComponent } from \"../../config/useSetupComponent\";\nimport { documentation } from \"../../data/documentation\";\n\nclass PluginRegistry {\n  _components: any = {};\n  _componentsArray: any[] = [];\n\n  get components() {\n    return this._components;\n  }\n\n  get componentsArray() {\n    return this._componentsArray;\n  }\n\n  registerPlugin() {}\n\n  registerCustomComponent(Component: any) {\n    // console.debug(`Registering custom component ${Component.componentName}`);\n    this._components[Component.componentName] = Component;\n\n    documentation.addComponent(Component);\n\n    this.componentsArray.push(Component);\n  }\n}\n\nexport const pluginRegistry = new PluginRegistry();\n\n(window as any).pluginRegistry = pluginRegistry;\n(window as any).useSetupComponent = useSetupComponent;\n","import { store } from \"./context\";\nimport { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { pluginRegistry } from \"./PluginRegistry\";\nimport { gameManager } from \"./GameManager\";\n\nexport async function saveGameConfig() {\n  const { editorQuery } = store;\n\n  console.debug(\"Saving game data\");\n\n  let layout;\n\n  if (editorQuery) {\n    // Layout is a string\n    layout = editorQuery.serialize();\n\n    // If this condition matches, then there was some error\n    if (layout === \"{}\") {\n      layout = null;\n    }\n  } else {\n    // This is ok for the editorQuery to not be available, just need to use what's already there\n    // Just means that the editor was never opened to change anything\n    layout = data.gameConfig.layout;\n  }\n\n  const baseStyles: any = {};\n\n  for (const componentName in pluginRegistry.components) {\n    // Kinda hacky but works\n    const component = (pluginRegistry.components as any)[componentName];\n\n    baseStyles[componentName] = component.baseStyle;\n  }\n\n  Object.assign(data.gameConfig, {\n    layout,\n    baseStyles,\n    customStyles,\n    customComponents: data.customComponents,\n    codeFiles: data.gameConfig.codeFiles,\n  });\n\n  await gameManager.save(data.gameConfig);\n}\n\n/**\n * Get the gameData and only update the customComponents\n */\nexport async function saveCustomComponents() {\n  gameManager.save(data.gameConfig);\n}\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport beautify from \"ace-builds/src-noconflict/ext-beautify\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Switch as MUISwitch,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { data } from \"../data/data\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context, store } from \"../lib/context\";\nimport { addCodeFile, executeCode, game } from \"../data/game\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\nimport { saveGameConfig } from \"../lib/saveGameConfig\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  fileName: {\n    fontSize: theme.typography.fontSize,\n  },\n}));\n\nexport function Code() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [updateValue, update] = useState(false);\n  const [deletingFiles, setDeletingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles]: [any, any] = useState({});\n  useContext(Context);\n\n  let files = data.gameConfig.codeFiles;\n\n  function save() {\n    saveGameConfig();\n  }\n\n  function setFiles(newFiles: string[]) {\n    files = newFiles;\n    data.gameConfig.codeFiles = newFiles;\n  }\n\n  function handleFileClick(id: string, index: number) {\n    if (deletingFiles) {\n      const newSelectedFiles = { ...selectedFiles };\n      newSelectedFiles[index] = !newSelectedFiles[index];\n      setSelectedFiles(newSelectedFiles);\n      // update(!updateValue);\n    } else {\n      store.state.localSettings.lastCodeFile = id;\n      saveLocalSettings();\n      history.push(`/code/${id}`);\n    }\n  }\n\n  function deleteFiles() {\n    const newFiles = files.filter((item: any, index: number) => {\n      return !selectedFiles[index];\n    });\n\n    setFiles(newFiles);\n    setSelectedFiles({});\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode().then(() => {\n        game.initialize(game.data);\n      });\n    };\n  }, []);\n\n  return (\n    <Grid\n      container\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      <Grid item sm={2} style={{ position: \"relative\" }}>\n        <List\n          dense={true}\n          style={{\n            overflowY: \"auto\",\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"0px\",\n            bottom: \"0px\",\n          }}\n        >\n          {files.map((file: any, index: number) => {\n            const selected = history.location.pathname.includes(file.id);\n\n            return (\n              <ListItem\n                key={file.id}\n                style={{ cursor: \"pointer\" }}\n                selected={selected}\n                onClick={() => {\n                  handleFileClick(file.id, index);\n                }}\n              >\n                {deletingFiles && (\n                  <ListItemIcon>\n                    {selectedFiles[index] ? (\n                      <CheckBoxIcon />\n                    ) : (\n                      <CheckBoxOutlineBlankIcon />\n                    )}\n                  </ListItemIcon>\n                )}\n                {selected ? (\n                  <ListItemText\n                    primary={\n                      <TextField\n                        value={file.name}\n                        onChange={(event) => {\n                          file.name = event.target.value;\n                          update(!updateValue);\n                        }}\n                        size=\"small\"\n                        inputProps={{ className: classes.fileName }}\n                      />\n                    }\n                  />\n                ) : (\n                  <ListItemText primary={file.name} />\n                )}\n              </ListItem>\n            );\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              const name = `New File ${files.length}`;\n\n              addCodeFile(name, `//${name}`);\n\n              update(!updateValue);\n            }}\n          >\n            <ListItemText primary=\"+ New File\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemText primary=\"Delete Files\" />\n            <MUISwitch\n              onChange={(event) => {\n                if (deletingFiles) {\n                  deleteFiles();\n                }\n\n                setDeletingFiles(event.target.checked);\n              }}\n              checked={deletingFiles}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary=\"Beautify\" secondary=\"Ctrl + Shift + B\" />\n          </ListItem>\n        </List>\n      </Grid>\n      <Grid item sm={10} style={{ background: \"red\", position: \"relative\" }}>\n        <Switch>\n          {files.map((file: any) => {\n            return (\n              <Route\n                key={file.id}\n                path={`/code/${file.id}`}\n                render={() => {\n                  return (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        top: \"0px\",\n                        bottom: \"0px\",\n                      }}\n                    >\n                      <AceEditor\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        onChange={(code: string) => {\n                          file.code = code;\n                        }}\n                        name=\"Code Editor\"\n                        editorProps={{ $blockScrolling: true }}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          fontSize: \"1.1em\",\n                        }}\n                        value={file.code}\n                        tabSize={2}\n                        commands={beautify.commands}\n                        focus\n                      />\n                    </div>\n                  );\n                }}\n              />\n            );\n          })}\n          <Route path=\"/code\">\n            <Redirect to={`/code/${files[0].id}`} />\n          </Route>\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Breadcrumbs as MUIBreadcrumbs } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport function Breadcrumbs({ parts }: any) {\n  let cumulativePath: any[] = [];\n\n  return (\n    <MUIBreadcrumbs aria-label=\"breadcrumb\">\n      {parts.map((part: any, index: number) => {\n        const [name, pathPart] = part;\n\n        if (pathPart) {\n          cumulativePath.push(pathPart);\n        }\n\n        // if (index < parts.length) {\n        return (\n          <Link\n            key={cumulativePath.join(\"\")}\n            to={`/${cumulativePath.join(\"/\")}`}\n          >\n            {name}\n          </Link>\n        );\n        // }\n\n        // return <Typography color=\"textPrimary\">{name}</Typography>;\n      })}\n    </MUIBreadcrumbs>\n  );\n}\n","import { documentation } from \"../../data/documentation\";\n\nexport function getComponents() {\n  const componentsDocs = Object.keys(documentation.components).map(\n    (componentName) => {\n      const component = documentation.components[componentName];\n\n      return `[${component.componentName}](/components/${component.componentName})`;\n    }\n  );\n\n  return componentsDocs;\n}\n\nexport default function components() {\n  return `\n# Components\n${getComponents().join(\"\\n\\n\")}\n`;\n}\n","export function link(text: string, path: string) {\n  return `[${text}](${path})`;\n}\n","import { documentation } from \"../../data/documentation\";\nimport components from \"./components-md\";\nimport game from \"./game-md\";\nimport customComponents from \"./customComponents-md\";\nimport index from \"./index-md\";\n\nexport function routes() {\n  return [\n    {\n      path: \"/components/:componentName\",\n      breadcrumbs: (history: any) => {\n        const { component } = documentation.components[\n          history.match.params.componentName\n        ];\n\n        return [\n          [\"Documentation\", \"\"],\n          [\"Components\", \"components\"],\n          [component.componentName, component.componentName],\n        ];\n      },\n      children: (history: any) => {\n        const { component } = documentation.components[\n          history.match.params.componentName\n        ];\n\n        return component.documentation.md;\n      },\n    },\n    {\n      path: \"/components\",\n      breadcrumbs: () => [\n        [\"Documentation\", \"\"],\n        [\"Components\", \"components\"],\n      ],\n      children: () => components(),\n    },\n    {\n      path: \"/game\",\n      breadcrumbs: () => [\n        [\"Documentation\", \"\"],\n        [\"Game\", \"game\"],\n      ],\n      children: () => game(),\n    },\n    {\n      path: \"/customComponents\",\n      breadcrumbs: () => [\n        [\"Documentation\", \"\"],\n        [\"Custom Components\", \"customComponents\"],\n      ],\n      children: () => customComponents(),\n    },\n    {\n      path: \"/\",\n      breadcrumbs: () => [[\"Documentation\", \"\"]],\n      children: () => index(),\n    },\n  ];\n}\n","import configure from \"./configure\";\nimport data from \"./data\";\nimport actions from \"./actions\";\nimport dataSources from \"./dataSources\";\nimport visibilitySources from \"./visibilitySources\";\nimport initialize from \"./initialize\";\nimport initializeGameData from \"./initializeGameData\";\nimport tick from \"./tick\";\n\nexport default function game() {\n  return `\n# Game\n\nEvery game starts with a \\`game\\` object that you configure through the code editor. The following sections will explain how to use the the various properties of of the \\`game\\` object.\n\n${configure()}\n${data()}\n${actions()}\n${dataSources()}\n${visibilitySources()}\n${initialize()}\n${initializeGameData()}\n${tick()}\n`;\n}\n","export default function configure() {\n  return `\n## game.configure\n\n\\`Function\\`\n\nUse this function to set global properties that configure how the game will run.\n\n~~~js\ngame.configure = (settings) => {\n  ...\n}\n~~~\n\n### settings.tickInterval\n\nHow frequently the \\`game.tick\\` function should be called.\n\n~~~js\nsettings.tickInterval = 3000;\n~~~\n`;\n}\n","export default function data() {\n  return `\n## game.data\n\n\\`Object\\`\n\nThis can be any object that contains the state of the game. Getters can be used as well for getting cusomtized values without storing a full customized value.\n\nThe starter template code builds a class that is used to contain the game data. This helps organize the code to be able to reload the game data and update it as necessary.  \n`;\n}\n","export default function actions() {\n  return `\n## game.actions\n\n\\`Object\\`\n\nThese are functions that handle actions you are allowing the user to perform.\n\nHere is an example of a clicking activity for the player that adds one every time to a ~money~ property\n\n~~~js\ngame.actions.mainClick = () => {\n  game.data.money += 1;\n};\n~~~\n\nAlternatively you could modify the amount gained based on the number of clicks.\n\n~~~js\ngame.actions.mainClick = () => {\n  game.data.money += Math.ceil(game.data.totalClicks / 100);\n  game.data.totalClicks += 1;\n};\n~~~\n`;\n}\n","export default function dataSources() {\n  return `\n## dataSources\n\n\\`Object\\`\n\nThese are functions that return objects that represent the data to be rendered. The format of the returned data will depend on what is using it.\n\n### Types\n\nThe following are the different formats for the standard components\n\n#### For Tables\n\n\\`Array of objects\\`\n\nYou have some flexibility in how you name the properties as the table component allows you to select the properties and how they are used, per colunmn\n\nTHe following example assumes there is an array of \\`items\\` that represents things the player can buy.\n\n~~~js\ngame.dataSources.items = () => {\n  return items.map((item) => {\n    // Items and counts that the player has bought\n    // They are stored in an object, keyed by the item name\n    const count = game.data.item[item.name];\n\n    return {\n      name: item.name,\n      cost: {\n        data: () => {\n          return \\`\\${item.cost(count)} (\\${count})\\`;\n        }\n      },\n      action: {\n        text: 'Buy',\n        onClickAction: 'buyItem', // This is defined as part of game.actions\n      },\n    }\n  })\n};\n\n~~~\n`;\n}\n","export default function visibilitySources() {\n  return `\n## visibilitySources\n\n\\`Object\\`\n\nThese are functions that return a boolean value to indicate whether a component should be visible or not.\n\n~~~js\ngame.visibilitySources.item1Feature = () => {\n  // Returns true if the player has bought item1\n  return !!game.data.items.item1;\n}\n~~~\n`;\n}\n","export default function initialize() {\n  return `\n## initialize\n\n\\`Function\\`\n\nThis is code executed when the game starts up. Saved player game data is passed in as a parameter so that it can be processed to resume the last game state.\n\nThis examples is creating an instance of a class \\`GameData\\` and using the loadedGameData. The instance is set to the \\`game.data\\` property.\n\n~~~js\ngame.initialize = (loadedGameData) => {\n  game.data = new GameData(loadedGameData);\n}\n~~~\n`;\n}\n","export default function initializeGameData() {\n  return `\n## initializeGameData\n\n\\`Function\\`\n\nThis is code executed when a new game is started. It can also be called manually to reset the game.\n\n~~~js\ngame.initializeGameData = () => {\n  game.data = new GameData({});\n  game.update();\n}\n~~~\n`;\n}\n","export default function tick() {\n  return `\n## tick\n\\`Function\\`\n\nThis is the function that is executed at the tick interval. This should be used to update any game data at the set \\`game.settings.tickInterval\\`.\n\n~~~js\ngame.tick = () => {\n  // Free money!\n  game.data.money += 1;\n}\n~~~\n`;\n}\n","export default function components() {\n  return `\n# Custom Components\n...how to implement\n`;\n}\n","import { getComponents } from \"./components-md\";\nimport { link } from \"./templates/link\";\n\nexport default function index() {\n  return `\n# Idling Engine\n\n## Game Config/Code\n\nThis section details the properties of the game object and their configuration.\n\n${link(\"More >\", \"/game\")}\n\n## Custom Components\n\nIf you are daring enough, this section explains how to implment your own custom components.\n\n${link(\"More >\", \"/customComponents\")}\n\n## Components\n${getComponents().join(\"\\n\\n\")}\n  `;\n}\n","import { Container, makeStyles, Paper } from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport { routes } from \"./routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst renderers = {\n  link: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>;\n  },\n  code: ({ language, value }: any) => {\n    return (\n      <SyntaxHighlighter\n        style={materialDark}\n        language={language}\n        children={value}\n      />\n    );\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"1em\",\n  },\n}));\n\nexport function Documentation() {\n  const classes = useStyles();\n\n  console.log(\"Documentation render\");\n\n  function renderRoutes() {\n    return routes().map((route: any) => (\n      <Route\n        key={route.path}\n        path={route.path}\n        render={(history) => (\n          <>\n            <Breadcrumbs parts={route.breadcrumbs(history)} />\n            <ReactMarkdown\n              plugins={[]}\n              children={route.children(history)}\n              renderers={renderers}\n            />\n          </>\n        )}\n      />\n    ));\n  }\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <BrowserRouter basename=\"/idling-engine/documentation\">\n          <div className=\"markdown-container\">\n            <Switch>{renderRoutes()}</Switch>\n          </div>\n        </BrowserRouter>\n      </Paper>\n    </Container>\n  );\n}\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport const Dropdown = ({ value, items, label, onChange }: any) => {\n  const itemElements = [];\n\n  for (const item of items) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    itemElements.push(\n      <MenuItem key={name} value={value}>\n        {name}\n      </MenuItem>\n    );\n  }\n\n  let labelElement = null;\n  if (label) {\n    labelElement = <InputLabel shrink>{label}</InputLabel>;\n  }\n\n  return (\n    <FormControl fullWidth>\n      {labelElement}\n      <Select value={value || \"\"} onChange={onChange}>\n        {itemElements}\n      </Select>\n    </FormControl>\n  );\n};\n","import { Box, IconButton } from \"@material-ui/core\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\ninterface Props {\n  property: any;\n  value: any;\n  itemsFn: () => { name: string; value: any }[];\n  setProp: any;\n}\n\nexport const DropdownSetting = ({\n  property,\n  value,\n  itemsFn,\n  setProp,\n}: Props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={itemsFn()}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import { Slider } from \"@material-ui/core\";\n\nexport const SliderSetting = ({\n  property,\n  value,\n  min,\n  max,\n  step,\n  setProp,\n}: any) => {\n  return (\n    <Slider\n      value={value || 7}\n      step={step}\n      min={min}\n      max={max}\n      onChange={(_, newValue) => {\n        setProp((props: any) => (props[property] = newValue));\n      }}\n    />\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => {\n          props[property] = event.target.value;\n        });\n      }}\n    />\n  );\n};\n","import { customStyles } from \"../data/customStyles\";\nimport { store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function openStyleDrawer(options: any = {}) {\n  store.state.localSettings.flags.styleDrawerOpen = true;\n  store.state.localSettings.flags.previousHighlightComponents =\n    store.state.localSettings.flags.highlightComponents;\n  store.state.localSettings.flags.highlightComponents = false;\n\n  if (options.componentName) {\n    store.state.localSettings.styleDrawerComponentName = options.componentName;\n    store.state.localSettings.styleDrawerStyleId = options.styleId || \"\";\n\n    customStyles[options.componentName] =\n      customStyles[options.componentName] || {};\n  }\n\n  saveLocalSettings();\n\n  store.update();\n}\n\nexport function closeStyleDrawer() {\n  store.state.localSettings.flags.styleDrawerOpen = false;\n  store.state.localSettings.flags.highlightComponents =\n    store.state.localSettings.flags.previousHighlightComponents;\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { Box, Button, IconButton } from \"@material-ui/core\";\nimport { customStyles } from \"../../data/customStyles\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { openStyleDrawer } from \"../../actions/styleDrawer\";\n\n// const customStyles: any = {};\n// const openStyleDrawer: any = () => {};\n\ninterface Props {\n  property: any;\n  value: any;\n  componentName: string;\n  setProp: any;\n}\n\nexport const StyleSetting = ({\n  property,\n  value,\n  componentName,\n  setProp,\n}: Props) => {\n  if (\n    !customStyles[componentName] ||\n    Object.keys(customStyles[componentName]).length === 0\n  ) {\n    return (\n      <Button\n        fullWidth\n        variant=\"contained\"\n        onClick={() => {\n          openStyleDrawer({\n            componentName,\n          });\n        }}\n      >\n        Define a Style\n      </Button>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={Object.keys(customStyles[componentName]).map((id) => ({\n            value: id,\n            name: customStyles[componentName][id].styleName,\n          }))}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            openStyleDrawer({\n              componentName,\n              styleId: value,\n            });\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import { Switch } from \"@material-ui/core\";\n\nexport const SwitchSetting = ({ property, value, onChange }: any) => {\n  return <Switch checked={value || false} onChange={onChange} />;\n};\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport * from \"./CustomRepeatSetting\";\nexport * from \"./DropdownSetting\";\nexport * from \"./SliderSetting\";\nexport * from \"./StringSetting\";\nexport * from \"./StyleSetting\";\nexport * from \"./SwitchSetting\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  if (!properties) {\n    console.error(config, new Error());\n    return null;\n  }\n\n  for (const configItem of config) {\n    const { property, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={property}>\n        <TableCell component=\"td\" scope=\"row\">\n          {property}\n        </TableCell>\n        <TableCell style={{ width: \"1em\" }} />\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\" padding=\"none\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { EventConnectors } from \"@craftjs/core\";\nimport { pluginRegistry } from \"../../lib/PluginRegistry\";\n\nexport const getToolboxComponents = (connectors: EventConnectors) => {\n  return [\n    ...pluginRegistry.componentsArray.reduce((acc: any[], component) => {\n      if (component.toolboxItem) {\n        acc.push(component.toolboxItem(connectors));\n      }\n\n      return acc;\n    }, []),\n  ];\n};\n","import { LocalSettingsFlags, store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function toggleLocalSetting(settingProperty: keyof LocalSettingsFlags) {\n  store.state.localSettings.flags[settingProperty] = !store.state.localSettings\n    .flags[settingProperty];\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { useEditor } from \"@craftjs/core\";\nimport { store } from \"../../lib/context\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\n\nimport { useState } from \"react\";\nimport { Settings, StringSetting } from \"../../core\";\nimport { getToolboxComponents } from \"./getToolboxComponents\";\nimport { toggleLocalSetting } from \"../../actions/localSettings\";\n\nexport const Toolbox = () => {\n  const { connectors, actions } = useEditor();\n\n  const [selectedComponent, setSelectedComponent] = useState<{\n    component: any;\n  } | null>(null);\n\n  return (\n    <>\n      <Box px={2} py={2}>\n        <Grid container direction=\"column\" spacing={1}>\n          <div>\n            <Typography>Drag to add</Typography>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              Highlight components\n              <Switch\n                checked={store.state.localSettings.flags.highlightComponents}\n                onChange={() => {\n                  toggleLocalSetting(\"highlightComponents\");\n                }}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              Tick while editing\n              <Switch\n                checked={store.state.localSettings.flags.tickWhileEditing}\n                onChange={() => {\n                  toggleLocalSetting(\"tickWhileEditing\");\n                }}\n              />\n            </div>\n          </div>\n          {getToolboxComponents(connectors).map((component) => {\n            return (\n              <Grid key={component.name} container direction=\"column\" item>\n                <MaterialButton\n                  ref={component.ref}\n                  variant=\"contained\"\n                  onClick={() => {\n                    actions.selectNode();\n                    setSelectedComponent({ component: component.component });\n                  }}\n                >\n                  {component.name}\n                </MaterialButton>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n      {selectedComponent ? (\n        <BaseProperties component={selectedComponent.component} />\n      ) : null}\n    </>\n  );\n};\n\nconst propertyConfigDefinitions: {\n  [key: string]: any;\n} = {\n  margin: {\n    property: \"margin\",\n    type: StringSetting,\n  },\n  padding: {\n    property: \"padding\",\n    type: StringSetting,\n  },\n  height: {\n    property: \"height\",\n    type: StringSetting,\n  },\n};\n\nconst BaseProperties = ({ component }: any) => {\n  const { baseStyle } = component;\n\n  if (!baseStyle) {\n    return null;\n  }\n\n  const config = [];\n  for (const property in baseStyle) {\n    const definition = propertyConfigDefinitions[property];\n\n    config.push(definition);\n  }\n\n  return (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                  Base Component Config\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Chip\n                  size=\"small\"\n                  color=\"primary\"\n                  label={component.componentName}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n\n        <Settings\n          config={config}\n          properties={baseStyle}\n          setProp={(callback: (props: any) => void) => {\n            const newProps = Object.assign({}, baseStyle);\n            callback(newProps);\n            component.baseStyle = newProps;\n            store.update();\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","const md = `\n# AppBar\n\n## Properties\n\n\n`;\n\nexport const AppBarDocumentation = {\n  md,\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { game } from \"../../../data/game\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n  visibilitySource: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        if (tab.visibilitySource) {\n          if (!game.visibilitySources[tab.visibilitySource]()) {\n            return null;\n          }\n        }\n\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\nimport { game } from \"../../../data/game\";\nimport {\n  DropdownSetting,\n  Settings,\n  StringSetting,\n  SwitchSetting,\n} from \"../../../core\";\nimport { AppBarDocumentation } from \"./AppBarDocumentation\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const classes = useStyles();\n  const { refFn, componentClassName, store } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n\n  return (\n    <div\n      ref={refFn}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\" className={componentClassName}>\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    props: node.data.props,\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const setDefault = (defaultTab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    defaultTab.default = true;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const visibilitySources = Object.keys(game.visibilitySources);\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <Settings\n            key={index}\n            config={[\n              {\n                type: StringSetting,\n                property: \"name\",\n              },\n              {\n                type: StringSetting,\n                property: \"path\",\n              },\n              {\n                type: StringSetting,\n                property: \"to\",\n              },\n              {\n                type: DropdownSetting,\n                property: \"visibilitySource\",\n                itemsFn: () => visibilitySources,\n              },\n              {\n                type: SwitchSetting,\n                property: \"default\",\n                onChange: () => setDefault(tab),\n              },\n            ]}\n            properties={tab}\n            setProp={(callback: any) => {\n              // Custom set prop function\n              // Call the callback with the tab as the \"props\" we want to update\n              callback(tab);\n\n              // Then call the actual setProp to trigger the update\n              setProp((props: any) => {\n                props.triggerUpdate = !triggerUpdate;\n              });\n            }}\n          />\n        );\n\n        // return (\n        //   <div key={index}>\n        //     <TextField\n        //       label=\"Name\"\n        //       value={tab.name}\n        //       onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"Path\"\n        //       value={tab.path}\n        //       onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"To\"\n        //       value={tab.to}\n        //       onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n        //     />\n        //     <Switch\n        //       checked={tab.default || false}\n        //       onChange={() => setDefault(tab)}\n        //     />\n        //   </div>\n        // );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.componentName = \"AppBar\";\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n\nAppBar.documentation = AppBarDocumentation;\n\nAppBar.toolboxItem = (connectors: any) => {\n  return {\n    name: \"AppBar\",\n    component: AppBar,\n    ref: (ref: any) => connectors.create(ref, <AppBar />),\n  };\n};\n\npluginRegistry.registerCustomComponent(AppBar);\n","import { useState } from \"react\";\n\nexport function useCustomStyle(\n  base: any,\n  styleGroup: any,\n  customStyleName: string\n) {\n  const [style, setStyle] = useState(null as any);\n\n  if (!styleGroup) {\n    return base;\n  }\n\n  let customStyle = null;\n  if (customStyleName) {\n    customStyle = styleGroup[customStyleName];\n  }\n\n  // console.log(\n  //   \"style && customStyle.customId !== style.customId\",\n  //   style && customStyle.customId !== style.customId\n  // );\n  // console.log(customStyle);\n\n  // Already have a style and the customId is different\n  // Don't have a style and we have a custom style\n  if (\n    (style && customStyle && customStyle.customId !== style.customId) ||\n    (!style && customStyle)\n  ) {\n    setStyle({\n      ...base,\n      ...customStyle,\n    });\n  }\n\n  // If the customStyle is reset\n  if (style && !customStyle) {\n    setStyle(null);\n  }\n\n  // Return the base style if nothing else\n  return style || base;\n}\n","const md = `\n# Button\n\n## Properties\n\n### onClickAction\nThis is an action made avaiable from \\`game.actions\\`. No parameters are passed to the action.\n`;\n\nexport const ButtonDocumentation = {\n  md,\n};\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { store } from \"../../../lib/context\";\nimport { game } from \"../../../data/game\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ButtonSettings } from \"./ButtonSettings\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { StringSetting } from \"../../../core\";\nimport { ButtonDocumentation } from \"./ButtonDocumentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Button.baseStyle,\n    customStyles.Button,\n    customStyleName\n  );\n\n  return (\n    <MaterialButton\n      style={style}\n      ref={refFn}\n      className={componentClassName}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nButton.componentName = \"Button\";\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Button\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n\nButton.baseStyle = {\n  margin: \"0em\",\n};\n\nButton.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nButton.documentation = ButtonDocumentation;\n\nButton.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Button\",\n    component: Button,\n    ref: (ref: any) => connectors.create(ref, <Button />),\n  };\n};\n\npluginRegistry.registerCustomComponent(Button);\n","import { useNode } from \"@craftjs/core\";\nimport {\n  Settings,\n  StyleSetting,\n  StringSetting,\n  DropdownSetting,\n} from \"../../../core\";\nimport { game } from \"../../../data/game\";\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../../core\";\n\nexport const TextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n          componentName,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# Text\n\n## Properties\n\n### text\nThe text to show\n\n`;\n\nexport const TextDocumentation = {\n  md,\n};\n","import { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { TextSettings } from \"./TextSettings\";\nimport { StringSetting } from \"../../../core\";\nimport { TextDocumentation } from \"./TextDocumentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\n\nexport const Text = ({ text, customStyleName }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Text.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {text}\n    </span>\n  );\n};\n\nText.componentName = \"Text\";\n\nText.craft = {\n  props: {\n    text: \"Text\",\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n\nText.baseStyle = {\n  margin: \"0em\",\n};\n\nText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nText.documentation = TextDocumentation;\n\nText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Text\",\n    component: Text,\n    ref: (ref: any) => connectors.create(ref, <Text text=\"Some text\" />),\n  };\n};\n\npluginRegistry.registerCustomComponent(Text);\n","import { Text } from \"../Text\";\nimport { Button } from \"../Button\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { Card as MUICard, CardActions, CardContent } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return (\n    <CardContent ref={connect} className=\"text-only\">\n      {children}\n    </CardContent>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return <CardActions ref={connect}>{children}</CardActions>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = () => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUICard ref={refFn} className={componentClassName}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </MUICard>\n  );\n};\n","import { game } from \"../data/game\";\n\nexport function checkVisibility(visibilitySource: string, enabled: boolean) {\n  if (!visibilitySource) {\n    return {};\n  }\n\n  const extraStyle: any = {};\n\n  if (\n    game.visibilitySources[visibilitySource] &&\n    !game.visibilitySources[visibilitySource]()\n  ) {\n    if (enabled) {\n      extraStyle.opacity = \"0.25\";\n    } else {\n      return null;\n    }\n  }\n\n  return extraStyle;\n}\n","const md = `\n# Container\n\n## Properties\n\n\n`;\n\nexport const ContainerDocumentation = {\n  md,\n};\n","import { Element } from \"@craftjs/core\";\nimport { Container as MUIContainer } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { Text } from \"../Text\";\nimport { ContainerDocumentation } from \"./ContainerDocumentation\";\nimport { ContainerSettings } from \"./ContainerSettings\";\n\nexport const Container = ({ children, visibilitySource }: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <MUIContainer\n      ref={refFn}\n      style={{ ...Container.baseStyle, ...extraStyle }}\n      className={componentClassName}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nContainer.componentName = \"Container\";\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n\nContainer.baseStyle = {\n  padding: \"0em\",\n};\n\nContainer.documentation = ContainerDocumentation;\n\nContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Container\",\n    component: Container,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={Container} canvas>\n          <Text text=\"Container\" />\n        </Element>\n      ),\n  };\n};\n\npluginRegistry.registerCustomComponent(Container);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, DropdownSetting } from \"../../../core\";\nimport { game } from \"../../../data/game\";\n\nexport const ContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { game } from \"../../../data/game\";\nimport { Settings, StyleSetting, DropdownSetting } from \"../../../core\";\n\nconst sizes = [\n  { name: \"3\", value: 3 },\n  { name: \"4\", value: 4 },\n  { name: \"6\", value: 6 },\n];\n\nexport const GridContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nexport const GridItemSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"size\",\n          itemsFn: () => sizes,\n        },\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# GridContainer\n\n## Properties\n\n\n\n`;\n\nexport const GridContainerDocumentation = {\n  md,\n};\n","const md = `\n# GridItem\n\n## Properties\n\n\n\n`;\n\nexport const GridItemDocumentation = {\n  md,\n};\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { GridContainerSettings, GridItemSettings } from \"./GridSettings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { StringSetting } from \"../../../core\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { GridContainerDocumentation } from \"./GridContainerDocumentation\";\nimport { GridItemDocumentation } from \"./GridItemDocumentation\";\nimport { documentation } from \"../../../data/documentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\nimport { Element } from \"@craftjs/core\";\nimport { Text } from \"../Text\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const GridContainer = ({ children, visibilitySource }: any) => {\n  const classes = useStyles();\n  const { refFn, componentClassName, enabled } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      container\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n      spacing={2}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nGridContainer.componentName = \"GridContiainer\";\n\nGridContainer.craft = {\n  props: {},\n  related: {\n    settings: GridContainerSettings,\n  },\n};\n\nexport const GridItem = ({\n  children,\n  size,\n  visibilitySource,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const style = useCustomStyle(\n    GridItem.baseStyle,\n    customStyles.GridItem,\n    customStyleName\n  );\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      item\n      xs={size}\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n    >\n      <Paper style={style}>{children}</Paper>\n    </Grid>\n  );\n};\n\nGridItem.componentName = \"GridItem\";\n\nGridItem.craft = {\n  props: { size: 6 },\n  related: {\n    settings: GridItemSettings,\n  },\n};\n\nGridItem.baseStyle = {\n  padding: \"0em\",\n  height: \"100%\",\n};\n\nGridItem.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nGridContainer.documentation = GridContainerDocumentation;\nGridItem.documentation = GridItemDocumentation;\n\ndocumentation.addComponent(GridContainer);\ndocumentation.addComponent(GridItem);\n\nGridContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridContainer\",\n    component: GridContainer,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridContainer} canvas>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n        </Element>\n      ),\n  };\n};\n\npluginRegistry.registerCustomComponent(GridContainer);\n\nGridItem.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridItem\",\n    component: GridItem,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridItem} canvas>\n          <Text text=\"Grid Item\" />\n        </Element>\n      ),\n  };\n};\n\npluginRegistry.registerCustomComponent(GridItem);\n","const md = `\n# PathContainer\n\n## Properties\n\n\n`;\n\nexport const PathContainerDocumentation = {\n  md,\n};\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Settings, StyleSetting, StringSetting } from \"../../../core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { PathContainerDocumentation } from \"./PathContainerDocumentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children, customStyleName }: any) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { refFn, enabled, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.main],\n  });\n\n  const visible = history.location.pathname.includes(path);\n\n  const style = useCustomStyle(\n    PathContainer.baseStyle,\n    customStyles.PathContainer,\n    customStyleName\n  );\n\n  return (\n    <MUIContainer ref={refFn} className={componentClassName} style={style}>\n      {enabled && (\n        <div>\n          <div style={{ float: \"right\", height: \"0em\" }}>\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nPathContainer.styleProperties = [\n  {\n    property: \"margin\",\n    type: StringSetting,\n  },\n];\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"path\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.componentName = \"PathContainer\";\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n\nPathContainer.baseStyle = {\n  margin: \"0em\",\n};\n\nPathContainer.documentation = PathContainerDocumentation;\n\nPathContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"PathContainer\",\n    component: PathContainer,\n    ref: (ref: any) =>\n      connectors.create(ref, <Element is={PathContainer} canvas />),\n  };\n};\n\npluginRegistry.registerCustomComponent(PathContainer);\n","const md = `\n# Table\n\n## Properties\n\n`;\n\nexport const TableDocumentation = {\n  md,\n};\n","import React from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  Settings,\n  DropdownSetting,\n  CustomRepeatSetting,\n  Dropdown,\n} from \"../../../core\";\nimport { game } from \"../../../data/game\";\nimport { Button } from \"../Button\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { TableDocumentation } from \"./TableDocumentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n  const currentContext = {\n    item: {} as any,\n    index: \"0\",\n    column: {} as any,\n  };\n\n  try {\n    for (const itemIndex in items) {\n      const item = items[itemIndex];\n      const cells = [];\n\n      currentContext.item = item;\n\n      for (const index in columnNames) {\n        const column = columnNames[index];\n\n        currentContext.index = index;\n        currentContext.column = column;\n\n        const { name } = column;\n        const itemProperty = item[column.property];\n\n        switch (column.type) {\n          case \"string\":\n            if (typeof itemProperty !== \"string\") {\n              throw new Error(\"Trying to use a non-string value as a string\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n            break;\n          case \"variableString\":\n            if (!itemProperty.data) {\n              throw new Error(\"No data function for a variableString\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n            break;\n          case \"button\":\n            if (!itemProperty.onClickAction) {\n              throw new Error(\"No onClickAcion function for a button\");\n            }\n\n            cells.push(\n              <TableCell key={name}>\n                <Button\n                  text={itemProperty.text}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClickAction={itemProperty.onClickAction}\n                  actionContext={item}\n                />\n              </TableCell>\n            );\n            break;\n        }\n      }\n\n      rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n    }\n  } catch (err) {\n    return (\n      <TableBody>\n        <TableCell>\n          <div>Table Data Error! {err.message}</div>\n          <div>Column Index: {currentContext.index}</div>\n          <div>Column Type: {currentContext.column.type}</div>\n          <div>Item Data: {JSON.stringify(currentContext.item)}</div>\n        </TableCell>\n      </TableBody>\n    );\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={refFn} className={componentClassName}>\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <Dropdown\n        value={item.type || \"\"}\n        items={[\n          { name: \"String\", value: \"string\" },\n          { name: \"Button\", value: \"button\" },\n          { name: \"Variable String\", value: \"variableString\" },\n        ]}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"itemSource\",\n          itemsFn: () => Object.keys(game.dataSources),\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.componentName = \"Table\";\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n\nTable.documentation = TableDocumentation;\n\nTable.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Table\",\n    component: Table,\n    ref: (ref: any) => connectors.create(ref, <Table />),\n  };\n};\n\npluginRegistry.registerCustomComponent(Table);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../../core\";\n\nexport const VariableTextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"dataProperty\",\n        },\n        {\n          type: StringSetting,\n          property: \"subProperty\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# VariableText\n\n## Properties\n\n`;\n\nexport const VariableTextDocumentation = {\n  md,\n};\n","import { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { StringSetting } from \"../../../core\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { VariableTextSettings } from \"./VariableTextSettings\";\nimport { VariableTextDocumentation } from \"./VariableTextDocumentation\";\nimport { pluginRegistry } from \"../../../lib/PluginRegistry\";\n\nexport const VariableText = ({\n  dataProperty,\n  subProperty,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    VariableText.baseStyle,\n    customStyles.VariableText,\n    customStyleName\n  );\n\n  let value = game.data[dataProperty];\n  if (value && subProperty) {\n    value = value[subProperty];\n  }\n\n  if (typeof value === \"object\") {\n    value = undefined;\n  }\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {value ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nVariableText.componentName = \"VariableText\";\n\nVariableText.craft = {\n  props: {},\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: VariableTextSettings,\n  },\n};\n\nVariableText.baseStyle = {\n  margin: \"0em\",\n};\n\nVariableText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nVariableText.documentation = VariableTextDocumentation;\n\nVariableText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"VariableText\",\n    component: VariableText,\n    ref: (ref: any) => connectors.create(ref, <VariableText />),\n  };\n};\n\npluginRegistry.registerCustomComponent(VariableText);\n","import { useEffect } from \"react\";\nimport { saveGameConfig } from \"../../lib/saveGameConfig\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      saveGameConfig();\n    }, 2000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import { makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  gameArea: {\n    position: \"absolute\",\n    background: \"#eee\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"auto\",\n  },\n}));\n","import { store } from \"../../lib/context\";\nimport { Toolbox } from \"../../components/Toolbox\";\nimport { SettingsPanel } from \"../../components/SettingsPanel\";\n\nimport { Container, Text } from \"../../components/CustomComponents\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"./AutoSave\";\nimport { pluginRegistry } from \"../../lib/PluginRegistry\";\nimport { HashRouter } from \"react-router-dom\";\nimport { data } from \"../../data/data\";\nimport { saveGameConfig } from \"../../lib/saveGameConfig\";\nimport { useEffect } from \"react\";\nimport { useSharedStyles } from \"../../styles/shared\";\nimport { game } from \"../../data/game\";\n\nfunction Content() {\n  const { query } = useEditor();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    game.running = false;\n\n    return () => {\n      game.running = false;\n      saveGameConfig();\n    };\n  }, []);\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <>\n      <div style={{ position: \"absolute\", width: \"80%\", height: \"100%\" }}>\n        <div className={classes.gameArea}>\n          {/*Router for the components in the game*/}\n          <HashRouter>\n            <Frame data={data.gameConfig.layout}>\n              {/*This is the default layout*/}\n              <Element is={Container} padding={5} canvas>\n                <Text\n                  text={\"Start dragging components in (and delete this one)\"}\n                />\n              </Element>\n            </Frame>\n          </HashRouter>\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          right: \"0%\",\n          width: \"20%\",\n          height: \"100%\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Toolbox />\n        <SettingsPanel />\n      </div>\n    </>\n  );\n}\n\nexport function Edit() {\n  return (\n    <Editor resolver={pluginRegistry.components}>\n      <AutoSave />\n      <Content />\n    </Editor>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { pluginRegistry } from \"../lib/PluginRegistry\";\nimport { data } from \"../data/data\";\nimport { game } from \"../data/game\";\nimport { useSharedStyles } from \"../styles/shared\";\n\nexport function Play() {\n  const history = useHistory();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    game.running = true;\n\n    // If there is no game data, then switch to the editor\n    if (!data.gameConfig) {\n      console.error(new Error(\"No gameConfig routing to /edit\"));\n      history.push(\"/edit\");\n    }\n\n    return () => {\n      game.running = false;\n    };\n  }, [history]);\n\n  return (\n    <div className={classes.gameArea}>\n      <Editor resolver={pluginRegistry.components} enabled={false}>\n        <HashRouter>\n          <Frame data={data.gameConfig.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context, store } from \"../lib/context\";\nimport { saveGameConfig } from \"../lib/saveGameConfig\";\nimport { openStyleDrawer } from \"../actions/styleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { data } from \"../data/data\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [updateValue, update] = useState(false);\n  const { gameConfig } = data;\n\n  useContext(Context);\n\n  function navigate(path: string) {\n    history.push(path);\n    update(!updateValue);\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <div style={{ flexGrow: 1 }}>\n          <Button\n            onClick={() => {\n              store.state.optionsDrawerOpen = true;\n              store.update();\n            }}\n          >\n            <MenuIcon />\n          </Button>\n          <Button\n            onClick={() => {\n              navigate(\"/edit\");\n            }}\n            variant={path.includes(\"/edit\") ? \"contained\" : undefined}\n            color=\"primary\"\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => {\n              let file = store.state.localSettings.lastCodeFile;\n\n              if (file) {\n                file = `/${file}`;\n              }\n\n              navigate(`/code${file}`);\n            }}\n            variant={path.includes(\"/code\") ? \"contained\" : undefined}\n            color=\"primary\"\n          >\n            Code\n          </Button>\n          <Button\n            onClick={() => {\n              openStyleDrawer();\n            }}\n          >\n            Styling\n          </Button>\n          <Button\n            onClick={() => {\n              saveGameConfig();\n              navigate(\"/play\");\n            }}\n            variant={path.includes(\"/play\") ? \"contained\" : undefined}\n            color=\"primary\"\n          >\n            Play\n          </Button>\n          <Button\n            onClick={() => {\n              navigate(\"/documentation\");\n            }}\n            variant={path.includes(\"/documentation\") ? \"contained\" : undefined}\n            color=\"primary\"\n          >\n            Documentation\n          </Button>\n        </div>\n        <div>{gameConfig.name}</div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { data } from \"../../data/data\";\nimport { gameManager } from \"../../lib/GameManager\";\n\nexport const ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameConfig = {\n    gameConfig: data.gameConfig,\n  };\n\n  const [allGameConfig, setAllGameConfig] = useState(\n    btoa(JSON.stringify(currentAllGameConfig))\n  );\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Import or export game data</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameConfig}\n          onChange={(event) => {\n            setAllGameConfig(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameConfig));\n            console.debug(\"Imported game data\", JSON.stringify(data, null, 2));\n            gameManager.save(data.gameConfig);\n            localStorage.lastGameId = data.gameConfig.id;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { data } from \"../../data/data\";\nimport { gameManager } from \"../../lib/GameManager\";\n\nexport const ConfirmResetDialog = ({ onClose }: any) => {\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Delete Game Configuration</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete the curret game configuration? This\n          cannot be undone.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\">\n          Cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            await gameManager.delete(data.gameConfig.id);\n            const games = await gameManager.getAll();\n\n            if (games.length) {\n              localStorage.lastGameId = games[0].id;\n            }\n\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useState } from \"react\";\n\nexport function useUpdate() {\n  const [updateValue, update] = useState(false);\n\n  // Under certain circumstances, it may be necessary to pass\n  // in a custom value to trigger the update\n  return (custom?: any) => update(custom ?? !updateValue);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  IconButton,\n  TableHead,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport HelpOutlinedIcon from \"@material-ui/icons/HelpOutlined\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useUpdate } from \"../../config/useUpdate\";\nimport { data } from \"../../data/data\";\nimport { saveCustomComponents } from \"../../lib/saveGameConfig\";\n\nfunction CustomComponent({ component, components, update }: any) {\n  let icon = null;\n\n  if (component.status === \"Checking\") {\n    icon = <HelpOutlinedIcon />;\n  } else if (component.ok) {\n    icon = <CheckCircleIcon style={{ color: \"green\" }} />;\n  } else {\n    icon = <ErrorIcon style={{ color: \"red\" }} />;\n  }\n\n  return (\n    <TableRow>\n      <TableCell>\n        <IconButton\n          onClick={() => {\n            const index = components.indexOf(component);\n            components.splice(index, 1);\n            update();\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n      <TableCell>{component.url}</TableCell>\n      <TableCell>{icon}</TableCell>\n      <TableCell>{component.status}</TableCell>\n    </TableRow>\n  );\n}\n\nexport const CustomComponentsDialog = ({ onClose }: any) => {\n  const update = useUpdate();\n  const [newComponentUrl, setNewComponentUrl] = useState(\"\");\n\n  function checkComponent(component: any) {\n    component.status = \"Checking\";\n\n    return new Promise(async function (accept: any) {\n      try {\n        const result = await axios.get(component.url);\n\n        console.log(result.status);\n\n        if (result.status === 200) {\n          component.status = \"Ok\";\n          component.ok = true;\n        }\n      } catch (err) {\n        if (err.response) {\n          component.status = `Failed (${err.response.status})`;\n        } else {\n          component.status = `Failed (${err.message})`;\n        }\n\n        component.ok = false;\n      }\n\n      accept();\n    });\n  }\n\n  async function checkComponentUrls() {\n    const requests = data.customComponents.map((component) => {\n      return checkComponent(component);\n    });\n\n    update();\n\n    await Promise.all(requests);\n\n    // Need to use a different value... can't quite recall why\n    update(123);\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    checkComponentUrls();\n  });\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Custom Components</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Add custom components to your game.\n        </DialogContentText>\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>URL</TableCell>\n                <TableCell></TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.customComponents.map((component) => {\n                return (\n                  <CustomComponent\n                    key={component.url}\n                    component={component}\n                    components={data.customComponents}\n                    update={update}\n                  />\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <br />\n\n        <TextField\n          value={newComponentUrl}\n          onChange={(event: any) => {\n            setNewComponentUrl(event.target.value);\n          }}\n        />\n        <Button\n          onClick={async () => {\n            const component = {\n              url: newComponentUrl,\n              status: \"New\",\n            };\n\n            data.customComponents.push(component);\n\n            await checkComponent(component);\n\n            setNewComponentUrl(\"\");\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Component\n        </Button>\n        <Button\n          onClick={checkComponentUrls}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Check Components\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            if (onClose) {\n              onClose();\n            }\n          }}\n          color=\"primary\"\n        >\n          Done\n        </Button>\n        <Button\n          onClick={() => {\n            saveCustomComponents();\n            window.location.reload();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Save And Reload\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { data } from \"../../data/data\";\nimport { saveGameConfig } from \"../../lib/saveGameConfig\";\n\nexport const GameSettingsDialog = ({ onClose }: any) => {\n  const { gameConfig } = data;\n  const [name, setName] = useState(gameConfig.name);\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Game Settings</DialogTitle>\n      <DialogContent>\n        {/* <DialogContentText></DialogContentText> */}\n        <TextField\n          fullWidth\n          label=\"Game Name\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          onClick={async () => {\n            // Need to re-get the gameConfig as the reference to the object could have changed\n            const { gameConfig } = data;\n\n            gameConfig.name = name;\n\n            await saveGameConfig();\n            onClose();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport packageJson from \"../../../package.json\";\nimport { store } from \"../../lib/context\";\nimport { useState } from \"react\";\nimport { ImportExportDialog } from \"./ImportExportDialog\";\nimport { ConfirmResetDialog } from \"./ConfirmResetDialog\";\nimport { CustomComponentsDialog } from \"./CustomComponentsDialog\";\nimport { GameSettingsDialog } from \"./GameSettingsDialog\";\nimport { game } from \"../../data/game\";\nimport { gameManager } from \"../../lib/GameManager\";\nimport VideogameAssetIcon from \"@material-ui/icons/VideogameAsset\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { data } from \"../../data/data\";\n\nfunction listGames(games: any[] | null) {\n  if (games) {\n    return games.map((game: any) => {\n      return (\n        <ListItem\n          key={game.id}\n          button\n          onClick={() => {\n            // No need to reload\n            if (localStorage.lastGameId === game.id) {\n              return;\n            }\n\n            localStorage.lastGameId = game.id;\n\n            window.location.reload();\n          }}\n        >\n          <ListItemIcon>\n            <VideogameAssetIcon />\n          </ListItemIcon>\n          <ListItemText primary={game.name} secondary={game.id} />\n        </ListItem>\n      );\n    });\n  }\n}\n\nfunction ButtonOption({ Icon, onClick, primary, secondary }: any) {\n  return (\n    <ListItem button onClick={onClick}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={primary} secondary={secondary} />\n    </ListItem>\n  );\n}\n\nexport const OptionsDrawer = () => {\n  const [games, setGames] = useState(null);\n  const [showImportExprt, setShowImportExport] = useState(false);\n  const [showConfirmReset, setShowConfirmReset] = useState(false);\n  const [showCustomComponents, setShowCustomComponents] = useState(false);\n  const [showGameSettings, setShowGameSettings] = useState(false);\n  const { gameConfig } = data;\n\n  if (!games) {\n    (async () => {\n      console.log(\"Getting games\");\n      setGames(await gameManager.getAll());\n    })();\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.optionsDrawerOpen}\n        onClose={() => {\n          store.state.optionsDrawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          <ListItem onClick={() => {}}>\n            <div>\n              <Typography variant=\"h4\">{gameConfig.name}</Typography>\n              <div>{gameConfig.id}</div>\n            </div>\n          </ListItem>\n          <Divider />\n          {/* Settings */}\n          <ButtonOption\n            Icon={SettingsIcon}\n            onClick={() => setShowGameSettings(true)}\n            primary=\"Game Settings\"\n          />\n          {/* Initialize Game Data */}\n          <ButtonOption\n            Icon={LoopIcon}\n            onClick={() => game.initializeGameData()}\n            primary=\"Initialize Game Data\"\n          />\n          {/* Reset Game Configuration */}\n          <ButtonOption\n            Icon={LoopIcon}\n            onClick={() => setShowConfirmReset(true)}\n            primary=\"Delete Game Configuration\"\n            secondary=\"Delete the currently loaded game\"\n          />\n          {/* Import / Export */}\n          <ButtonOption\n            Icon={ImportExportIcon}\n            onClick={() => setShowImportExport(true)}\n            primary=\"Import / Export\"\n            secondary=\"Import or export your game data\"\n          />\n          {/* Custom Components */}\n          <ButtonOption\n            Icon={AppsIcon}\n            onClick={() => setShowCustomComponents(true)}\n            primary=\"Custom Components\"\n            secondary=\"Custom components for your game\"\n          />\n          <Divider />\n          {/* Games */}\n          {listGames(games)}\n          <ButtonOption\n            Icon={AddIcon}\n            onClick={() => {\n              delete localStorage.lastGameId;\n\n              window.location.reload();\n            }}\n            primary=\"Create New Game\"\n            secondary=\"Start building a new game\"\n          />\n          <Divider />\n          {/* Version */}\n          <ListItem onClick={() => {}}>\n            <ListItemText\n              primary=\"Idling Engine\"\n              secondary={`Version ${packageJson.version}`}\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n\n      {showConfirmReset && (\n        <ConfirmResetDialog onClose={() => setShowConfirmReset(false)} />\n      )}\n\n      {showGameSettings && (\n        <GameSettingsDialog\n          onClose={async () => {\n            setGames(await gameManager.getAll());\n            setShowGameSettings(false);\n          }}\n        />\n      )}\n\n      {showCustomComponents && (\n        <CustomComponentsDialog\n          onClose={() => setShowCustomComponents(false)}\n        />\n      )}\n    </div>\n  );\n};\n","import { Box, Button, Drawer, Typography } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Settings, StringSetting, Dropdown } from \"../core\";\nimport { customStyles } from \"../data/customStyles\";\nimport * as components from \"./CustomComponents\";\nimport { v4 as uuid } from \"uuid\";\nimport { closeStyleDrawer } from \"../actions/styleDrawer\";\nimport { useUpdate } from \"../config/useUpdate\";\n\nconst supportedComponents: any = {\n  [components.Button.name]: components.Button,\n  [components.PathContainer.name]: components.PathContainer,\n  [components.GridItem.name]: components.GridItem,\n  [components.Text.name]: components.Text,\n  [components.VariableText.name]: components.VariableText,\n};\n\nexport const StyleDrawer = () => {\n  const update = useUpdate();\n\n  let {\n    styleDrawerComponentName: selectedComponent,\n    styleDrawerStyleId: selectedStyle,\n  } = store.state.localSettings;\n\n  const updateSettings = (\n    styleDrawerComponentName: string,\n    styleDrawerStyleId: string\n  ) => {\n    store.state.localSettings.styleDrawerComponentName = styleDrawerComponentName;\n    store.state.localSettings.styleDrawerStyleId = styleDrawerStyleId;\n    update();\n  };\n\n  let component: any = null;\n  if (selectedComponent) {\n    component = customStyles[selectedComponent];\n  }\n\n  // The selectedStyle id doesn't actually exist\n  // Could be an artifact of the localSettings\n  if (!component || !component[selectedStyle]) {\n    selectedStyle = \"\";\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.localSettings.flags.styleDrawerOpen}\n        onClose={() => {\n          closeStyleDrawer();\n        }}\n        anchor=\"right\"\n        BackdropProps={{ invisible: true }}\n      >\n        <div style={{ padding: \"1em\" }}>\n          <Typography variant=\"h4\">Style Components</Typography>\n          <Dropdown\n            value={selectedComponent}\n            items={Object.keys(supportedComponents)}\n            label=\"Component\"\n            onChange={(event: any) => {\n              customStyles[event.target.value] =\n                customStyles[event.target.value] || {};\n\n              updateSettings(event.target.value, \"\");\n              update();\n            }}\n          />\n          {component && (\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box flexGrow={1}>\n                <Dropdown\n                  value={selectedStyle}\n                  items={Object.keys(component).map((id) => ({\n                    value: id,\n                    name: component[id].styleName,\n                  }))}\n                  label=\"Styles\"\n                  onChange={(event: any) => {\n                    updateSettings(selectedComponent, event.target.value);\n                  }}\n                />\n              </Box>\n              <Box>\n                <Button\n                  onClick={(event) => {\n                    const id = uuid();\n\n                    component[id] = {\n                      styleName: `New Style ${\n                        Object.keys(component).length + 1\n                      }`,\n                    };\n\n                    updateSettings(selectedComponent, id);\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Style\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {component && selectedStyle && (\n            <>\n              <Settings\n                config={[\n                  {\n                    property: \"styleName\",\n                    type: StringSetting,\n                  },\n                  ...supportedComponents[selectedComponent].styleProperties,\n                ]}\n                properties={component[selectedStyle]}\n                setProp={(callback: (props: any) => void) => {\n                  // Important to assign it a new Id\n                  const newProps = Object.assign({}, component[selectedStyle], {\n                    customId: Math.random(),\n                  });\n                  callback(newProps);\n                  component[selectedStyle] = newProps;\n\n                  store.update();\n                }}\n              />\n              <Button\n                onClick={(event) => {\n                  const styleIds = Object.keys(component);\n                  const index = styleIds.indexOf(selectedStyle);\n\n                  let nextStyle = \"\";\n\n                  delete component[selectedStyle];\n\n                  if (index > 0) {\n                    nextStyle = styleIds[index - 1];\n                  } else if (styleIds.length) {\n                    nextStyle = styleIds[1];\n                  }\n\n                  updateSettings(selectedComponent, nextStyle);\n                }}\n                variant=\"contained\"\n              >\n                Delete Style\n              </Button>\n            </>\n          )}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import { data } from \"../data/data\";\n\nexport async function loadCustomComponents() {\n  const loadingPromises = [];\n  const errors: any = {};\n\n  console.groupCollapsed(\"Loading Custom Components\");\n  console.log(data);\n  console.groupEnd();\n\n  for (const customComponent of data.customComponents) {\n    if (!customComponent.url) {\n      continue;\n    }\n\n    const p = new Promise((resolve: any) => {\n      console.log(`Loading custom component ${customComponent.url}`);\n\n      const s = document.createElement(\"script\");\n      s.type = \"text/javascript\";\n      s.src = customComponent.url;\n      s.onload = () => {\n        resolve();\n      };\n      s.onerror = (err) => {\n        console.log(err);\n        errors[customComponent.url] = err;\n        resolve();\n      };\n\n      document.head.append(s);\n    });\n\n    loadingPromises.push(p);\n  }\n\n  // console.log(\"data.customComponents\", data.customComponents, loadingPromises);\n\n  await Promise.all(loadingPromises);\n\n  // console.log(\"Load custom components errors\", errors);\n}\n","const main = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = (loadedGameData) => {\n  // Code executed when the application starts up\n  game.data = new GameData(loadedGameData);\n}\n\ngame.initializeGameData = () => {\n  // Code executed when the resetting the game data\n  game.data = new GameData({});\n  game.update();\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n\ngame.actions.buttonClick = () => {\n  game.data.counter++;\n  game.update();\n}\n`;\n\nconst gameData = `\n\nclass GameData {\n  constructor(data) {\n    this._updateData(data);\n\n    // Set the data\n    for (const property in data) {\n      this[property] = data[property];\n    }\n  }\n\n  _updateData() {\n    // Use this to update game data as changes are made\n    if (!this.counter) {\n      this.counter = 0;\n    }\n  }\n\n  // Can use getters as well for use with variableText\n}\n`;\n\nexport const initialCode = {\n  main,\n  gameData,\n};\n","import { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { pluginRegistry } from \"./PluginRegistry\";\nimport { initialCode } from \"../data/initial/code\";\nimport { addCodeFile } from \"../data/game\";\nimport { gameManager } from \"./GameManager\";\nimport { v4 as uuid } from \"uuid\";\nimport { saveGameConfig } from \"./saveGameConfig\";\n\nfunction setupNewGameData() {\n  localStorage.lastGameId = uuid();\n\n  data.gameConfig = {\n    id: localStorage.lastGameId,\n    name: \"New Game\",\n    codeFiles: [],\n  };\n\n  addCodeFile(\"main\", \"//main\\n\" + initialCode.main);\n  addCodeFile(\"gameData\", \"//gameData\\n\" + initialCode.gameData);\n}\n\nfunction loadComponentProperties(baseStyles: any) {\n  for (const componentName in baseStyles) {\n    const component = pluginRegistry.components[componentName];\n    const baseStyle = baseStyles[componentName];\n\n    if (component && baseStyle) {\n      component.baseStyle = {\n        ...component.baseStyle,\n        ...baseStyle,\n      };\n    }\n  }\n}\n\nasync function cleanMissingComponents(componentName: string) {\n  const gameData = await gameManager.load(localStorage.lastGameId);\n\n  const layout = JSON.parse(gameData.layout);\n  const newLayout: any = {};\n\n  for (const id of Object.keys(layout)) {\n    if (layout[id].type.resolvedName !== componentName) {\n      // Ok to keep this component\n      newLayout[id] = layout[id];\n    } else {\n      // Remove the reference to the node by its id\n      for (const otherComponent of Object.values(layout) as any[]) {\n        const index = otherComponent.nodes.indexOf(id);\n\n        if (index >= 0) {\n          otherComponent.nodes.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  gameData.layout = JSON.stringify(newLayout);\n\n  await gameManager.save(gameData);\n}\n\nexport function validateLayout(layoutData: any) {\n  const layout = JSON.parse(layoutData);\n  const errors = [];\n\n  for (const id of Object.keys(layout)) {\n    if (id === \"ROOT\") {\n      continue;\n    }\n\n    const {\n      type: { resolvedName },\n    } = layout[id];\n\n    if (!pluginRegistry.components[resolvedName]) {\n      const error = {\n        message: `Unknown component ${resolvedName}`,\n        resolve: () => {\n          cleanMissingComponents(resolvedName);\n        },\n      };\n\n      errors.push(error);\n    }\n  }\n\n  return errors;\n}\n\n// This needs to be able to run before loading the game data,\n// so that any custom components can be loaded first\nexport async function loadCustomComponentData(gameId: string) {\n  let storedGameData = await gameManager.load(gameId);\n\n  if (storedGameData) {\n    data.customComponents = storedGameData.customComponents || [];\n\n    return;\n  }\n\n  data.customComponents = [];\n}\n\nexport async function loadGameConfig(gameId: string) {\n  let storedGameData = await gameManager.load(gameId);\n\n  if (storedGameData) {\n    if (storedGameData.baseStyles) {\n      loadComponentProperties(storedGameData.baseStyles);\n    }\n\n    if (storedGameData.customStyles) {\n      Object.assign(customStyles, storedGameData.customStyles);\n    }\n\n    data.gameConfig = storedGameData;\n\n    const errors = validateLayout(data.gameConfig.layout);\n\n    if (errors.length) {\n      return { errors };\n    }\n\n    console.debug(\"Game data loaded\");\n\n    return {};\n  } else {\n    console.warn(\"Starting new game data\");\n\n    setupNewGameData();\n\n    await saveGameConfig();\n\n    return {};\n  }\n}\n","import { executeCode, game } from \"../data/game\";\nimport { store } from \"./context\";\nimport { gameManager } from \"./GameManager\";\nimport { loadCustomComponents } from \"./loadCustomComponents\";\nimport { loadCustomComponentData, loadGameConfig } from \"./loadGameConfig\";\nimport { pluginRegistry } from \"./PluginRegistry\";\n\nexport async function initializeApp() {\n  await gameManager.init();\n\n  // const games = await gameManager.getAll();\n  // console.log('All Gmaes', games)\n\n  // Load custom components\n  await loadCustomComponentData(localStorage.lastGameId);\n  await loadCustomComponents();\n\n  console.groupCollapsed(\"Custom Components\");\n  console.log(Object.keys(pluginRegistry.components).join(\"\\n\"));\n  console.log(pluginRegistry.components);\n  console.groupEnd();\n\n  // Load the game configuration\n  const { errors } = await loadGameConfig(localStorage.lastGameId);\n\n  if (errors) {\n    return { errors };\n  }\n\n  game.setUpdateUIFunction(store.update);\n  await executeCode();\n\n  return {};\n}\n","import React, { Component } from \"react\";\nimport \"./lib/log\";\nimport { Edit, Play, Code, Documentation } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\nimport { StyleDrawer } from \"./components/StyleDrawer\";\nimport { loadLocalSettings } from \"./lib/localSettings\";\nimport { CustomComponentsDialog } from \"./components/OptionsDrawer/CustomComponentsDialog\";\nimport { initializeApp } from \"./lib/initializeApp\";\nimport { ProviderContext, withSnackbar } from \"notistack\";\n\nloadLocalSettings();\n\ninterface Props extends ProviderContext {}\n\nclass App extends Component<Props> {\n  state: {\n    ready: boolean;\n    errors: any[];\n    showCustomComponentsDialog: boolean;\n  } = {\n    ready: false,\n    errors: [],\n    showCustomComponentsDialog: false,\n  };\n\n  async componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n    store.enqueueSnackbar = this.props.enqueueSnackbar;\n\n    const { errors } = await initializeApp();\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({ ready: true });\n    }\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    if (errors.length) {\n      return (\n        <div>\n          <div>\n            There was an error loading your configured custom components\n            {errors.map((error) => {\n              const { message, resolve } = error;\n              return (\n                <div key={error.message}>\n                  \"{message}\"\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                      resolve();\n                    }}\n                  >\n                    Remove References\n                  </Button>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            Option one is to fix URL of the missing component\n            {this.state.showCustomComponentsDialog && (\n              <CustomComponentsDialog\n                onClose={() => {\n                  this.setState({\n                    showCustomComponentsDialog: false,\n                  });\n                }}\n              />\n            )}\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  showCustomComponentsDialog: true,\n                });\n              }}\n            >\n              Manage Custom Components\n            </Button>\n          </div>\n          <div>\n            Option two is to remove all instances of the component that is\n            causing the issue\n          </div>\n        </div>\n      );\n    }\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Context.Provider\n        value={{\n          state: store.state,\n          editorQuery: store.editorQuery,\n          enqueueSnackbar: store.enqueueSnackbar,\n          update: this.update,\n        }}\n      >\n        <BrowserRouter basename=\"/idling-engine\">\n          <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n            <OptionsDrawer />\n            <StyleDrawer />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n              }}\n            >\n              <Header />\n              <div style={{ position: \"relative\", flexGrow: 1 }}>\n                <Switch>\n                  <Route path=\"/edit\" render={() => <Edit />} />\n                  <Route path=\"/code\" render={() => <Code />} />\n                  <Route path=\"/play\" render={() => <Play />} />\n                  <Route\n                    path=\"/documentation\"\n                    render={() => <Documentation />}\n                  />\n                  <Route path=\"/\">\n                    <Redirect to=\"/edit\" />\n                  </Route>\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </BrowserRouter>\n      </Context.Provider>\n    );\n  }\n}\n\nexport default withSnackbar(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport { theme } from \"./styles/theme\";\nimport App from \"./App\";\nimport \"./styles/style.css\";\nimport * as craftjs from \"@craftjs/core\";\nimport * as core from \"./core\";\nimport { Button, CssBaseline, ThemeProvider } from \"@material-ui/core\";\n\n(window as any)[\"idlingEngineCore\"] = core;\n(window as any)[\"craftjs\"] = craftjs;\n\nconst notistackRef: any = React.createRef();\nconst onClickDismiss = (key: any) => () => {\n  notistackRef.current.closeSnackbar(key);\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <SnackbarProvider\n      maxSnack={5}\n      ref={notistackRef}\n      autoHideDuration={null}\n      action={(key) => (\n        <Button onClick={onClickDismiss(key)} color=\"secondary\">\n          Dismiss\n        </Button>\n      )}\n    >\n      <App />\n    </SnackbarProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// import reportWebVitals from \"./reportWebVitals\";\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","export const data = {\n  gameConfig: null as any,\n  customComponents: [] as any[],\n};\n\n(window as any).data = data;\n","// Mutate console for better logging\n\nimport EventEmitter from \"events\";\n\nexport const logEvents = new EventEmitter();\n\n(() => {\n  // console that is going to be modified\n  const c = console as any;\n\n  // Check if the console has already been customized\n  // Prevents repeatedly overriding with hot reloading\n  if (!c._customized) {\n    // Save the original console so that it can be preferenced\n    c.co = { ...console };\n    c._customized = true;\n  }\n\n  let co = c.co;\n\n  const LogLevels = {\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4,\n  };\n\n  c.logLevels = LogLevels;\n  c.logLevel = LogLevels.DEBUG;\n\n  c.debug = (...args: any) => {\n    if (c.logLevel <= LogLevels.DEBUG) {\n      co.debug(\"DEBUG\", ...args);\n    }\n  };\n\n  c.info = (...args: any) => {\n    if (c.logLevel <= LogLevels.INFO) {\n      co.info(\"INFO\", ...args);\n    }\n  };\n\n  c.warn = (...args: any) => {\n    if (c.logLevel <= LogLevels.WARN) {\n      co.warn(\"WARN\", ...args);\n    }\n  };\n\n  c.error = (...args: any) => {\n    if (c.logLevel <= LogLevels.ERROR) {\n      co.error(\"ERROR\", ...args);\n\n      logEvents.emit(\"error\", args);\n    }\n  };\n})();\n\nexport default console;\n","import { store } from \"../lib/context\";\nimport { dataStorage } from \"../lib/dataStorage\";\nimport { data } from \"./data\";\nimport { v4 as uuid } from \"uuid\";\nimport { logEvents } from \"../lib/log\";\nimport { gameManager } from \"../lib/GameManager\";\n\ninterface AnyObject {\n  [key: string]: any;\n}\n\nexport const game = {\n  running: false,\n\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Visibility sources\n  visibilitySources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialized state\n  isInitialized: false,\n  isGameDataInitialized: false,\n\n  // initialize\n  _initialize: (loadedGameData: any) => {\n    console.log(\"game.initialize not defined\");\n  },\n\n  get initialize() {\n    return this._initialize;\n  },\n\n  set initialize(fn) {\n    this._initialize = (loadedGameData: any) => {\n      console.log(\"Initializing Game\");\n      this.isInitialized = true;\n      fn(loadedGameData);\n    };\n  },\n\n  // initializeGameData\n  _initializeGameData: () => {\n    console.log(\"game.initializeGameData not defined\");\n  },\n\n  get initializeGameData() {\n    return this._initializeGameData;\n  },\n\n  set initializeGameData(fn) {\n    this._initializeGameData = () => {\n      console.log(\"Initializing Game Data\");\n      this.isInitialized = true;\n      fn();\n    };\n  },\n\n  // tick\n  _tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  get tick() {\n    return this._tick;\n  },\n\n  set tick(fn) {\n    this._tick = () => {\n      if (game.running || store.state.localSettings.flags.tickWhileEditing) {\n        fn();\n      }\n    };\n  },\n\n  /**\n   * Update the UI\n   * Set by the system\n   */\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n\n  setUpdateUIFunction: (fn: any) => {\n    game.update = fn;\n  },\n};\n\n// Tick\n// Slightly more complex than setTimeout\n// But more performant\nlet runningInterval: any = null;\nlet ticking = false;\nfunction startTicking() {\n  if (runningInterval) {\n    clearInterval(runningInterval);\n  }\n\n  runningInterval = setInterval(async () => {\n    try {\n      if (!ticking) {\n        ticking = true;\n        await game.tick();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    // Always set to false once done\n    ticking = false;\n  }, game.settings.tickInterval);\n}\n\nexport function addCodeFile(name: string, code: string) {\n  data.gameConfig.codeFiles.push({\n    id: uuid(),\n    name,\n    code,\n  });\n}\n\nlet fileLineCounts: number[] = [];\n\nexport async function executeCode() {\n  const files: any = data.gameConfig.codeFiles;\n  fileLineCounts = [];\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\";\n    fileLineCounts.push(file.code.split(\"\\n\").length);\n  }\n\n  const lines = finalCode.split(\"\\n\");\n  const numberWidth = Math.floor(Math.log(lines.length));\n\n  console.groupCollapsed(\"GAME CODE\");\n  console.log(\n    lines\n      .map((line, index) => {\n        const numberedLine = `${(index + 1)\n          .toString()\n          .padEnd(numberWidth)} ${line}`;\n        return numberedLine;\n      })\n      .join(\"\\n\")\n  );\n  console.groupEnd();\n\n  try {\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    let loadedGameData = await gameManager.loadGameData(data.gameConfig.id);\n\n    console.groupCollapsed(\"Loaded Game Data\");\n    console.log(loadedGameData);\n    console.groupEnd();\n\n    if (!game.isInitialized) {\n      game.initialize(loadedGameData);\n    }\n\n    game.configure(game.settings);\n\n    startTicking();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\n/**\n * Save game data on an interval\n */\nsetInterval(() => {\n  gameManager.saveGameData(data.gameConfig.id, game.data);\n}, 5000);\n\nfunction handleError(args: any[]) {\n  if (args[0]?.message && args[0]?.stack) {\n    const { message, stack } = args[0];\n    let snackbarMessage = message;\n    let lineNumber = null;\n\n    const stackLines = stack.split(\"\\n\");\n\n    // This loop coveres Chrome and FF\n    for (let i = 0; i < 2; i++) {\n      const line = stackLines[i];\n      if (line.includes(\"eval\")) {\n        const matches = line.match(/(\\d+):(\\d+)/g);\n\n        if (matches.length) {\n          const match = matches[matches.length - 1].split(\":\");\n          lineNumber = [parseInt(match[0]), parseInt(match[1])];\n          break;\n        }\n      }\n    }\n\n    if (lineNumber) {\n      let lineTotal = 0;\n      for (const index in fileLineCounts) {\n        const fileLineCount = fileLineCounts[index];\n\n        if (lineNumber[0] < lineTotal + fileLineCount) {\n          const actualLine = lineNumber[0] - lineTotal;\n          const col = lineNumber[1];\n          const { name } = data.gameConfig.codeFiles[index];\n\n          snackbarMessage += ` (Line: ${actualLine}, Col: ${col}) in \"${name}\"`;\n          break;\n        }\n\n        lineTotal += fileLineCount;\n      }\n    }\n\n    store.enqueueSnackbar(snackbarMessage, {\n      variant: \"error\",\n      preventDuplicate: true,\n    });\n  }\n}\n\n// Handle script errors\nlogEvents.on(\"error\", handleError);\n\n(window as any).game = game;\n","import { openDB } from \"idb\";\n\nconst version = 10;\n\nclass GameManager {\n  db: any;\n  setReady: any;\n  ready = new Promise<boolean>((resolve) => {\n    this.setReady = resolve;\n  });\n\n  async init() {\n    const db = await openDB(\"GameConfig\", version, {\n      upgrade: this._upgrade,\n      blocked: this._blocked,\n      blocking: this._blocking,\n      terminated: this._terminated,\n    });\n\n    db.onerror = function (event: any) {\n      console.error(\"Database error: \" + event.target.errorCode);\n    };\n\n    // db.onsuccess = function(event) {\n    //   // Do something with request.result!\n    // };\n\n    this.db = db;\n\n    this.setReady();\n\n    console.debug(\"DATABASE\", db);\n  }\n\n  _upgrade(db: any, oldVersion: any, newVersion: any, transaction: any) {\n    console.debug(\"UPGRADE DATABASE\", version);\n\n    if (!db.objectStoreNames.contains(\"games\")) {\n      db.createObjectStore(\"games\", { keyPath: \"id\" });\n    }\n\n    if (!db.objectStoreNames.contains(\"gameData\")) {\n      db.createObjectStore(\"gameData\", {\n        keyPath: \"id\",\n      });\n    }\n  }\n\n  _blocked() {}\n\n  _blocking() {}\n\n  _terminated() {}\n\n  /**\n   * GAME CONFIG\n   */\n  async getAll() {\n    await this.ready;\n\n    // console.log(\"GETTING ALL GAMES\");\n\n    const transaction = this.db.transaction([\"games\"], \"readwrite\");\n    const gamesStore = transaction.objectStore(\"games\");\n    const games = await gamesStore.getAll();\n\n    await transaction.done;\n\n    return games;\n  }\n\n  async save(gameConfig: any) {\n    await this.ready;\n\n    // console.log(\"INDEX DB SAVE\", gameConfig.id, gameConfig);\n\n    const transaction = this.db.transaction([\"games\"], \"readwrite\");\n    const gamesStore = transaction.objectStore(\"games\");\n    await gamesStore.put(gameConfig);\n\n    await transaction.done;\n  }\n\n  async load(gameId: string) {\n    if (!gameId) {\n      return;\n    }\n\n    await this.ready;\n\n    const transaction = this.db.transaction([\"games\"], \"readwrite\");\n    const gamesStore = transaction.objectStore(\"games\");\n    const game = await gamesStore.get(gameId);\n\n    await transaction.done;\n\n    return game;\n  }\n\n  async delete(gameId: string) {\n    if (!gameId) {\n      return;\n    }\n\n    await this.ready;\n\n    const transaction = this.db.transaction([\"games\"], \"readwrite\");\n    const gamesStore = transaction.objectStore(\"games\");\n    await gamesStore.delete(gameId);\n\n    await transaction.done;\n  }\n\n  /**\n   * GAME DATA\n   */\n  async saveGameData(gameId: string, gameData: any) {\n    if (!gameId) {\n      return;\n    }\n\n    await this.ready;\n\n    gameData.id = gameId;\n\n    const transaction = this.db.transaction([\"gameData\"], \"readwrite\");\n    const gamesDataStore = transaction.objectStore(\"gameData\");\n    await gamesDataStore.put(gameData);\n\n    await transaction.done;\n  }\n\n  async loadGameData(gameId: string) {\n    if (!gameId) {\n      return;\n    }\n\n    await this.ready;\n\n    const transaction = this.db.transaction([\"gameData\"], \"readwrite\");\n    const gamesDataStore = transaction.objectStore(\"gameData\");\n    const gameData = await gamesDataStore.get(gameId);\n\n    await transaction.done;\n\n    return gameData;\n  }\n}\n\nexport const gameManager = new GameManager();\n\n// For resetting\n(window as any).resetGameStore = async () => {\n  const result = window.confirm(\n    \"Are you sure you want to reset the game store?\"\n  );\n\n  if (!result) {\n    return;\n  }\n\n  const transaction = gameManager.db.transaction([\"games\"], \"readwrite\");\n  const gamesStore = transaction.objectStore(\"games\");\n  await gamesStore.clear();\n  await transaction.done;\n\n  window.location.reload();\n};\n\n(window as any).setGameLayout = async (gameId: string, layout: string) => {\n  const gameConfig = await gameManager.load(gameId);\n\n  gameConfig.layout = layout;\n\n  await gameManager.save(gameConfig);\n\n  window.location.reload();\n};\n","import React from \"react\";\n\nexport interface LocalSettingsFlags {\n  highlightComponents: boolean; // Highlight components and apply padding for easier selection\n  previousHighlightComponents: boolean; // The last state of the setting (used when opening the style editor)\n  styleDrawerOpen: boolean;\n  tickWhileEditing: boolean; // Whether or not to run game logic while editing the layout\n}\n\nexport interface LocalSettings {\n  flags: LocalSettingsFlags;\n  lastCodeFile: string; // The last file that was being edited in the code editor\n  styleDrawerComponentName: string;\n  styleDrawerStyleId: string;\n}\n\nexport const store = {\n  state: {\n    localSettings: {\n      flags: {\n        highlightComponents: true,\n        previousHighlightComponents: true,\n        styleDrawerOpen: false,\n        tickWhileEditing: false,\n      },\n      lastCodeFile: \"\",\n      styleDrawerComponentName: \"\",\n      styleDrawerStyleId: \"\",\n    } as LocalSettings,\n    optionsDrawerOpen: false,\n  },\n  editorQuery: null as any, // The object to be able to query the editor\n  enqueueSnackbar: (() => {}) as any,\n  update: (): void => {\n    throw new Error(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n"],"sourceRoot":""}
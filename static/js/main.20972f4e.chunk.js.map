{"version":3,"sources":["data/game.ts","lib/log.ts","lib/context.ts","data/initial/code.ts","views/Code.tsx","views/Documentation/index.tsx","views/Documentation/index-md.ts","config/useSetupComponent.ts","components/Settings/CustomRepeatSetting.ts","components/Controls/Dropdown.tsx","components/Settings/DropdownSetting.tsx","components/Settings/StringSetting.tsx","data/customStyles.ts","lib/localSettings.ts","actions/styleDrawer.ts","components/Settings/StyleSetting.tsx","components/Settings/index.tsx","components/Settings/SwitchSetting.tsx","components/user/AppBar/ToolBarTabs.tsx","components/user/AppBar/index.tsx","config/useCustomStyle.ts","components/user/Button/index.tsx","components/user/Button/ButtonSettings.tsx","components/user/Text/TextSettings.tsx","components/user/Text/index.tsx","components/user/Card/index.tsx","lib/checkVisibility.ts","components/user/Container/ContainerSettings.tsx","components/user/Container/index.tsx","components/user/Grid/GridSettings.tsx","components/user/Grid/index.tsx","components/user/PathContainer/index.tsx","components/user/Table/index.tsx","components/user/VariableText/VariableTextSettings.tsx","components/user/VariableText/index.tsx","components/Toolbox.tsx","components/SettingsPanel.tsx","data/data.ts","components/user/components.ts","lib/saveGameData.ts","components/AutoSave.tsx","lib/components.ts","lib/loadGameData.ts","views/Edit.tsx","views/Play.tsx","views/Styling.tsx","components/Header.tsx","config/theme.ts","components/OptionsDrawer.tsx","components/StyleDrawer.tsx","config/useUpdate.ts","App.tsx","index.tsx"],"names":["setUpdateUIFunction","fn","game","update","settings","tickInterval","data","actions","conditionals","dataSources","visibilitySources","configure","console","log","isInitialized","isGameDataInitialized","_initialize","_initializeGameData","this","tick","currentTimeout","setTimeout","err","error","executeCode","files","localStorage","gameCode","JSON","parse","finalCode","file","code","lines","split","numberWidth","Math","floor","length","map","line","index","toString","padEnd","join","clearTimeout","eval","initialize","initializeGameData","message","window","LogLevels","DEBUG","INFO","WARN","ERROR","c","co","logLevels","logLevel","debug","args","info","warn","store","state","localSettings","highlightComponents","previousHighlightComponents","styleDrawerOpen","styleDrawerComponentName","styleDrawerStyleId","optionsDrawerOpen","editorQuery","Context","React","createContext","initialCode","Code","history","useHistory","useState","updateValue","deletingFiles","setDeletingFiles","selectedFiles","setSelectedFiles","save","stringify","addFile","name","push","id","uuid","useContext","useEffect","interval","setInterval","clearInterval","Grid","container","style","position","top","bottom","width","item","sm","List","dense","overflowY","selected","location","pathname","includes","ListItem","cursor","onClick","newSelectedFiles","handleFileClick","Input","value","onChange","event","target","ListItemText","primary","ListItemIcon","Divider","button","filter","checked","background","path","render","mode","theme","editorProps","$blockScrolling","height","fontSize","tabSize","commands","beautify","focus","to","useStyles","makeStyles","paper","padding","Documentation","classes","Paper","className","Breadcrumbs","aria-label","Link","color","href","Typography","plugins","children","useSharedStyles","componentEditing","boxShadow","minHeight","minWidth","componentSelected","componentClass","editing","sharedClasses","additonalClasses","useSetupComponent","properties","additionalClasses","useNode","events","connectors","connect","drag","useEditor","enabled","options","componentClassName","refFn","ref","CustomRepeatSetting","component","items","Dropdown","label","itemElements","MenuItem","labelElement","InputLabel","shrink","FormControl","fullWidth","Select","DropdownSetting","property","itemsFn","setProp","props","IconButton","StringSetting","TextField","customStyles","saveLocalSettings","openStyleDrawer","componentName","styleId","StyleSetting","Object","keys","Box","display","alignItems","flexGrow","_name","variant","Settings","config","settingsRows","configItem","remainingProps","TableRow","TableCell","scope","type","TableContainer","size","TableBody","SwitchSetting","Switch","ToolBarTabs","tabs","defaultTab","tab","default","match","parseInt","getCurrentTab","currentTabIndex","Tabs","visibilitySource","root","spacer","fullHeight","mixins","toolbar","AppBar","Toolbar","craft","related","node","triggerUpdate","setDefault","callback","useCustomStyle","base","styleGroup","customStyleName","setStyle","customStyle","customId","Button","text","onClickAction","actionContext","baseStyle","action","margin","styleProperties","Text","rules","canDrag","CardTop","CardContent","CardBottom","CardActions","canMoveIn","incomingNode","Card","is","canvas","checkVisibility","extraStyle","opacity","Container","sizes","GridContainer","spacing","GridItem","xs","main","PathContainer","visible","float","TableRows","columnNames","rows","currentContext","column","itemIndex","cells","itemProperty","Error","Table","itemSource","headerRow","itemSourceFunction","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","VariableText","dataProperty","subProperty","undefined","Toolbox","selectedComponent","setSelectedComponent","px","py","direction","justify","pb","create","selectNode","propertyConfigDefinitions","BaseProperties","definition","mt","Chip","newProps","assign","SettingsPanel","query","currentNodeId","nodes","isDeletable","createElement","delete","gameData","components","allComponents","saveGameData","baseStyles","random","layout","serialize","AutoSave","loadGameData","storedGameData","loadComponentProperties","baseComponents","Content","Edit","resolver","Play","Styling","Header","navigate","createMuiTheme","palette","blueGrey","secondary","ImportExportDialog","onClose","currentAllGameData","btoa","allGameData","setAllGameData","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","reload","OptionsDrawer","showImportExprt","setShowImportExport","Drawer","supportedComponents","StyleDrawer","useUpdate","selectedStyle","updateSettings","anchor","BackdropProps","invisible","styleIds","indexOf","nextStyle","App","setState","ThemeProvider","CssBaseline","Provider","basename","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.20972f4e.chunk.js","sourcesContent":["interface AnyObject {\n  [key: string]: any;\n}\n\nexport function setUpdateUIFunction(fn: any) {\n  game.update = fn;\n}\n\nexport const game = {\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Conditionals\n  conditionals: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Visibility sources\n  visibilitySources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialize\n  isInitialized: false,\n  isGameDataInitialized: false,\n\n  _initialize: () => {\n    console.log(\"game.initialize not defined\");\n  },\n\n  _initializeGameData: () => {\n    console.log(\"game.initializeGameData not defined\");\n  },\n\n  get initialize() {\n    return this._initialize;\n  },\n\n  set initialize(fn) {\n    this._initialize = () => {\n      console.log(\"Initializing Game\");\n      this.isInitialized = true;\n      fn();\n    };\n  },\n\n  get initializeGameData() {\n    return this._initializeGameData;\n  },\n\n  set initializeGameData(fn) {\n    this._initializeGameData = () => {\n      console.log(\"Initializing Game Data\");\n      this.isGameDataInitialized = true;\n      fn();\n    };\n  },\n\n  // Tick\n  tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  // Update\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n};\n\nlet currentTimeout: any = null;\n\n// Tick\nfunction tick() {\n  currentTimeout = setTimeout(() => {\n    try {\n      game.tick();\n    } catch (err) {\n      console.error(err);\n    }\n    tick();\n  }, game.settings.tickInterval);\n}\n\nexport function executeCode() {\n  const files: any = localStorage.gameCode\n    ? JSON.parse(localStorage.gameCode)\n    : [];\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\\n\";\n  }\n\n  const lines = finalCode.split(\"\\n\");\n  const numberWidth = Math.floor(Math.log(lines.length));\n\n  console.log(\n    lines\n      .map((line, index) => {\n        const numberedLine = `${(index + 1)\n          .toString()\n          .padEnd(numberWidth)} ${line}`;\n        return numberedLine;\n      })\n      .join(\"\\n\")\n  );\n\n  try {\n    // Stop anything currently executing\n    if (currentTimeout) {\n      clearTimeout(currentTimeout);\n    }\n\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    if (!game.isInitialized) {\n      game.initialize();\n    }\n\n    if (!game.isGameDataInitialized) {\n      game.initializeGameData();\n    }\n\n    game.configure(game.settings);\n\n    tick();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\n(window as any).game = game;\n","// Mutate console for better logging\n\nconst LogLevels = {\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n};\n\nconst c = console as any;\nconst co = { ...console };\n\nc.logLevels = LogLevels;\nc.logLevel = LogLevels.DEBUG;\n\nc.debug = (...args: any) => {\n  if (c.logLevel <= LogLevels.DEBUG) {\n    co.debug(\"DEBUG\", ...args);\n  }\n};\n\nc.info = (...args: any) => {\n  if (c.logLevel <= LogLevels.INFO) {\n    co.info(\"INFO\", ...args);\n  }\n};\n\nc.warn = (...args: any) => {\n  if (c.logLevel <= LogLevels.WARN) {\n    co.warn(\"WARN\", ...args);\n  }\n};\n\nc.error = (...args: any) => {\n  if (c.logLevel <= LogLevels.ERROR) {\n    co.error(\"ERROR\", ...args);\n  }\n};\n\nexport default console;\n","import React from \"react\";\n\nexport const store = {\n  state: {\n    localSettings: {\n      highlightComponents: true,\n      previousHighlightComponents: true,\n      styleDrawerOpen: false,\n      styleDrawerComponentName: \"\",\n      styleDrawerStyleId: \"\",\n    },\n    optionsDrawerOpen: false,\n  },\n  editorQuery: null as any,\n  update: () => {\n    console.log(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n","const main = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = () => {\n  // Code executed when the application starts up\n}\n\ngame.initializeGameData = () => {\n  // Update any initial game data here\n  game.data = new GameData()\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n`;\n\nconst gameData = `\n\nclass GameData {\n  constructor() {\n    // Define game properties here\n  }\n\n  // Can use getters as well for use with variableText\n}\n`;\n\nexport const initialCode = {\n  main,\n  gameData,\n};\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport beautify from \"ace-builds/src-noconflict/ext-beautify\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Input,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Switch as MUISwitch,\n} from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../lib/context\";\nimport { executeCode } from \"../data/game\";\nimport { v4 as uuid } from \"uuid\";\nimport { initialCode } from \"../data/initial/code\";\n\nlet files: any = localStorage.gameCode ? JSON.parse(localStorage.gameCode) : [];\n\nexport function Code() {\n  const history = useHistory();\n  const [updateValue, update] = useState(false);\n  const [deletingFiles, setDeletingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles]: [any, any] = useState({});\n  useContext(Context);\n\n  function save() {\n    localStorage.gameCode = JSON.stringify(files);\n  }\n\n  function handleFileClick(id: string, index: number) {\n    if (deletingFiles) {\n      const newSelectedFiles = { ...selectedFiles };\n      newSelectedFiles[index] = !newSelectedFiles[index];\n      setSelectedFiles(newSelectedFiles);\n      // update(!updateValue);\n    } else {\n      history.push(`/code/${id}`);\n    }\n  }\n\n  function deleteFiles() {\n    files = files.filter((item: any, index: number) => {\n      return !selectedFiles[index];\n    });\n\n    setSelectedFiles({});\n  }\n\n  function addFile(name: string, code: string) {\n    files.push({\n      id: uuid(),\n      name,\n      code,\n    });\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode();\n    };\n  }, []);\n\n  if (files.length === 0) {\n    addFile(\"main\", \"//main\\n\" + initialCode.main);\n    addFile(\"gameData\", \"//gameData\\n\" + initialCode.gameData);\n  }\n\n  return (\n    <Grid\n      container\n      style={{\n        position: \"absolute\",\n        top: \"37px\",\n        bottom: \"0px\",\n        width: \"100%\",\n      }}\n    >\n      <Grid item sm={2} style={{ position: \"relative\" }}>\n        <List\n          dense={true}\n          style={{\n            overflowY: \"auto\",\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"0px\",\n            bottom: \"0px\",\n          }}\n        >\n          {files.map((file: any, index: number) => {\n            const selected = history.location.pathname.includes(file.id);\n\n            const button = { button: true };\n\n            return (\n              <ListItem\n                key={file.id}\n                style={{ cursor: \"pointer\" }}\n                selected={selected}\n                onClick={() => {\n                  handleFileClick(file.id, index);\n                }}\n              >\n                {selected ? (\n                  <Input\n                    value={file.name}\n                    onChange={(event) => {\n                      file.name = event.target.value;\n                      update(!updateValue);\n                    }}\n                  />\n                ) : (\n                  <ListItemText primary={file.name} />\n                )}\n                {deletingFiles && (\n                  <ListItemIcon>\n                    {selectedFiles[index] ? (\n                      <CheckBoxIcon />\n                    ) : (\n                      <CheckBoxOutlineBlankIcon />\n                    )}\n                  </ListItemIcon>\n                )}\n              </ListItem>\n            );\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              const name = `New File ${files.length}`;\n\n              addFile(name, `//${name}`);\n\n              update(!updateValue);\n            }}\n          >\n            <ListItemText primary=\"+ New File\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemText primary=\"Delete Files\" />\n            <MUISwitch\n              onChange={(event) => {\n                if (deletingFiles) {\n                  deleteFiles();\n                }\n\n                setDeletingFiles(event.target.checked);\n              }}\n              checked={deletingFiles}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary=\"ctrl+shift+b - beautify\" />\n          </ListItem>\n        </List>\n      </Grid>\n      <Grid item sm={10} style={{ background: \"red\", position: \"relative\" }}>\n        <Switch>\n          {files.map((file: any) => {\n            return (\n              <Route\n                key={file.id}\n                path={`/code/${file.id}`}\n                render={() => {\n                  return (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        top: \"0px\",\n                        bottom: \"0px\",\n                      }}\n                    >\n                      <AceEditor\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        onChange={(code: string) => {\n                          file.code = code;\n                        }}\n                        name=\"Code Editor\"\n                        editorProps={{ $blockScrolling: true }}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          fontSize: \"1.1em\",\n                        }}\n                        value={file.code}\n                        tabSize={2}\n                        commands={beautify.commands}\n                        focus\n                      />\n                    </div>\n                  );\n                }}\n              />\n            );\n          })}\n          <Route path=\"/code\">\n            <Redirect to={`/code/${files[0].id}`} />\n          </Route>\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  Breadcrumbs,\n  Container,\n  Link,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport index from \"./index-md\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"1em\",\n  },\n}));\n\nexport function Documentation() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link color=\"inherit\" href=\"/\">\n            Material-UI\n          </Link>\n          <Link color=\"inherit\" href=\"/getting-started/installation/\">\n            Core\n          </Link>\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\n        </Breadcrumbs>\n        <ReactMarkdown plugins={[]} children={index} />\n      </Paper>\n    </Container>\n  );\n}\n","const md = `\n# Idling Engine\n`;\n\nexport default md;\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Context, store } from \"../lib/context\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px rgba(255, 50, 50, 1)\",\n    minHeight: \"5px\",\n    minWidth: \"5px\",\n    padding: \"10px!important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nfunction componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing && store.state.localSettings.highlightComponents\n      ? sharedClasses.componentEditing\n      : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n\ntype Properties = {\n  additionalClasses?: string[];\n};\n\nexport function useSetupComponent(properties: Properties = {}) {\n  const { additionalClasses = [] } = properties;\n\n  const store = useContext(Context);\n\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state: any) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state: any) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n  const componentClassName = componentClass(\n    enabled,\n    selected,\n    sharedClasses,\n    additionalClasses\n  );\n\n  const refFn = (ref: any) => connect(drag(ref));\n\n  return {\n    refFn,\n    // connect,\n    // drag,\n    selected,\n    enabled,\n    // sharedClasses,\n    componentClassName,\n    store,\n  };\n}\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport const Dropdown = ({ value, items, label, onChange }: any) => {\n  const itemElements = [];\n\n  for (const item of items) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    itemElements.push(\n      <MenuItem key={name} value={value}>\n        {name}\n      </MenuItem>\n    );\n  }\n\n  let labelElement = null;\n  if (label) {\n    labelElement = <InputLabel shrink>{label}</InputLabel>;\n  }\n\n  return (\n    <FormControl fullWidth>\n      {labelElement}\n      <Select value={value || \"\"} onChange={onChange}>\n        {itemElements}\n      </Select>\n    </FormControl>\n  );\n};\n","import { IconButton } from \"@material-ui/core\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\n\ninterface Props {\n  property: any;\n  value: any;\n  itemsFn: () => { name: string; value: any }[];\n  setProp: any;\n}\n\nexport const DropdownSetting = ({\n  property,\n  value,\n  itemsFn,\n  setProp,\n}: Props) => {\n  return (\n    <>\n      <Dropdown\n        value={value || \"\"}\n        items={itemsFn()}\n        onChange={(event: any) => {\n          setProp((props: any) => (props[property] = event.target.value));\n        }}\n      />\n      <IconButton\n        onClick={() => {\n          setProp((props: any) => (props[property] = null));\n        }}\n      >\n        <SettingsBackupRestoreIcon />\n      </IconButton>\n    </>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => {\n          props[property] = event.target.value;\n        });\n      }}\n    />\n  );\n};\n","export const customStyles: {\n  [key: string]: any;\n} = {};\n","import { store } from \"./context\";\n\nexport function loadLocalSettings() {\n  if (localStorage.localSettings) {\n    store.state.localSettings = JSON.parse(localStorage.localSettings);\n  }\n}\n\nexport function saveLocalSettings() {\n  localStorage.localSettings = JSON.stringify(store.state.localSettings);\n}\n","import { customStyles } from \"../data/customStyles\";\nimport { store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function openStyleDrawer(options: any = {}) {\n  store.state.localSettings.styleDrawerOpen = true;\n  store.state.localSettings.previousHighlightComponents =\n    store.state.localSettings.highlightComponents;\n  store.state.localSettings.highlightComponents = false;\n\n  if (options.componentName) {\n    store.state.localSettings.styleDrawerComponentName = options.componentName;\n    store.state.localSettings.styleDrawerStyleId = options.styleId || \"\";\n\n    customStyles[options.componentName] =\n      customStyles[options.componentName] || {};\n  }\n\n  saveLocalSettings();\n\n  store.update();\n}\n\nexport function closeStyleDrawer() {\n  store.state.localSettings.styleDrawerOpen = false;\n  store.state.localSettings.highlightComponents =\n    store.state.localSettings.previousHighlightComponents;\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { Box, Button, IconButton } from \"@material-ui/core\";\nimport { customStyles } from \"../../data/customStyles\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { openStyleDrawer } from \"../../actions/styleDrawer\";\n\ninterface Props {\n  property: any;\n  value: any;\n  componentName: string;\n  setProp: any;\n}\n\nexport const StyleSetting = ({\n  property,\n  value,\n  componentName,\n  setProp,\n}: Props) => {\n  if (\n    !customStyles[componentName] ||\n    Object.keys(customStyles[componentName]).length === 0\n  ) {\n    return (\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          openStyleDrawer({\n            componentName,\n          });\n        }}\n      >\n        Define a Style\n      </Button>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={Object.keys(customStyles[componentName]).map((id) => ({\n            value: id,\n            name: customStyles[componentName][id]._name,\n          }))}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <SettingsBackupRestoreIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            openStyleDrawer({\n              componentName,\n              styleId: value,\n            });\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport { CustomRepeatSetting } from \"./CustomRepeatSetting\";\nexport { DropdownSetting } from \"./DropdownSetting\";\nexport { SliderSetting } from \"./SliderSetting\";\nexport { StringSetting } from \"./StringSetting\";\nexport { StyleSetting } from \"./StyleSetting\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  for (const configItem of config) {\n    const { property, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={property}>\n        <TableCell component=\"td\" scope=\"row\">\n          {property}\n        </TableCell>\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Switch } from \"@material-ui/core\";\n\nexport const SwitchSetting = ({ property, value, onChange }: any) => {\n  return <Switch checked={value || false} onChange={onChange} />;\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { game } from \"../../../data/game\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n  visibilitySource: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        if (tab.visibilitySource) {\n          if (!game.visibilitySources[tab.visibilitySource]()) {\n            return null;\n          }\n        }\n\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Switch,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting, Settings, StringSetting } from \"../../Settings\";\nimport { SwitchSetting } from \"../../Settings/SwitchSetting\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const classes = useStyles();\n  const { refFn, componentClassName, store } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n\n  return (\n    <div\n      ref={refFn}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\" className={componentClassName}>\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    props: node.data.props,\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const setDefault = (defaultTab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    defaultTab.default = true;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const visibilitySources = Object.keys(game.visibilitySources);\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <Settings\n            config={[\n              {\n                type: StringSetting,\n                property: \"name\",\n              },\n              {\n                type: StringSetting,\n                property: \"path\",\n              },\n              {\n                type: StringSetting,\n                property: \"to\",\n              },\n              {\n                type: DropdownSetting,\n                property: \"visibilitySource\",\n                itemsFn: () => visibilitySources,\n              },\n              {\n                type: SwitchSetting,\n                property: \"default\",\n                onChange: () => setDefault(tab),\n              },\n            ]}\n            properties={tab}\n            setProp={(callback: any) => {\n              // Custom set prop function\n              // Call the callback with the tab as the \"props\" we want to update\n              callback(tab);\n\n              // Then call the actual setProp to trigger the update\n              setProp((props: any) => {\n                props.triggerUpdate = !triggerUpdate;\n              });\n            }}\n          />\n        );\n\n        // return (\n        //   <div key={index}>\n        //     <TextField\n        //       label=\"Name\"\n        //       value={tab.name}\n        //       onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"Path\"\n        //       value={tab.path}\n        //       onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"To\"\n        //       value={tab.to}\n        //       onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n        //     />\n        //     <Switch\n        //       checked={tab.default || false}\n        //       onChange={() => setDefault(tab)}\n        //     />\n        //   </div>\n        // );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n","import { useState } from \"react\";\n\nexport function useCustomStyle(\n  base: any,\n  styleGroup: any,\n  customStyleName: string\n) {\n  const [style, setStyle] = useState(null as any);\n\n  let customStyle = null;\n  if (customStyleName) {\n    customStyle = styleGroup[customStyleName];\n  }\n\n  // console.log(\n  //   \"style && customStyle.customId !== style.customId\",\n  //   style && customStyle.customId !== style.customId\n  // );\n  // console.log(customStyle);\n\n  // Already have a style and the customId is different\n  // Don't have a style and we have a custom style\n  if (\n    (style && customStyle && customStyle.customId !== style.customId) ||\n    (!style && customStyle)\n  ) {\n    setStyle({\n      ...base,\n      ...customStyle,\n    });\n  }\n\n  // If the customStyle is reset\n  if (style && !customStyle) {\n    setStyle(null);\n  }\n\n  // Return the base style if nothing else\n  return style || base;\n}\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { store } from \"../../../lib/context\";\nimport { game } from \"../../../data/game\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ButtonSettings } from \"./ButtonSettings\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { StringSetting } from \"../../Settings\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Button.baseStyle,\n    customStyles.Button,\n    customStyleName\n  );\n\n  return (\n    <MaterialButton\n      style={style}\n      ref={refFn}\n      className={componentClassName}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Button\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n\nButton.baseStyle = {\n  margin: \"0em\",\n};\n\nButton.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const TextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n          componentName,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import ContentEditable from \"react-contenteditable\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { TextSettings } from \"./TextSettings\";\nimport { StringSetting } from \"../../Settings\";\n\nexport const Text = ({ text, customStyleName }: any) => {\n  const { refFn, selected, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Text.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {text}\n    </span>\n  );\n};\n\nText.craft = {\n  props: {\n    text: \"Text\",\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n\nText.baseStyle = {\n  margin: \"0em\",\n};\n\nText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n","import { Text } from \"../Text\";\nimport { Button } from \"../Button\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { Card as MUICard, CardActions, CardContent } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return (\n    <CardContent ref={connect} className=\"text-only\">\n      {children}\n    </CardContent>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return <CardActions ref={connect}>{children}</CardActions>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = () => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUICard ref={refFn} className={componentClassName}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </MUICard>\n  );\n};\n","import { game } from \"../data/game\";\n\nexport function checkVisibility(visibilitySource: string, enabled: boolean) {\n  if (!visibilitySource) {\n    return {};\n  }\n\n  const extraStyle: any = {};\n\n  if (\n    game.visibilitySources[visibilitySource] &&\n    !game.visibilitySources[visibilitySource]()\n  ) {\n    if (enabled) {\n      extraStyle.opacity = \"0.25\";\n    } else {\n      return null;\n    }\n  }\n\n  return extraStyle;\n}\n","import { useNode } from \"@craftjs/core\";\nimport { Settings } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { Container as MUIContainer } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { ContainerSettings } from \"./ContainerSettings\";\n\nexport const Container = ({ children, visibilitySource }: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <MUIContainer\n      ref={refFn}\n      style={{ ...Container.baseStyle, ...extraStyle }}\n      className={componentClassName}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n\nContainer.baseStyle = {\n  padding: \"0em\",\n};\n","import { useNode } from \"@craftjs/core\";\nimport { game } from \"../../../data/game\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nconst sizes = [\n  { name: \"3\", value: 3 },\n  { name: \"4\", value: 4 },\n  { name: \"6\", value: 6 },\n];\n\nexport const GridContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nexport const GridItemSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"size\",\n          itemsFn: () => sizes,\n        },\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { GridContainerSettings, GridItemSettings } from \"./GridSettings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { StringSetting } from \"../../Settings\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const GridContainer = ({ children, visibilitySource }: any) => {\n  const classes = useStyles();\n  const { refFn, componentClassName, enabled } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      container\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n      spacing={2}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nGridContainer.craft = {\n  props: {},\n  related: {\n    settings: GridContainerSettings,\n  },\n};\n\nexport const GridItem = ({\n  children,\n  size,\n  visibilitySource,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const style = useCustomStyle(\n    GridItem.baseStyle,\n    customStyles.GridItem,\n    customStyleName\n  );\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      item\n      xs={size}\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n    >\n      <Paper style={style}>{children}</Paper>\n    </Grid>\n  );\n};\n\nGridItem.craft = {\n  props: { size: 6 },\n  related: {\n    settings: GridItemSettings,\n  },\n};\n\nGridItem.baseStyle = {\n  padding: \"0em\",\n  height: \"100%\",\n};\n\nGridItem.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { useNode } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children, customStyleName }: any) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { refFn, enabled, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.main],\n  });\n\n  const visible = history.location.pathname.includes(path);\n\n  const style = useCustomStyle(\n    PathContainer.baseStyle,\n    customStyles.PathContainer,\n    customStyleName\n  );\n\n  return (\n    <MUIContainer ref={refFn} className={componentClassName} style={style}>\n      {enabled && (\n        <div>\n          <div style={{ float: \"right\", height: \"0em\" }}>\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nPathContainer.styleProperties = [\n  {\n    property: \"margin\",\n    type: StringSetting,\n  },\n];\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"path\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n\nPathContainer.baseStyle = {\n  margin: \"0em\",\n};\n","import React from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { Settings } from \"../../Settings\";\nimport { CustomRepeatSetting } from \"../../Settings/CustomRepeatSetting\";\nimport { game } from \"../../../data/game\";\nimport { Button } from \"../Button\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { Dropdown } from \"../../Controls/Dropdown\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n  const currentContext = {\n    item: {} as any,\n    index: \"0\",\n    column: {} as any,\n  };\n\n  try {\n    for (const itemIndex in items) {\n      const item = items[itemIndex];\n      const cells = [];\n\n      currentContext.item = item;\n\n      for (const index in columnNames) {\n        const column = columnNames[index];\n\n        currentContext.index = index;\n        currentContext.column = column;\n\n        const { name } = column;\n        const itemProperty = item[column.property];\n\n        switch (column.type) {\n          case \"string\":\n            if (typeof itemProperty !== \"string\") {\n              throw new Error(\"Trying to use a non-string value as a string\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n            break;\n          case \"variableString\":\n            if (!itemProperty.data) {\n              throw new Error(\"No data function for a variableString\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n            break;\n          case \"button\":\n            if (!itemProperty.onClickAction) {\n              throw new Error(\"No onClickAcion function for a button\");\n            }\n\n            cells.push(\n              <TableCell key={name}>\n                <Button\n                  text={itemProperty.text}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClickAction={itemProperty.onClickAction}\n                  actionContext={item}\n                />\n              </TableCell>\n            );\n            break;\n        }\n      }\n\n      rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n    }\n  } catch (err) {\n    return (\n      <TableBody>\n        <TableCell>\n          <div>Table Data Error! {err.message}</div>\n          <div>Column Index: {currentContext.index}</div>\n          <div>Column Type: {currentContext.column.type}</div>\n          <div>Item Data: {JSON.stringify(currentContext.item)}</div>\n        </TableCell>\n      </TableBody>\n    );\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={refFn} className={componentClassName}>\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <Dropdown\n        value={item.type || \"\"}\n        items={[\n          { name: \"String\", value: \"string\" },\n          { name: \"Button\", value: \"button\" },\n          { name: \"Variable String\", value: \"variableString\" },\n        ]}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"itemSource\",\n          itemsFn: () => Object.keys(game.dataSources),\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const VariableTextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"dataProperty\",\n        },\n        {\n          type: StringSetting,\n          property: \"subProperty\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { StringSetting } from \"../../Settings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { VariableTextSettings } from \"./VariableTextSettings\";\n\nexport const VariableText = ({\n  dataProperty,\n  subProperty,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    VariableText.baseStyle,\n    customStyles.VariableText,\n    customStyleName\n  );\n\n  let value = game.data[dataProperty];\n  if (value && subProperty) {\n    value = value[subProperty];\n  }\n\n  if (typeof value === \"object\") {\n    value = undefined;\n  }\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {value ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nVariableText.craft = {\n  props: {},\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: VariableTextSettings,\n  },\n};\n\nVariableText.baseStyle = {\n  margin: \"0em\",\n};\n\nVariableText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n","import { Element, useEditor } from \"@craftjs/core\";\nimport { store } from \"../lib/context\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\nimport { AppBar, GridContainer, GridItem, PathContainer } from \"./user\";\nimport { Button } from \"./user/Button\";\nimport { Container } from \"./user/Container\";\nimport { Text } from \"./user/Text\";\nimport { VariableText } from \"./user/VariableText\";\nimport { Table } from \"./user/Table\";\nimport { useState } from \"react\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport const Toolbox = () => {\n  const { connectors, actions } = useEditor();\n\n  const [selectedComponent, setSelectedComponent] = useState<{\n    component: any;\n  } | null>(null);\n\n  const getToolboxComponents = () => {\n    return [\n      {\n        name: \"Button\",\n        component: Button,\n        ref: (ref: any) => connectors.create(ref, <Button />),\n      },\n      {\n        name: \"Text\",\n        component: Text,\n        ref: (ref: any) => connectors.create(ref, <Text text=\"Hi world\" />),\n      },\n      {\n        name: \"Container\",\n        component: Container,\n        ref: (ref: any) =>\n          connectors.create(\n            ref,\n            <Element is={Container} canvas>\n              <Text text=\"Container\" />\n            </Element>\n          ),\n      },\n      {\n        name: \"Variable Text\",\n        component: VariableText,\n        ref: (ref: any) => connectors.create(ref, <VariableText />),\n      },\n      {\n        name: \"App Bar\",\n        component: AppBar,\n        ref: (ref: any) => connectors.create(ref, <AppBar />),\n      },\n      {\n        name: \"Path Container\",\n        component: PathContainer,\n        ref: (ref: any) =>\n          connectors.create(ref, <Element is={PathContainer} canvas />),\n      },\n      {\n        name: \"Table\",\n        component: Table,\n        ref: (ref: any) => connectors.create(ref, <Table />),\n      },\n      {\n        name: \"Grid Container\",\n        component: GridContainer,\n        ref: (ref: any) =>\n          connectors.create(\n            ref,\n            <Element is={GridContainer} canvas>\n              <Element is={GridItem} canvas>\n                <Text text=\"Grid Item\" />\n              </Element>\n              <Element is={GridItem} canvas>\n                <Text text=\"Grid Item\" />\n              </Element>\n            </Element>\n          ),\n      },\n      {\n        name: \"Grid Item\",\n        component: GridItem,\n        ref: (ref: any) =>\n          connectors.create(\n            ref,\n            <Element is={GridItem} canvas>\n              <Text text=\"Grid Item\" />\n            </Element>\n          ),\n      },\n      // {\n      //   name: \"Card\",\n      //   component: Card,\n      //   ref: (ref) => connectors.create(ref, <Card />),\n      // },\n    ];\n  };\n\n  return (\n    <>\n      <Box px={2} py={2}>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={1}\n        >\n          <Box pb={2}>\n            <Typography>Drag to add</Typography>\n            Highlight components\n            <Switch\n              checked={store.state.localSettings.highlightComponents}\n              onChange={() => {\n                store.state.localSettings.highlightComponents = !store.state\n                  .localSettings.highlightComponents;\n\n                saveLocalSettings();\n\n                store.update();\n              }}\n            />\n          </Box>\n          {getToolboxComponents().map((component) => {\n            return (\n              <Grid container direction=\"column\" item>\n                <MaterialButton\n                  ref={component.ref}\n                  variant=\"contained\"\n                  onClick={() => {\n                    actions.selectNode();\n                    setSelectedComponent({ component: component.component });\n                  }}\n                >\n                  {component.name}\n                </MaterialButton>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n      {selectedComponent ? (\n        <BaseProperties component={selectedComponent.component} />\n      ) : null}\n    </>\n  );\n};\n\nconst propertyConfigDefinitions: {\n  [key: string]: any;\n} = {\n  margin: {\n    property: \"margin\",\n    type: StringSetting,\n  },\n  padding: {\n    property: \"padding\",\n    type: StringSetting,\n  },\n  height: {\n    property: \"height\",\n    type: StringSetting,\n  },\n};\n\nconst BaseProperties = ({ component }: any) => {\n  const { baseStyle } = component;\n\n  if (!baseStyle) {\n    return null;\n  }\n\n  const config = [];\n  for (const property in baseStyle) {\n    const definition = propertyConfigDefinitions[property];\n\n    config.push(definition);\n  }\n\n  return (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                  Base Component Config\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={component.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n\n        <Settings\n          config={config}\n          properties={baseStyle}\n          setProp={(callback: (props: any) => void) => {\n            const newProps = Object.assign({}, baseStyle);\n            callback(newProps);\n            component.baseStyle = newProps;\n            store.update();\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","export const data = {\n  gameData: null as any,\n};\n","import * as allComponents from \"./index\";\n\nexport const components: any = {};\n\nfor (const componentName in allComponents) {\n  // Kinda hacky but works\n  components[componentName] = (allComponents as any)[componentName];\n}\n","import { store } from \"./context\";\nimport { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../components/user/components\";\n\nexport function saveGameData() {\n  const { editorQuery } = store;\n\n  if (!editorQuery) {\n    console.error(\"store.editorQuery not set\");\n    return;\n  }\n\n  console.debug(\"Saving game data\");\n\n  const baseStyles: any = {};\n\n  for (const componentName in components) {\n    // Kinda hacky but works\n    const component = (components as any)[componentName];\n\n    baseStyles[componentName] = component.baseStyle;\n  }\n\n  data.gameData = {\n    id: Math.random(),\n    layout: editorQuery.serialize(),\n    baseStyles,\n    customStyles,\n  };\n\n  localStorage.gameData = JSON.stringify(data.gameData);\n}\n","import { useEffect } from \"react\";\nimport { saveGameData } from \"../lib/saveGameData\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      saveGameData();\n    }, 2000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import * as baseComponents from \"../components/user\";\n\nexport const components = {};\n\n// Apply the predefined components to the full list\nObject.assign(components, baseComponents);\n","import { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../components/user/components\";\n\nfunction loadComponentProperties(baseStyles: any) {\n  for (const componentName in baseStyles) {\n    const component = components[componentName];\n    const baseStyle = baseStyles[componentName];\n\n    if (component && baseStyle) {\n      component.baseStyle = {\n        ...component.baseStyle,\n        ...baseStyle,\n      };\n    }\n  }\n}\n\nexport function loadGameData() {\n  try {\n    let storedGameData = localStorage.gameData;\n\n    if (storedGameData) {\n      storedGameData = JSON.parse(storedGameData);\n\n      if (storedGameData.baseStyles) {\n        loadComponentProperties(storedGameData.baseStyles);\n      }\n\n      if (storedGameData.customStyles) {\n        Object.assign(customStyles, storedGameData.customStyles);\n      }\n\n      data.gameData = storedGameData;\n\n      return storedGameData;\n    }\n\n    console.warn(\"No game data loaded\");\n  } catch (err) {\n    console.error(err);\n  }\n\n  data.gameData = {};\n  return null;\n}\n","import { Paper, Grid } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Toolbox } from \"../components/Toolbox\";\nimport { SettingsPanel } from \"../components/SettingsPanel\";\n\nimport { Container, Text } from \"../components/user\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"../components/AutoSave\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\nimport { HashRouter } from \"react-router-dom\";\nimport { data } from \"../data/data\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { useEffect } from \"react\";\n\nfunction Content() {\n  const { query } = useEditor();\n\n  useEffect(() => {\n    return () => {\n      saveGameData();\n    };\n  }, []);\n\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <Grid container>\n      <Grid item xs style={{ background: \"#eee\" }}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}>\n            {/*This is the default layout*/}\n            <Element is={Container} padding={5} background=\"#eee\" canvas>\n              <Text\n                text={\"Start dragging components in (and delete this one)\"}\n              />\n            </Element>\n          </Frame>\n        </HashRouter>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={undefined}>\n          <Toolbox />\n          <SettingsPanel />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function Edit() {\n  return (\n    <div>\n      <Editor resolver={components}>\n        <AutoSave />\n        <Content />\n      </Editor>\n    </div>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\nimport { data } from \"../data/data\";\n\nexport function Play() {\n  const history = useHistory();\n\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  useEffect(() => {\n    // If there is no game data, then switch to the editor\n    if (!data.gameData) {\n      console.error(new Error(\"No playGameData routing to /edit\"));\n      history.push(\"/edit\");\n    }\n  }, [history]);\n\n  return (\n    <div style={{ background: \"#eee\" }}>\n      <Editor resolver={components} enabled={false}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { loadGameData } from \"../lib/loadGameData\";\nimport { data } from \"../data/data\";\n\nexport function Styling() {\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  return <div>Styling</div>;\n}\n","import { Button } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context, store } from \"../lib/context\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { openStyleDrawer } from \"../actions/styleDrawer\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [updateValue, update] = useState(false);\n\n  useContext(Context);\n\n  function navigate(path: string) {\n    history.push(path);\n    update(!updateValue);\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          store.state.optionsDrawerOpen = true;\n          store.update();\n        }}\n      >\n        Options\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/edit\");\n        }}\n        variant={path.includes(\"/edit\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Edit\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/code\");\n        }}\n        variant={path.includes(\"/code\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Code\n      </Button>\n      <Button\n        onClick={() => {\n          openStyleDrawer();\n        }}\n      >\n        Styling\n      </Button>\n      <Button\n        onClick={() => {\n          saveGameData();\n          navigate(\"/play\");\n        }}\n        variant={path.includes(\"/play\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Play\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/documentation\");\n        }}\n        variant={path.includes(\"/documentation\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Documentation\n      </Button>\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blueGrey[900],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: blueGrey[100],\n    },\n  },\n});\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\n// import { useHistory } from \"react-router-dom\";\nimport { store } from \"../lib/context\";\nimport { useState } from \"react\";\n\nconst ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameData = {\n    gameData: localStorage.gameData,\n    gameCode: localStorage.gameCode,\n  };\n\n  const [allGameData, setAllGameData] = useState(\n    btoa(JSON.stringify(currentAllGameData))\n  );\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Import or export game data\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameData}\n          onChange={(event) => {\n            setAllGameData(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameData));\n            localStorage.gameData = data.gameData;\n            localStorage.gameCode = data.gameCode;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const OptionsDrawer = () => {\n  // const history = useHistory();\n\n  const [showImportExprt, setShowImportExport] = useState(false);\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.optionsDrawerOpen}\n        onClose={() => {\n          store.state.optionsDrawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              delete localStorage.gameData;\n              delete localStorage.gameCode;\n              window.location.reload();\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Reset All\"\n              secondary=\"Reset all game configuration\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            onClick={() => {\n              setShowImportExport(true);\n            }}\n          >\n            <ListItemIcon>\n              <ImportExportIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Import / Export\"\n              secondary=\"Import or export your game data\"\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n    </div>\n  );\n};\n","import { Box, Button, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { useEffect, useState } from \"react\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { customStyles } from \"../data/customStyles\";\nimport { Dropdown } from \"./Controls/Dropdown\";\nimport * as components from \"./user\";\nimport { v4 as uuid } from \"uuid\";\nimport { closeStyleDrawer } from \"../actions/styleDrawer\";\nimport { useUpdate } from \"../config/useUpdate\";\n\nconst supportedComponents: any = {\n  [components.Button.name]: components.Button,\n  [components.PathContainer.name]: components.PathContainer,\n  [components.GridItem.name]: components.GridItem,\n  [components.Text.name]: components.Text,\n  [components.VariableText.name]: components.VariableText,\n};\n\nexport const StyleDrawer = () => {\n  const update = useUpdate();\n\n  const {\n    styleDrawerComponentName: selectedComponent,\n    styleDrawerStyleId: selectedStyle,\n  } = store.state.localSettings;\n\n  const updateSettings = (\n    styleDrawerComponentName: string,\n    styleDrawerStyleId: string\n  ) => {\n    store.state.localSettings.styleDrawerComponentName = styleDrawerComponentName;\n    store.state.localSettings.styleDrawerStyleId = styleDrawerStyleId;\n    update();\n  };\n\n  let component: any = null;\n  if (selectedComponent) {\n    component = customStyles[selectedComponent];\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.localSettings.styleDrawerOpen}\n        onClose={() => {\n          closeStyleDrawer();\n        }}\n        anchor=\"right\"\n        BackdropProps={{ invisible: true }}\n      >\n        <div style={{ padding: \"1em\" }}>\n          <Typography variant=\"h4\">Style Components</Typography>\n          <Dropdown\n            value={selectedComponent}\n            items={Object.keys(supportedComponents)}\n            label=\"Component\"\n            onChange={(event: any) => {\n              customStyles[event.target.value] =\n                customStyles[event.target.value] || {};\n\n              updateSettings(event.target.value, \"\");\n              update();\n            }}\n          />\n          {component && (\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box flexGrow={1}>\n                <Dropdown\n                  value={selectedStyle}\n                  items={Object.keys(component).map((id) => ({\n                    value: id,\n                    name: component[id]._name,\n                  }))}\n                  label=\"Styles\"\n                  onChange={(event: any) => {\n                    updateSettings(selectedComponent, \"\");\n                  }}\n                />\n              </Box>\n              <Box>\n                <Button\n                  onClick={(event) => {\n                    const id = uuid();\n\n                    component[id] = {\n                      _name: `New Style ${Object.keys(component).length + 1}`,\n                    };\n\n                    updateSettings(selectedComponent, id);\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Style\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {component && selectedStyle && (\n            <>\n              <Settings\n                config={[\n                  {\n                    property: \"_name\",\n                    type: StringSetting,\n                  },\n                  ...supportedComponents[selectedComponent].styleProperties,\n                ]}\n                properties={component[selectedStyle]}\n                setProp={(callback: (props: any) => void) => {\n                  // Important to assign it a new Id\n                  const newProps = Object.assign({}, component[selectedStyle], {\n                    customId: Math.random(),\n                  });\n                  callback(newProps);\n                  component[selectedStyle] = newProps;\n\n                  store.update();\n                }}\n              />\n              <Button\n                onClick={(event) => {\n                  const styleIds = Object.keys(component);\n                  const index = styleIds.indexOf(selectedStyle);\n\n                  let nextStyle = \"\";\n\n                  delete component[selectedStyle];\n\n                  if (index > 0) {\n                    nextStyle = styleIds[index - 1];\n                  } else if (styleIds.length) {\n                    nextStyle = styleIds[1];\n                  }\n\n                  updateSettings(selectedComponent, nextStyle);\n                }}\n                variant=\"contained\"\n              >\n                Delete Style\n              </Button>\n            </>\n          )}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import { useState } from \"react\";\n\nexport function useUpdate() {\n  const [updateValue, update] = useState(false);\n\n  return () => update(!updateValue);\n}\n","import React, { Component } from \"react\";\nimport \"./lib/log\";\nimport { Edit, Play, Code, Documentation, Styling } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { theme } from \"./config/theme\";\nimport { executeCode, setUpdateUIFunction } from \"./data/game\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\nimport { StyleDrawer } from \"./components/StyleDrawer\";\nimport { loadLocalSettings } from \"./lib/localSettings\";\n\nloadLocalSettings();\n\nexport default class App extends Component {\n  componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n\n    setUpdateUIFunction(store.update);\n    executeCode();\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Context.Provider\n          value={{\n            state: store.state,\n            update: this.update,\n            editorQuery: store.editorQuery,\n          }}\n        >\n          <BrowserRouter basename=\"/idling-engine\">\n            <div>\n              <OptionsDrawer />\n              <StyleDrawer />\n              <Header />\n              <Switch>\n                <Route\n                  path=\"/edit\"\n                  render={() => {\n                    return <Edit />;\n                  }}\n                />\n                <Route\n                  path=\"/code\"\n                  render={() => {\n                    return <Code />;\n                  }}\n                />\n                <Route\n                  path=\"/styling\"\n                  render={() => {\n                    return <Styling />;\n                  }}\n                />\n                <Route\n                  path=\"/play\"\n                  render={() => {\n                    return <Play />;\n                  }}\n                />\n                <Route\n                  path=\"/documentation\"\n                  render={() => {\n                    return <Documentation />;\n                  }}\n                />\n                <Route path=\"/\">\n                  <Redirect to=\"/edit\" />\n                </Route>\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </Context.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
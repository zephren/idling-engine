{"version":3,"sources":["data/game.ts","lib/log.ts","lib/context.ts","data/initial/code.ts","lib/localSettings.ts","views/Code.tsx","data/documentation.ts","views/Documentation/Breadcrumbs.tsx","views/Documentation/components-md.ts","views/Documentation/index.tsx","views/Documentation/index-md.ts","components/Settings/CustomRepeatSetting.ts","components/Controls/Dropdown.tsx","components/Settings/DropdownSetting.tsx","components/Settings/StringSetting.tsx","data/customStyles.ts","actions/styleDrawer.ts","components/Settings/StyleSetting.tsx","components/Settings/index.tsx","config/useSetupComponent.ts","data/components.ts","components/Toolbox/getToolboxComponents.tsx","components/Toolbox/index.tsx","components/SettingsPanel.tsx","components/Settings/SwitchSetting.tsx","components/CustomComponents/AppBar/AppBarDocumentation.ts","components/CustomComponents/AppBar/ToolBarTabs.tsx","components/CustomComponents/AppBar/index.tsx","config/useCustomStyle.ts","components/CustomComponents/Button/ButtonDocumentation.ts","components/CustomComponents/Button/index.tsx","components/CustomComponents/Button/ButtonSettings.tsx","components/CustomComponents/Text/TextSettings.tsx","components/CustomComponents/Text/TextDocumentation.ts","components/CustomComponents/Text/index.tsx","components/CustomComponents/Card/index.tsx","lib/checkVisibility.ts","components/CustomComponents/Container/ContainerDocumentation.ts","components/CustomComponents/Container/index.tsx","components/CustomComponents/Container/ContainerSettings.tsx","components/CustomComponents/Grid/GridSettings.tsx","components/CustomComponents/Grid/GridContainerDocumentation.ts","components/CustomComponents/Grid/GridItemDocumentation.ts","components/CustomComponents/Grid/index.tsx","components/CustomComponents/PathContainer/PathContainerDocumentation.ts","components/CustomComponents/PathContainer/index.tsx","components/CustomComponents/Table/TableDocumentation.ts","components/CustomComponents/Table/index.tsx","components/CustomComponents/VariableText/VariableTextSettings.tsx","components/CustomComponents/VariableText/VariableTextDocumentation.ts","components/CustomComponents/VariableText/index.tsx","data/data.ts","lib/saveGameData.ts","views/Edit/AutoSave.tsx","styles/shared.ts","views/Edit/index.tsx","views/Play.tsx","components/Header.tsx","config/theme.ts","components/OptionsDrawer/ImportExportDialog.tsx","components/OptionsDrawer/ConfirmResetDialog.tsx","config/useUpdate.ts","components/OptionsDrawer/CustomComponentsDialog.tsx","components/OptionsDrawer/index.tsx","components/StyleDrawer.tsx","lib/loadGameData.ts","App.tsx","index.tsx"],"names":["setUpdateUIFunction","fn","game","update","settings","tickInterval","data","actions","conditionals","dataSources","visibilitySources","configure","console","log","isInitialized","isGameDataInitialized","_initialize","loadedGameData","_initializeGameData","this","tick","currentTimeout","setTimeout","err","error","executeCode","files","localStorage","gameCode","JSON","parse","finalCode","file","code","lines","split","numberWidth","Math","floor","length","map","line","index","toString","padEnd","join","clearTimeout","eval","savedGameData","initialize","message","setInterval","stringify","window","LogLevels","DEBUG","INFO","WARN","ERROR","c","co","logLevels","logLevel","debug","args","info","warn","store","state","localSettings","highlightComponents","previousHighlightComponents","styleDrawerOpen","styleDrawerComponentName","styleDrawerStyleId","lastCodeFile","optionsDrawerOpen","editorQuery","Context","React","createContext","initialCode","saveLocalSettings","useStyles","makeStyles","theme","fileName","fontSize","typography","Code","history","useHistory","classes","useState","updateValue","deletingFiles","setDeletingFiles","selectedFiles","setSelectedFiles","save","addFile","name","push","id","uuid","useContext","useEffect","interval","clearInterval","Grid","container","style","position","top","bottom","width","item","sm","List","dense","overflowY","selected","location","pathname","includes","ListItem","cursor","onClick","newSelectedFiles","handleFileClick","ListItemIcon","ListItemText","primary","TextField","value","onChange","event","target","size","inputProps","className","Divider","button","filter","checked","background","path","render","mode","editorProps","$blockScrolling","height","tabSize","commands","beautify","focus","to","documentation","components","component","componentName","Breadcrumbs","parts","cumulativePath","aria-label","part","pathPart","getComponents","Object","keys","renderers","link","props","href","children","paper","padding","Documentation","Paper","basename","match","params","plugins","md","CustomRepeatSetting","items","Dropdown","label","itemElements","MenuItem","labelElement","InputLabel","shrink","FormControl","fullWidth","Select","DropdownSetting","property","itemsFn","setProp","IconButton","StringSetting","customStyles","openStyleDrawer","options","styleId","StyleSetting","Box","display","alignItems","flexGrow","_name","variant","Settings","config","properties","settingsRows","Error","configItem","remainingProps","TableRow","TableCell","scope","verticalAlign","type","TableContainer","TableBody","useSharedStyles","componentEditing","boxShadow","minHeight","minWidth","componentSelected","componentClass","editing","sharedClasses","additonalClasses","useSetupComponent","additionalClasses","useNode","events","connectors","connect","drag","useEditor","enabled","componentClassName","refFn","ref","registerCustomComponent","Component","addComponent","getToolboxComponents","reduce","acc","toolboxItem","Toolbox","selectedComponent","setSelectedComponent","px","py","direction","justify","spacing","pb","Typography","Switch","selectNode","propertyConfigDefinitions","margin","BaseProperties","baseStyle","definition","mt","xs","Chip","color","callback","newProps","assign","SettingsPanel","query","currentNodeId","nodes","related","isDeletable","node","createElement","delete","SwitchSetting","AppBarDocumentation","ToolBarTabs","tabs","defaultTab","tab","default","parseInt","getCurrentTab","currentTabIndex","Tabs","visibilitySource","root","spacer","fullHeight","mixins","toolbar","AppBar","Toolbar","craft","triggerUpdate","setDefault","create","useCustomStyle","base","styleGroup","customStyleName","setStyle","customStyle","customId","ButtonDocumentation","Button","text","onClickAction","actionContext","action","styleProperties","TextDocumentation","Text","rules","canDrag","CardTop","CardContent","CardBottom","CardActions","canMoveIn","incomingNode","checkVisibility","extraStyle","opacity","ContainerDocumentation","Container","is","canvas","sizes","GridContainerDocumentation","GridItemDocumentation","GridContainer","GridItem","PathContainerDocumentation","main","PathContainer","visible","float","TableDocumentation","TableRows","columnNames","rows","currentContext","column","itemIndex","cells","itemProperty","Table","itemSource","headerRow","itemSourceFunction","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","VariableTextDocumentation","VariableText","dataProperty","subProperty","undefined","gameData","customComponents","saveGameData","baseStyles","layout","serialize","random","AutoSave","gameArea","Content","Edit","resolver","Play","Header","navigate","createMuiTheme","palette","blueGrey","secondary","ImportExportDialog","onClose","currentAllGameData","btoa","allGameData","setAllGameData","Dialog","open","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","reload","ConfirmResetDialog","useUpdate","CustomComponent","icon","status","ok","indexOf","splice","url","CustomComponentsDialog","newComponentUrl","setNewComponentUrl","checkComponent","Promise","accept","a","axios","get","result","response","requests","all","OptionsDrawer","showImportExprt","setShowImportExport","showConfirmReset","setShowConfirmReset","showCustomComponents","setShowCustomComponents","Drawer","initializeGameData","packageJson","version","supportedComponents","StyleDrawer","selectedStyle","updateSettings","anchor","BackdropProps","invisible","styleIds","nextStyle","loadGameData","storedGameData","loadComponentProperties","App","customComponentsLoaded","setState","loadingPromises","errors","customComponent","p","resolve","s","document","src","onload","onerror","head","append","ThemeProvider","CssBaseline","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2805076f.chunk.js","sourcesContent":["interface AnyObject {\n  [key: string]: any;\n}\n\nexport function setUpdateUIFunction(fn: any) {\n  game.update = fn;\n}\n\nexport const game = {\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Conditionals\n  conditionals: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Visibility sources\n  visibilitySources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialize\n  isInitialized: false,\n  isGameDataInitialized: false,\n\n  _initialize: (loadedGameData: any) => {\n    console.log(\"game.initialize not defined\");\n  },\n\n  _initializeGameData: () => {\n    console.log(\"game.initializeGameData not defined\");\n  },\n\n  get initialize() {\n    return this._initialize;\n  },\n\n  set initialize(fn) {\n    this._initialize = (loadedGameData: any) => {\n      console.log(\"Initializing Game\");\n      this.isInitialized = true;\n      fn(loadedGameData);\n    };\n  },\n\n  get initializeGameData() {\n    return this._initializeGameData;\n  },\n\n  set initializeGameData(fn) {\n    this._initializeGameData = () => {\n      console.log(\"Initializing Game Data\");\n      this.isInitialized = true;\n      fn();\n    };\n  },\n\n  // Tick\n  tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  // Update\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n};\n\nlet currentTimeout: any = null;\n\n// Tick\nfunction tick() {\n  currentTimeout = setTimeout(() => {\n    try {\n      game.tick();\n    } catch (err) {\n      console.error(err);\n    }\n    tick();\n  }, game.settings.tickInterval);\n}\n\nexport function executeCode() {\n  const files: any = localStorage.gameCode\n    ? JSON.parse(localStorage.gameCode)\n    : [];\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\\n\";\n  }\n\n  const lines = finalCode.split(\"\\n\");\n  const numberWidth = Math.floor(Math.log(lines.length));\n\n  console.log(\n    lines\n      .map((line, index) => {\n        const numberedLine = `${(index + 1)\n          .toString()\n          .padEnd(numberWidth)} ${line}`;\n        return numberedLine;\n      })\n      .join(\"\\n\")\n  );\n\n  try {\n    // Stop anything currently executing\n    if (currentTimeout) {\n      clearTimeout(currentTimeout);\n    }\n\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    let loadedGameData = {};\n    if (localStorage.savedGameData) {\n      loadedGameData = JSON.parse(localStorage.savedGameData);\n    }\n    console.log(\"loadedGameData\", loadedGameData);\n    if (!game.isInitialized) {\n      game.initialize(loadedGameData);\n    }\n\n    game.configure(game.settings);\n\n    tick();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\nsetInterval(() => {\n  const savedGameData = JSON.stringify(game.data);\n  localStorage.savedGameData = savedGameData;\n}, 5000);\n\n(window as any).game = game;\n","// Mutate console for better logging\n\nconst LogLevels = {\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n};\n\nconst c = console as any;\nconst co = { ...console };\n\nc.logLevels = LogLevels;\nc.logLevel = LogLevels.DEBUG;\n\nc.debug = (...args: any) => {\n  if (c.logLevel <= LogLevels.DEBUG) {\n    co.debug(\"DEBUG\", ...args);\n  }\n};\n\nc.info = (...args: any) => {\n  if (c.logLevel <= LogLevels.INFO) {\n    co.info(\"INFO\", ...args);\n  }\n};\n\nc.warn = (...args: any) => {\n  if (c.logLevel <= LogLevels.WARN) {\n    co.warn(\"WARN\", ...args);\n  }\n};\n\nc.error = (...args: any) => {\n  if (c.logLevel <= LogLevels.ERROR) {\n    co.error(\"ERROR\", ...args);\n  }\n};\n\nexport default console;\n","import React from \"react\";\n\nexport const store = {\n  state: {\n    localSettings: {\n      highlightComponents: true,\n      previousHighlightComponents: true,\n      styleDrawerOpen: false,\n      styleDrawerComponentName: \"\",\n      styleDrawerStyleId: \"\",\n      lastCodeFile: \"\",\n    },\n    optionsDrawerOpen: false,\n  },\n  editorQuery: null as any,\n  update: () => {\n    console.log(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n","const main = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = (loadedGameData) => {\n  // Code executed when the application starts up\n  game.data = new GameData(loadedGameData);\n}\n\ngame.initializeGameData = () => {\n  // Code executed when the resetting the game data\n  game.data = new GameData({});\n  game.update();\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n\ngame.actions.buttonClick = () => {\n  game.data.counter++;\n  game.update();\n}\n`;\n\nconst gameData = `\n\nclass GameData {\n  constructor(data) {\n    this._updateData(data);\n\n    // Set the data\n    for (const property in data) {\n      this[property] = data[property];\n    }\n  }\n\n  _updateData() {\n    // Use this to update game data as changes are made\n    if (!this.counter) {\n      this.counter = 0;\n    }\n  }\n\n  // Can use getters as well for use with variableText\n}\n`;\n\nexport const initialCode = {\n  main,\n  gameData,\n};\n","import { store } from \"./context\";\n\nexport function loadLocalSettings() {\n  if (localStorage.localSettings) {\n    store.state.localSettings = JSON.parse(localStorage.localSettings);\n  }\n}\n\nexport function saveLocalSettings() {\n  localStorage.localSettings = JSON.stringify(store.state.localSettings);\n}\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport beautify from \"ace-builds/src-noconflict/ext-beautify\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Switch as MUISwitch,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context, store } from \"../lib/context\";\nimport { executeCode, game } from \"../data/game\";\nimport { v4 as uuid } from \"uuid\";\nimport { initialCode } from \"../data/initial/code\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nlet files: any = localStorage.gameCode ? JSON.parse(localStorage.gameCode) : [];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  fileName: {\n    fontSize: theme.typography.fontSize,\n  },\n}));\n\nexport function Code() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [updateValue, update] = useState(false);\n  const [deletingFiles, setDeletingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles]: [any, any] = useState({});\n  useContext(Context);\n\n  function save() {\n    localStorage.gameCode = JSON.stringify(files);\n  }\n\n  function handleFileClick(id: string, index: number) {\n    if (deletingFiles) {\n      const newSelectedFiles = { ...selectedFiles };\n      newSelectedFiles[index] = !newSelectedFiles[index];\n      setSelectedFiles(newSelectedFiles);\n      // update(!updateValue);\n    } else {\n      store.state.localSettings.lastCodeFile = id;\n      saveLocalSettings();\n      history.push(`/code/${id}`);\n    }\n  }\n\n  function deleteFiles() {\n    files = files.filter((item: any, index: number) => {\n      return !selectedFiles[index];\n    });\n\n    setSelectedFiles({});\n  }\n\n  function addFile(name: string, code: string) {\n    files.push({\n      id: uuid(),\n      name,\n      code,\n    });\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode();\n      game.initialize(game.data);\n    };\n  }, []);\n\n  if (files.length === 0) {\n    addFile(\"main\", \"//main\\n\" + initialCode.main);\n    addFile(\"gameData\", \"//gameData\\n\" + initialCode.gameData);\n  }\n\n  return (\n    <Grid\n      container\n      style={{\n        position: \"absolute\",\n        top: \"37px\",\n        bottom: \"0px\",\n        width: \"100%\",\n      }}\n    >\n      <Grid item sm={2} style={{ position: \"relative\" }}>\n        <List\n          dense={true}\n          style={{\n            overflowY: \"auto\",\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"0px\",\n            bottom: \"0px\",\n          }}\n        >\n          {files.map((file: any, index: number) => {\n            const selected = history.location.pathname.includes(file.id);\n\n            return (\n              <ListItem\n                key={file.id}\n                style={{ cursor: \"pointer\" }}\n                selected={selected}\n                onClick={() => {\n                  handleFileClick(file.id, index);\n                }}\n              >\n                {deletingFiles && (\n                  <ListItemIcon>\n                    {selectedFiles[index] ? (\n                      <CheckBoxIcon />\n                    ) : (\n                      <CheckBoxOutlineBlankIcon />\n                    )}\n                  </ListItemIcon>\n                )}\n                {selected ? (\n                  <ListItemText\n                    primary={\n                      <TextField\n                        value={file.name}\n                        onChange={(event) => {\n                          file.name = event.target.value;\n                          update(!updateValue);\n                        }}\n                        size=\"small\"\n                        inputProps={{ className: classes.fileName }}\n                      />\n                    }\n                  />\n                ) : (\n                  <ListItemText primary={file.name} />\n                )}\n              </ListItem>\n            );\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              const name = `New File ${files.length}`;\n\n              addFile(name, `//${name}`);\n\n              update(!updateValue);\n            }}\n          >\n            <ListItemText primary=\"+ New File\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemText primary=\"Delete Files\" />\n            <MUISwitch\n              onChange={(event) => {\n                if (deletingFiles) {\n                  deleteFiles();\n                }\n\n                setDeletingFiles(event.target.checked);\n              }}\n              checked={deletingFiles}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary=\"Ctrl + Shift + B - Beautify\" />\n          </ListItem>\n        </List>\n      </Grid>\n      <Grid item sm={10} style={{ background: \"red\", position: \"relative\" }}>\n        <Switch>\n          {files.map((file: any) => {\n            return (\n              <Route\n                key={file.id}\n                path={`/code/${file.id}`}\n                render={() => {\n                  return (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        top: \"0px\",\n                        bottom: \"0px\",\n                      }}\n                    >\n                      <AceEditor\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        onChange={(code: string) => {\n                          file.code = code;\n                        }}\n                        name=\"Code Editor\"\n                        editorProps={{ $blockScrolling: true }}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          fontSize: \"1.1em\",\n                        }}\n                        value={file.code}\n                        tabSize={2}\n                        commands={beautify.commands}\n                        focus\n                      />\n                    </div>\n                  );\n                }}\n              />\n            );\n          })}\n          <Route path=\"/code\">\n            <Redirect to={`/code/${files[0].id}`} />\n          </Route>\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n}\n","class Documentation {\n  components: any = {};\n\n  addComponent(component: any) {\n    this.components[component.componentName] = {\n      name: component.componentName,\n      component,\n    };\n  }\n}\n\nexport const documentation = new Documentation();\n","import { Breadcrumbs as MUIBreadcrumbs, Typography } from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n\nexport function Breadcrumbs({ parts }: any) {\n  let cumulativePath: any[] = [];\n\n  return (\n    <MUIBreadcrumbs aria-label=\"breadcrumb\">\n      {parts.map((part: any, index: number) => {\n        const [name, pathPart] = part;\n\n        if (pathPart) {\n          cumulativePath.push(pathPart);\n        }\n\n        // if (index < parts.length) {\n        return (\n          <Link\n            key={cumulativePath.join(\"\")}\n            to={`/${cumulativePath.join(\"/\")}`}\n          >\n            {name}\n          </Link>\n        );\n        // }\n\n        // return <Typography color=\"textPrimary\">{name}</Typography>;\n      })}\n    </MUIBreadcrumbs>\n  );\n}\n","import { documentation } from \"../../data/documentation\";\n\nexport function getComponents() {\n  const componentsDocs = Object.keys(documentation.components).map(\n    (componentName) => {\n      const component = documentation.components[componentName];\n\n      return `[${component.componentName}](/components/${component.componentName})`;\n    }\n  );\n\n  return componentsDocs;\n}\n\nexport default () => {\n  return `\n# Components\n${getComponents().join(\"\\n\\n\")}\n`;\n};\n","import { Container, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { documentation } from \"../../data/documentation\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport index from \"./index-md\";\nimport components from \"./components-md\";\n\nconst renderers = {\n  link: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>;\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"1em\",\n  },\n}));\n\nexport function Documentation() {\n  const classes = useStyles();\n\n  console.log(\"Documentation render\");\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <BrowserRouter basename=\"/idling-engine/documentation\">\n          <div className=\"markdown-container\">\n            {/*Components*/}\n            <Switch>\n              <Route\n                path=\"/components/:componentName\"\n                render={(history) => {\n                  const { component } = documentation.components[\n                    history.match.params.componentName\n                  ];\n\n                  return (\n                    <>\n                      <Breadcrumbs\n                        parts={[\n                          [\"Documentation\", \"\"],\n                          [\"Components\", \"components\"],\n                          [component.componentName, component.componentName],\n                        ]}\n                      />\n                      <ReactMarkdown\n                        plugins={[]}\n                        children={component.documentation.md}\n                        renderers={renderers}\n                      />\n                    </>\n                  );\n                }}\n              />\n              <Route\n                path=\"/components\"\n                render={() => (\n                  <>\n                    <Breadcrumbs\n                      parts={[\n                        [\"Documentation\", \"\"],\n                        [\"Components\", \"components\"],\n                      ]}\n                    />\n                    <ReactMarkdown\n                      plugins={[]}\n                      children={components()}\n                      renderers={renderers}\n                    />\n                  </>\n                )}\n              />\n              {/*Index*/}\n              <Route\n                path=\"/\"\n                render={() => (\n                  <>\n                    <Breadcrumbs parts={[[\"Documentation\", \"\"]]} />\n                    <ReactMarkdown\n                      plugins={[]}\n                      children={index()}\n                      renderers={renderers}\n                    />\n                  </>\n                )}\n              />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Paper>\n    </Container>\n  );\n}\n","import { getComponents } from \"./components-md\";\n\nexport default () => {\n  return `\n# Idling Engine\n\n## Components\n${getComponents().join(\"\\n\\n\")}\n  `;\n};\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport const Dropdown = ({ value, items, label, onChange }: any) => {\n  const itemElements = [];\n\n  for (const item of items) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    itemElements.push(\n      <MenuItem key={name} value={value}>\n        {name}\n      </MenuItem>\n    );\n  }\n\n  let labelElement = null;\n  if (label) {\n    labelElement = <InputLabel shrink>{label}</InputLabel>;\n  }\n\n  return (\n    <FormControl fullWidth>\n      {labelElement}\n      <Select value={value || \"\"} onChange={onChange}>\n        {itemElements}\n      </Select>\n    </FormControl>\n  );\n};\n","import { IconButton } from \"@material-ui/core\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\n\ninterface Props {\n  property: any;\n  value: any;\n  itemsFn: () => { name: string; value: any }[];\n  setProp: any;\n}\n\nexport const DropdownSetting = ({\n  property,\n  value,\n  itemsFn,\n  setProp,\n}: Props) => {\n  return (\n    <>\n      <Dropdown\n        value={value || \"\"}\n        items={itemsFn()}\n        onChange={(event: any) => {\n          setProp((props: any) => (props[property] = event.target.value));\n        }}\n      />\n      <IconButton\n        onClick={() => {\n          setProp((props: any) => (props[property] = null));\n        }}\n      >\n        <SettingsBackupRestoreIcon />\n      </IconButton>\n    </>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => {\n          props[property] = event.target.value;\n        });\n      }}\n    />\n  );\n};\n","export const customStyles: {\n  [key: string]: any;\n} = {};\n","import { customStyles } from \"../data/customStyles\";\nimport { store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function openStyleDrawer(options: any = {}) {\n  store.state.localSettings.styleDrawerOpen = true;\n  store.state.localSettings.previousHighlightComponents =\n    store.state.localSettings.highlightComponents;\n  store.state.localSettings.highlightComponents = false;\n\n  if (options.componentName) {\n    store.state.localSettings.styleDrawerComponentName = options.componentName;\n    store.state.localSettings.styleDrawerStyleId = options.styleId || \"\";\n\n    customStyles[options.componentName] =\n      customStyles[options.componentName] || {};\n  }\n\n  saveLocalSettings();\n\n  store.update();\n}\n\nexport function closeStyleDrawer() {\n  store.state.localSettings.styleDrawerOpen = false;\n  store.state.localSettings.highlightComponents =\n    store.state.localSettings.previousHighlightComponents;\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { Box, Button, IconButton } from \"@material-ui/core\";\nimport { customStyles } from \"../../data/customStyles\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { openStyleDrawer } from \"../../actions/styleDrawer\";\n\ninterface Props {\n  property: any;\n  value: any;\n  componentName: string;\n  setProp: any;\n}\n\nexport const StyleSetting = ({\n  property,\n  value,\n  componentName,\n  setProp,\n}: Props) => {\n  if (\n    !customStyles[componentName] ||\n    Object.keys(customStyles[componentName]).length === 0\n  ) {\n    return (\n      <Button\n        fullWidth\n        variant=\"contained\"\n        onClick={() => {\n          openStyleDrawer({\n            componentName,\n          });\n        }}\n      >\n        Define a Style\n      </Button>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={Object.keys(customStyles[componentName]).map((id) => ({\n            value: id,\n            name: customStyles[componentName][id]._name,\n          }))}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <SettingsBackupRestoreIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            openStyleDrawer({\n              componentName,\n              styleId: value,\n            });\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport { CustomRepeatSetting } from \"./CustomRepeatSetting\";\nexport { DropdownSetting } from \"./DropdownSetting\";\nexport { SliderSetting } from \"./SliderSetting\";\nexport { StringSetting } from \"./StringSetting\";\nexport { StyleSetting } from \"./StyleSetting\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  if (!properties) {\n    console.error(config, new Error());\n    return null;\n  }\n\n  for (const configItem of config) {\n    const { property, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={property}>\n        <TableCell component=\"td\" scope=\"row\" style={{ verticalAlign: \"top\" }}>\n          {property}\n        </TableCell>\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Context, store } from \"../lib/context\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px rgba(255, 50, 50, 1)\",\n    minHeight: \"5px\",\n    minWidth: \"5px\",\n    padding: \"10px!important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nfunction componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing && store.state.localSettings.highlightComponents\n      ? sharedClasses.componentEditing\n      : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n\ntype Properties = {\n  additionalClasses?: string[];\n};\n\nexport function useSetupComponent(properties: Properties = {}) {\n  const { additionalClasses = [] } = properties;\n\n  const store = useContext(Context);\n\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state: any) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state: any) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n  const componentClassName = componentClass(\n    enabled,\n    selected,\n    sharedClasses,\n    additionalClasses\n  );\n\n  const refFn = (ref: any) => connect(drag(ref));\n\n  return {\n    refFn,\n    // connect,\n    // drag,\n    selected,\n    enabled,\n    // sharedClasses,\n    componentClassName,\n    store,\n  };\n}\n","import { useSetupComponent } from \"../config/useSetupComponent\";\nimport { documentation } from \"./documentation\";\n\nexport const components: any = {};\n\nexport function registerCustomComponent(Component: any) {\n  console.log(`Registering custom component ${Component.componentName}`);\n  components[Component.componentName] = Component;\n\n  documentation.addComponent(Component);\n}\n\n(window as any).registerCustomComponent = registerCustomComponent;\n\n(window as any).useSetupComponent = useSetupComponent;\n","import { EventConnectors } from \"@craftjs/core\";\nimport { components } from \"../../data/components\";\n\nexport const getToolboxComponents = (connectors: EventConnectors) => {\n  return [\n    ...Object.keys(components).reduce((acc: any[], componentName: any) => {\n      const component = components[componentName];\n\n      if (component.toolboxItem) {\n        acc.push(component.toolboxItem(connectors));\n      }\n\n      return acc;\n    }, []),\n  ];\n};\n","import { useEditor } from \"@craftjs/core\";\nimport { store } from \"../../lib/context\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\n\nimport { useState } from \"react\";\nimport { Settings, StringSetting } from \"../Settings\";\nimport { saveLocalSettings } from \"../../lib/localSettings\";\nimport { getToolboxComponents } from \"./getToolboxComponents\";\n\nexport const Toolbox = () => {\n  const { connectors, actions } = useEditor();\n\n  const [selectedComponent, setSelectedComponent] = useState<{\n    component: any;\n  } | null>(null);\n\n  return (\n    <>\n      <Box px={2} py={2}>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={1}\n        >\n          <Box pb={2}>\n            <Typography>Drag to add</Typography>\n            Highlight components\n            <Switch\n              checked={store.state.localSettings.highlightComponents}\n              onChange={() => {\n                store.state.localSettings.highlightComponents = !store.state\n                  .localSettings.highlightComponents;\n\n                saveLocalSettings();\n\n                store.update();\n              }}\n            />\n          </Box>\n          {getToolboxComponents(connectors).map((component) => {\n            return (\n              <Grid key={component.name} container direction=\"column\" item>\n                <MaterialButton\n                  ref={component.ref}\n                  variant=\"contained\"\n                  onClick={() => {\n                    actions.selectNode();\n                    setSelectedComponent({ component: component.component });\n                  }}\n                >\n                  {component.name}\n                </MaterialButton>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n      {selectedComponent ? (\n        <BaseProperties component={selectedComponent.component} />\n      ) : null}\n    </>\n  );\n};\n\nconst propertyConfigDefinitions: {\n  [key: string]: any;\n} = {\n  margin: {\n    property: \"margin\",\n    type: StringSetting,\n  },\n  padding: {\n    property: \"padding\",\n    type: StringSetting,\n  },\n  height: {\n    property: \"height\",\n    type: StringSetting,\n  },\n};\n\nconst BaseProperties = ({ component }: any) => {\n  const { baseStyle } = component;\n\n  if (!baseStyle) {\n    return null;\n  }\n\n  const config = [];\n  for (const property in baseStyle) {\n    const definition = propertyConfigDefinitions[property];\n\n    config.push(definition);\n  }\n\n  return (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                  Base Component Config\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Chip\n                  size=\"small\"\n                  color=\"primary\"\n                  label={component.componentName}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n\n        <Settings\n          config={config}\n          properties={baseStyle}\n          setProp={(callback: (props: any) => void) => {\n            const newProps = Object.assign({}, baseStyle);\n            callback(newProps);\n            component.baseStyle = newProps;\n            store.update();\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","import { Switch } from \"@material-ui/core\";\n\nexport const SwitchSetting = ({ property, value, onChange }: any) => {\n  return <Switch checked={value || false} onChange={onChange} />;\n};\n","const md = `\n# AppBar\n\n## Properties\n\n\n`;\n\nexport const AppBarDocumentation = {\n  md,\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { game } from \"../../../data/game\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n  visibilitySource: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        if (tab.visibilitySource) {\n          if (!game.visibilitySources[tab.visibilitySource]()) {\n            return null;\n          }\n        }\n\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { documentation } from \"../../../data/documentation\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting, Settings, StringSetting } from \"../../Settings\";\nimport { SwitchSetting } from \"../../Settings/SwitchSetting\";\nimport { AppBarDocumentation } from \"./AppBarDocumentation\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const classes = useStyles();\n  const { refFn, componentClassName, store } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n\n  return (\n    <div\n      ref={refFn}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\" className={componentClassName}>\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    props: node.data.props,\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const setDefault = (defaultTab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    defaultTab.default = true;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const visibilitySources = Object.keys(game.visibilitySources);\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <Settings\n            config={[\n              {\n                type: StringSetting,\n                property: \"name\",\n              },\n              {\n                type: StringSetting,\n                property: \"path\",\n              },\n              {\n                type: StringSetting,\n                property: \"to\",\n              },\n              {\n                type: DropdownSetting,\n                property: \"visibilitySource\",\n                itemsFn: () => visibilitySources,\n              },\n              {\n                type: SwitchSetting,\n                property: \"default\",\n                onChange: () => setDefault(tab),\n              },\n            ]}\n            properties={tab}\n            setProp={(callback: any) => {\n              // Custom set prop function\n              // Call the callback with the tab as the \"props\" we want to update\n              callback(tab);\n\n              // Then call the actual setProp to trigger the update\n              setProp((props: any) => {\n                props.triggerUpdate = !triggerUpdate;\n              });\n            }}\n          />\n        );\n\n        // return (\n        //   <div key={index}>\n        //     <TextField\n        //       label=\"Name\"\n        //       value={tab.name}\n        //       onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"Path\"\n        //       value={tab.path}\n        //       onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"To\"\n        //       value={tab.to}\n        //       onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n        //     />\n        //     <Switch\n        //       checked={tab.default || false}\n        //       onChange={() => setDefault(tab)}\n        //     />\n        //   </div>\n        // );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.componentName = \"AppBar\";\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n\nAppBar.documentation = AppBarDocumentation;\n\nAppBar.toolboxItem = (connectors: any) => {\n  return {\n    name: \"AppBar\",\n    component: AppBar,\n    ref: (ref: any) => connectors.create(ref, <AppBar />),\n  };\n};\n\nregisterCustomComponent(AppBar);\n","import { useState } from \"react\";\n\nexport function useCustomStyle(\n  base: any,\n  styleGroup: any,\n  customStyleName: string\n) {\n  const [style, setStyle] = useState(null as any);\n\n  let customStyle = null;\n  if (customStyleName) {\n    customStyle = styleGroup[customStyleName];\n  }\n\n  // console.log(\n  //   \"style && customStyle.customId !== style.customId\",\n  //   style && customStyle.customId !== style.customId\n  // );\n  // console.log(customStyle);\n\n  // Already have a style and the customId is different\n  // Don't have a style and we have a custom style\n  if (\n    (style && customStyle && customStyle.customId !== style.customId) ||\n    (!style && customStyle)\n  ) {\n    setStyle({\n      ...base,\n      ...customStyle,\n    });\n  }\n\n  // If the customStyle is reset\n  if (style && !customStyle) {\n    setStyle(null);\n  }\n\n  // Return the base style if nothing else\n  return style || base;\n}\n","const md = `\n# Button\n\n## Properties\n\n### onClickAction\nThis is an action made avaiable from \\`game.actions\\`. No parameters are passed to the action.\n`;\n\nexport const ButtonDocumentation = {\n  md,\n};\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { store } from \"../../../lib/context\";\nimport { game } from \"../../../data/game\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ButtonSettings } from \"./ButtonSettings\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { StringSetting } from \"../../Settings\";\nimport { ButtonDocumentation } from \"./ButtonDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Button.baseStyle,\n    customStyles.Button,\n    customStyleName\n  );\n\n  return (\n    <MaterialButton\n      style={style}\n      ref={refFn}\n      className={componentClassName}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nButton.componentName = \"Button\";\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Button\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n\nButton.baseStyle = {\n  margin: \"0em\",\n};\n\nButton.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nButton.documentation = ButtonDocumentation;\n\nButton.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Button\",\n    component: Button,\n    ref: (ref: any) => connectors.create(ref, <Button />),\n  };\n};\n\nregisterCustomComponent(Button);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const TextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n          componentName,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# Text\n\n## Properties\n\n### text\nThe text to show\n\n`;\n\nexport const TextDocumentation = {\n  md,\n};\n","import { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { TextSettings } from \"./TextSettings\";\nimport { StringSetting } from \"../../Settings\";\nimport { TextDocumentation } from \"./TextDocumentation\";\nimport { documentation } from \"../../../data/documentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const Text = ({ text, customStyleName }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Text.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {text}\n    </span>\n  );\n};\n\nText.componentName = \"Text\";\n\nText.craft = {\n  props: {\n    text: \"Text\",\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n\nText.baseStyle = {\n  margin: \"0em\",\n};\n\nText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nText.documentation = TextDocumentation;\n\nText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Text\",\n    component: Text,\n    ref: (ref: any) => connectors.create(ref, <Text text=\"Some text\" />),\n  };\n};\n\nregisterCustomComponent(Text);\n","import { Text } from \"../Text\";\nimport { Button } from \"../Button\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { Card as MUICard, CardActions, CardContent } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return (\n    <CardContent ref={connect} className=\"text-only\">\n      {children}\n    </CardContent>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return <CardActions ref={connect}>{children}</CardActions>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = () => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUICard ref={refFn} className={componentClassName}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </MUICard>\n  );\n};\n","import { game } from \"../data/game\";\n\nexport function checkVisibility(visibilitySource: string, enabled: boolean) {\n  if (!visibilitySource) {\n    return {};\n  }\n\n  const extraStyle: any = {};\n\n  if (\n    game.visibilitySources[visibilitySource] &&\n    !game.visibilitySources[visibilitySource]()\n  ) {\n    if (enabled) {\n      extraStyle.opacity = \"0.25\";\n    } else {\n      return null;\n    }\n  }\n\n  return extraStyle;\n}\n","const md = `\n# Container\n\n## Properties\n\n\n`;\n\nexport const ContainerDocumentation = {\n  md,\n};\n","import { Element } from \"@craftjs/core\";\nimport { Container as MUIContainer } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { documentation } from \"../../../data/documentation\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { Text } from \"../Text\";\nimport { ContainerDocumentation } from \"./ContainerDocumentation\";\nimport { ContainerSettings } from \"./ContainerSettings\";\n\nexport const Container = ({ children, visibilitySource }: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <MUIContainer\n      ref={refFn}\n      style={{ ...Container.baseStyle, ...extraStyle }}\n      className={componentClassName}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nContainer.componentName = \"Container\";\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n\nContainer.baseStyle = {\n  padding: \"0em\",\n};\n\nContainer.documentation = ContainerDocumentation;\n\nContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Container\",\n    component: Container,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={Container} canvas>\n          <Text text=\"Container\" />\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(Container);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { game } from \"../../../data/game\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nconst sizes = [\n  { name: \"3\", value: 3 },\n  { name: \"4\", value: 4 },\n  { name: \"6\", value: 6 },\n];\n\nexport const GridContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nexport const GridItemSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"size\",\n          itemsFn: () => sizes,\n        },\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# GridContainer\n\n## Properties\n\n\n\n`;\n\nexport const GridContainerDocumentation = {\n  md,\n};\n","const md = `\n# GridItem\n\n## Properties\n\n\n\n`;\n\nexport const GridItemDocumentation = {\n  md,\n};\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { GridContainerSettings, GridItemSettings } from \"./GridSettings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { StringSetting } from \"../../Settings\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { GridContainerDocumentation } from \"./GridContainerDocumentation\";\nimport { GridItemDocumentation } from \"./GridItemDocumentation\";\nimport { documentation } from \"../../../data/documentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { Element } from \"@craftjs/core\";\nimport { Text } from \"../Text\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const GridContainer = ({ children, visibilitySource }: any) => {\n  const classes = useStyles();\n  const { refFn, componentClassName, enabled } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      container\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n      spacing={2}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nGridContainer.componentName = \"GridContiainer\";\n\nGridContainer.craft = {\n  props: {},\n  related: {\n    settings: GridContainerSettings,\n  },\n};\n\nexport const GridItem = ({\n  children,\n  size,\n  visibilitySource,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const style = useCustomStyle(\n    GridItem.baseStyle,\n    customStyles.GridItem,\n    customStyleName\n  );\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      item\n      xs={size}\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n    >\n      <Paper style={style}>{children}</Paper>\n    </Grid>\n  );\n};\n\nGridItem.componentName = \"GridItem\";\n\nGridItem.craft = {\n  props: { size: 6 },\n  related: {\n    settings: GridItemSettings,\n  },\n};\n\nGridItem.baseStyle = {\n  padding: \"0em\",\n  height: \"100%\",\n};\n\nGridItem.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nGridContainer.documentation = GridContainerDocumentation;\nGridItem.documentation = GridItemDocumentation;\n\ndocumentation.addComponent(GridContainer);\ndocumentation.addComponent(GridItem);\n\nGridContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridContainer\",\n    component: GridContainer,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridContainer} canvas>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(GridContainer);\n\nGridItem.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridItem\",\n    component: GridItem,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridItem} canvas>\n          <Text text=\"Grid Item\" />\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(GridItem);\n","const md = `\n# PathContainer\n\n## Properties\n\n\n`;\n\nexport const PathContainerDocumentation = {\n  md,\n};\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { documentation } from \"../../../data/documentation\";\nimport { PathContainerDocumentation } from \"./PathContainerDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children, customStyleName }: any) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { refFn, enabled, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.main],\n  });\n\n  const visible = history.location.pathname.includes(path);\n\n  const style = useCustomStyle(\n    PathContainer.baseStyle,\n    customStyles.PathContainer,\n    customStyleName\n  );\n\n  return (\n    <MUIContainer ref={refFn} className={componentClassName} style={style}>\n      {enabled && (\n        <div>\n          <div style={{ float: \"right\", height: \"0em\" }}>\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nPathContainer.styleProperties = [\n  {\n    property: \"margin\",\n    type: StringSetting,\n  },\n];\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"path\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.componentName = \"PathContainer\";\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n\nPathContainer.baseStyle = {\n  margin: \"0em\",\n};\n\nPathContainer.documentation = PathContainerDocumentation;\n\nPathContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"PathContainer\",\n    component: PathContainer,\n    ref: (ref: any) =>\n      connectors.create(ref, <Element is={PathContainer} canvas />),\n  };\n};\n\nregisterCustomComponent(PathContainer);\n","const md = `\n# Table\n\n## Properties\n\n`;\n\nexport const TableDocumentation = {\n  md,\n};\n","import React from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { Settings } from \"../../Settings\";\nimport { CustomRepeatSetting } from \"../../Settings/CustomRepeatSetting\";\nimport { game } from \"../../../data/game\";\nimport { Button } from \"../Button\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { Dropdown } from \"../../Controls/Dropdown\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\nimport { documentation } from \"../../../data/documentation\";\nimport { TableDocumentation } from \"./TableDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n  const currentContext = {\n    item: {} as any,\n    index: \"0\",\n    column: {} as any,\n  };\n\n  try {\n    for (const itemIndex in items) {\n      const item = items[itemIndex];\n      const cells = [];\n\n      currentContext.item = item;\n\n      for (const index in columnNames) {\n        const column = columnNames[index];\n\n        currentContext.index = index;\n        currentContext.column = column;\n\n        const { name } = column;\n        const itemProperty = item[column.property];\n\n        switch (column.type) {\n          case \"string\":\n            if (typeof itemProperty !== \"string\") {\n              throw new Error(\"Trying to use a non-string value as a string\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n            break;\n          case \"variableString\":\n            if (!itemProperty.data) {\n              throw new Error(\"No data function for a variableString\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n            break;\n          case \"button\":\n            if (!itemProperty.onClickAction) {\n              throw new Error(\"No onClickAcion function for a button\");\n            }\n\n            cells.push(\n              <TableCell key={name}>\n                <Button\n                  text={itemProperty.text}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClickAction={itemProperty.onClickAction}\n                  actionContext={item}\n                />\n              </TableCell>\n            );\n            break;\n        }\n      }\n\n      rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n    }\n  } catch (err) {\n    return (\n      <TableBody>\n        <TableCell>\n          <div>Table Data Error! {err.message}</div>\n          <div>Column Index: {currentContext.index}</div>\n          <div>Column Type: {currentContext.column.type}</div>\n          <div>Item Data: {JSON.stringify(currentContext.item)}</div>\n        </TableCell>\n      </TableBody>\n    );\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={refFn} className={componentClassName}>\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <Dropdown\n        value={item.type || \"\"}\n        items={[\n          { name: \"String\", value: \"string\" },\n          { name: \"Button\", value: \"button\" },\n          { name: \"Variable String\", value: \"variableString\" },\n        ]}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"itemSource\",\n          itemsFn: () => Object.keys(game.dataSources),\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.componentName = \"Table\";\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n\nTable.documentation = TableDocumentation;\n\nTable.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Table\",\n    component: Table,\n    ref: (ref: any) => connectors.create(ref, <Table />),\n  };\n};\n\nregisterCustomComponent(Table);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const VariableTextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"dataProperty\",\n        },\n        {\n          type: StringSetting,\n          property: \"subProperty\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# VariableText\n\n## Properties\n\n`;\n\nexport const VariableTextDocumentation = {\n  md,\n};\n","import { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { StringSetting } from \"../../Settings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { VariableTextSettings } from \"./VariableTextSettings\";\nimport { documentation } from \"../../../data/documentation\";\nimport { VariableTextDocumentation } from \"./VariableTextDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const VariableText = ({\n  dataProperty,\n  subProperty,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    VariableText.baseStyle,\n    customStyles.VariableText,\n    customStyleName\n  );\n\n  let value = game.data[dataProperty];\n  if (value && subProperty) {\n    value = value[subProperty];\n  }\n\n  if (typeof value === \"object\") {\n    value = undefined;\n  }\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {value ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nVariableText.componentName = VariableText;\n\nVariableText.craft = {\n  props: {},\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: VariableTextSettings,\n  },\n};\n\nVariableText.baseStyle = {\n  margin: \"0em\",\n};\n\nVariableText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nVariableText.documentation = VariableTextDocumentation;\n\nVariableText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"VariableText\",\n    component: VariableText,\n    ref: (ref: any) => connectors.create(ref, <VariableText />),\n  };\n};\n\nregisterCustomComponent(VariableText);\n","export const data = {\n  gameData: null as any,\n  customComponents: [] as any[],\n};\n","import { store } from \"./context\";\nimport { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../data/components\";\n\nexport function saveGameData() {\n  const { editorQuery } = store;\n\n  if (!editorQuery) {\n    console.error(\"store.editorQuery not set\");\n    return;\n  }\n\n  console.debug(\"Saving game data\");\n\n  const baseStyles: any = {};\n\n  for (const componentName in components) {\n    // Kinda hacky but works\n    const component = (components as any)[componentName];\n\n    baseStyles[componentName] = component.baseStyle;\n  }\n\n  // Layout is a string\n  let layout = editorQuery.serialize();\n\n  // If this condition matches, then there was some error\n  if (layout === \"{}\") {\n    layout = null;\n  }\n\n  data.gameData = {\n    id: Math.random(),\n    layout,\n    baseStyles,\n    customStyles,\n    customComponents: data.customComponents,\n  };\n\n  localStorage.gameData = JSON.stringify(data.gameData);\n}\n","import { useEffect } from \"react\";\nimport { saveGameData } from \"../../lib/saveGameData\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      saveGameData();\n    }, 2000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import { makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  gameArea: {\n    background: \"#eee\",\n  },\n}));\n","import { Paper, Grid } from \"@material-ui/core\";\nimport { store } from \"../../lib/context\";\nimport { Toolbox } from \"../../components/Toolbox\";\nimport { SettingsPanel } from \"../../components/SettingsPanel\";\n\nimport { Container, Text } from \"../../components/CustomComponents\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"./AutoSave\";\nimport { components } from \"../../data/components\";\nimport { HashRouter } from \"react-router-dom\";\nimport { data } from \"../../data/data\";\nimport { saveGameData } from \"../../lib/saveGameData\";\nimport { useEffect } from \"react\";\nimport { useSharedStyles } from \"../../styles/shared\";\n\nfunction Content() {\n  const { query } = useEditor();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    return () => {\n      saveGameData();\n    };\n  }, []);\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <Grid container>\n      <Grid item xs className={classes.gameArea}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}>\n            {/*This is the default layout*/}\n            <Element is={Container} padding={5} canvas>\n              <Text\n                text={\"Start dragging components in (and delete this one)\"}\n              />\n            </Element>\n          </Frame>\n        </HashRouter>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={undefined}>\n          <Toolbox />\n          <SettingsPanel />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function Edit() {\n  return (\n    <div>\n      <Editor resolver={components}>\n        <AutoSave />\n        <Content />\n      </Editor>\n    </div>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { components } from \"../data/components\";\nimport { data } from \"../data/data\";\nimport { useSharedStyles } from \"../styles/shared\";\n\nexport function Play() {\n  const history = useHistory();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    // If there is no game data, then switch to the editor\n    if (!data.gameData) {\n      console.error(new Error(\"No gameData routing to /edit\"));\n      history.push(\"/edit\");\n    }\n  }, [history]);\n\n  return (\n    <div className={classes.gameArea}>\n      <Editor resolver={components} enabled={false}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context, store } from \"../lib/context\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { openStyleDrawer } from \"../actions/styleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [updateValue, update] = useState(false);\n\n  useContext(Context);\n\n  function navigate(path: string) {\n    history.push(path);\n    update(!updateValue);\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          store.state.optionsDrawerOpen = true;\n          store.update();\n        }}\n      >\n        <MenuIcon />\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/edit\");\n        }}\n        variant={path.includes(\"/edit\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Edit\n      </Button>\n      <Button\n        onClick={() => {\n          let file = store.state.localSettings.lastCodeFile;\n\n          if (file) {\n            file = `/${file}`;\n          }\n\n          navigate(`/code${file}`);\n        }}\n        variant={path.includes(\"/code\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Code\n      </Button>\n      <Button\n        onClick={() => {\n          openStyleDrawer();\n        }}\n      >\n        Styling\n      </Button>\n      <Button\n        onClick={() => {\n          saveGameData();\n          navigate(\"/play\");\n        }}\n        variant={path.includes(\"/play\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Play\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/documentation\");\n        }}\n        variant={path.includes(\"/documentation\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Documentation\n      </Button>\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blueGrey[900],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: blueGrey[100],\n    },\n  },\n});\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nexport const ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameData = {\n    gameData: localStorage.gameData,\n    gameCode: localStorage.gameCode,\n  };\n\n  const [allGameData, setAllGameData] = useState(\n    btoa(JSON.stringify(currentAllGameData))\n  );\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Import or export game data</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameData}\n          onChange={(event) => {\n            setAllGameData(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameData));\n            localStorage.gameData = data.gameData;\n            localStorage.gameCode = data.gameCode;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nexport const ConfirmResetDialog = ({ onClose }: any) => {\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Reset Game Configuration</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to reset the curret game data?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            delete localStorage.gameData;\n            delete localStorage.gameCode;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useState } from \"react\";\n\nexport function useUpdate() {\n  const [updateValue, update] = useState(false);\n\n  return () => update(!updateValue);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  IconButton,\n  TableHead,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport HelpOutlinedIcon from \"@material-ui/icons/HelpOutlined\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useUpdate } from \"../../config/useUpdate\";\nimport { data } from \"../../data/data\";\nimport { saveGameData } from \"../../lib/saveGameData\";\n\nfunction CustomComponent({ component, components, update }: any) {\n  let icon = null;\n\n  if (component.status === \"Checking\") {\n    icon = <HelpOutlinedIcon />;\n  } else if (component.ok) {\n    icon = <CheckCircleIcon style={{ color: \"green\" }} />;\n  } else {\n    icon = <ErrorIcon style={{ color: \"red\" }} />;\n  }\n\n  return (\n    <TableRow>\n      <TableCell>\n        <IconButton\n          onClick={() => {\n            const index = components.indexOf(component);\n            components.splice(index, 1);\n            update();\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n      <TableCell>{component.url}</TableCell>\n      <TableCell>{icon}</TableCell>\n      <TableCell>{component.status}</TableCell>\n    </TableRow>\n  );\n}\n\nexport const CustomComponentsDialog = ({ onClose }: any) => {\n  const update = useUpdate();\n  const [newComponentUrl, setNewComponentUrl] = useState(\"\");\n\n  function checkComponent(component: any) {\n    component.status = \"Checking\";\n\n    return new Promise(async function (accept: any) {\n      try {\n        const result = await axios.get(component.url);\n\n        console.log(result.status);\n        if (result.status === 200) {\n          component.status = \"Ok\";\n          component.ok = true;\n        }\n      } catch (err) {\n        component.status = `Failed (${err.response.status})`;\n        component.ok = false;\n      }\n\n      accept();\n    });\n  }\n\n  async function checkComponentUrls() {\n    const requests = data.customComponents.map((component) => {\n      return checkComponent(component);\n    });\n\n    update();\n\n    await Promise.all(requests);\n\n    update();\n  }\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Custom Components</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Add custom components to your game.\n        </DialogContentText>\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>URL</TableCell>\n                <TableCell></TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.customComponents.map((component) => {\n                return (\n                  <CustomComponent\n                    component={component}\n                    components={data.customComponents}\n                    update={update}\n                  />\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <br />\n\n        <TextField\n          value={newComponentUrl}\n          onChange={(event: any) => {\n            setNewComponentUrl(event.target.value);\n          }}\n        />\n        <Button\n          onClick={() => {\n            const component = {\n              url: newComponentUrl,\n              status: \"New\",\n            };\n\n            data.customComponents.push(component);\n\n            checkComponent(component);\n\n            setNewComponentUrl(\"\");\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Component\n        </Button>\n        <Button\n          onClick={checkComponentUrls}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Check Components\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            onClose();\n          }}\n          color=\"primary\"\n        >\n          Done\n        </Button>\n        <Button\n          onClick={() => {\n            saveGameData();\n            window.location.reload();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Save And Reload\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport packageJson from \"../../../package.json\";\nimport { store } from \"../../lib/context\";\nimport { useState } from \"react\";\nimport { ImportExportDialog } from \"./ImportExportDialog\";\nimport { ConfirmResetDialog } from \"./ConfirmResetDialog\";\nimport { CustomComponentsDialog } from \"./CustomComponentsDialog\";\nimport { game } from \"../../data/game\";\n\nexport const OptionsDrawer = () => {\n  const [showImportExprt, setShowImportExport] = useState(false);\n  const [showConfirmReset, setShowConfirmReset] = useState(false);\n  const [showCustomComponents, setShowCustomComponents] = useState(false);\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.optionsDrawerOpen}\n        onClose={() => {\n          store.state.optionsDrawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          {/* Initialize Game Data */}\n          <ListItem\n            button\n            onClick={() => {\n              game.initializeGameData();\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Initialize Game Data\" />\n          </ListItem>\n          {/* Reset Game Configuration */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowConfirmReset(true);\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Reset Game Configuration\"\n              secondary=\"Reset all game configuration\"\n            />\n          </ListItem>\n          {/* Import / Export */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowImportExport(true);\n            }}\n          >\n            <ListItemIcon>\n              <ImportExportIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Import / Export\"\n              secondary=\"Import or export your game data\"\n            />\n          </ListItem>\n          {/* Custom Components */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowCustomComponents(true);\n            }}\n          >\n            <ListItemIcon>\n              <AppsIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Custom Components\"\n              secondary=\"Custom components for your game\"\n            />\n          </ListItem>\n          <Divider />\n          {/* Version */}\n          <ListItem onClick={() => {}}>\n            <ListItemText\n              primary=\"Idling Engine\"\n              secondary={`Version ${packageJson.version}`}\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n\n      {showConfirmReset && (\n        <ConfirmResetDialog onClose={() => setShowConfirmReset(false)} />\n      )}\n\n      {showCustomComponents && (\n        <CustomComponentsDialog\n          onClose={() => setShowCustomComponents(false)}\n        />\n      )}\n    </div>\n  );\n};\n","import { Box, Button, Drawer, Typography } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { customStyles } from \"../data/customStyles\";\nimport { Dropdown } from \"./Controls/Dropdown\";\nimport * as components from \"./CustomComponents\";\nimport { v4 as uuid } from \"uuid\";\nimport { closeStyleDrawer } from \"../actions/styleDrawer\";\nimport { useUpdate } from \"../config/useUpdate\";\n\nconst supportedComponents: any = {\n  [components.Button.name]: components.Button,\n  [components.PathContainer.name]: components.PathContainer,\n  [components.GridItem.name]: components.GridItem,\n  [components.Text.name]: components.Text,\n  [components.VariableText.name]: components.VariableText,\n};\n\nexport const StyleDrawer = () => {\n  const update = useUpdate();\n\n  let {\n    styleDrawerComponentName: selectedComponent,\n    styleDrawerStyleId: selectedStyle,\n  } = store.state.localSettings;\n\n  const updateSettings = (\n    styleDrawerComponentName: string,\n    styleDrawerStyleId: string\n  ) => {\n    store.state.localSettings.styleDrawerComponentName = styleDrawerComponentName;\n    store.state.localSettings.styleDrawerStyleId = styleDrawerStyleId;\n    update();\n  };\n\n  let component: any = null;\n  if (selectedComponent) {\n    component = customStyles[selectedComponent];\n  }\n\n  // The selectedStyle id doesn't actually exist\n  // Could be an artifact of the localSettings\n  if (!component || !component[selectedStyle]) {\n    selectedStyle = \"\";\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.localSettings.styleDrawerOpen}\n        onClose={() => {\n          closeStyleDrawer();\n        }}\n        anchor=\"right\"\n        BackdropProps={{ invisible: true }}\n      >\n        <div style={{ padding: \"1em\" }}>\n          <Typography variant=\"h4\">Style Components</Typography>\n          <Dropdown\n            value={selectedComponent}\n            items={Object.keys(supportedComponents)}\n            label=\"Component\"\n            onChange={(event: any) => {\n              customStyles[event.target.value] =\n                customStyles[event.target.value] || {};\n\n              updateSettings(event.target.value, \"\");\n              update();\n            }}\n          />\n          {component && (\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box flexGrow={1}>\n                <Dropdown\n                  value={selectedStyle}\n                  items={Object.keys(component).map((id) => ({\n                    value: id,\n                    name: component[id]._name,\n                  }))}\n                  label=\"Styles\"\n                  onChange={(event: any) => {\n                    updateSettings(selectedComponent, \"\");\n                  }}\n                />\n              </Box>\n              <Box>\n                <Button\n                  onClick={(event) => {\n                    const id = uuid();\n\n                    component[id] = {\n                      _name: `New Style ${Object.keys(component).length + 1}`,\n                    };\n\n                    updateSettings(selectedComponent, id);\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Style\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {component && selectedStyle && (\n            <>\n              <Settings\n                config={[\n                  {\n                    property: \"_name\",\n                    type: StringSetting,\n                  },\n                  ...supportedComponents[selectedComponent].styleProperties,\n                ]}\n                properties={component[selectedStyle]}\n                setProp={(callback: (props: any) => void) => {\n                  // Important to assign it a new Id\n                  const newProps = Object.assign({}, component[selectedStyle], {\n                    customId: Math.random(),\n                  });\n                  callback(newProps);\n                  component[selectedStyle] = newProps;\n\n                  store.update();\n                }}\n              />\n              <Button\n                onClick={(event) => {\n                  const styleIds = Object.keys(component);\n                  const index = styleIds.indexOf(selectedStyle);\n\n                  let nextStyle = \"\";\n\n                  delete component[selectedStyle];\n\n                  if (index > 0) {\n                    nextStyle = styleIds[index - 1];\n                  } else if (styleIds.length) {\n                    nextStyle = styleIds[1];\n                  }\n\n                  updateSettings(selectedComponent, nextStyle);\n                }}\n                variant=\"contained\"\n              >\n                Delete Style\n              </Button>\n            </>\n          )}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../data/components\";\n\nfunction loadComponentProperties(baseStyles: any) {\n  for (const componentName in baseStyles) {\n    const component = components[componentName];\n    const baseStyle = baseStyles[componentName];\n\n    if (component && baseStyle) {\n      component.baseStyle = {\n        ...component.baseStyle,\n        ...baseStyle,\n      };\n    }\n  }\n}\n\nexport function loadGameData() {\n  try {\n    let storedGameData = localStorage.gameData;\n\n    if (storedGameData) {\n      storedGameData = JSON.parse(storedGameData);\n\n      if (storedGameData.baseStyles) {\n        loadComponentProperties(storedGameData.baseStyles);\n      }\n\n      if (storedGameData.customStyles) {\n        Object.assign(customStyles, storedGameData.customStyles);\n      }\n\n      data.gameData = storedGameData;\n      data.customComponents = storedGameData.customComponents || [];\n\n      return storedGameData;\n    }\n\n    console.warn(\"No game data loaded\");\n  } catch (err) {\n    console.error(err);\n  }\n\n  data.gameData = {};\n\n  return null;\n}\n","import React, { Component } from \"react\";\nimport \"./lib/log\";\nimport { Edit, Play, Code, Documentation } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { theme } from \"./config/theme\";\nimport { executeCode, setUpdateUIFunction } from \"./data/game\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\nimport { StyleDrawer } from \"./components/StyleDrawer\";\nimport { loadLocalSettings } from \"./lib/localSettings\";\nimport { loadGameData } from \"./lib/loadGameData\";\nimport { data } from \"./data/data\";\n\nloadLocalSettings();\n\nexport default class App extends Component {\n  state = {\n    customComponentsLoaded: false,\n  };\n\n  async componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n\n    setUpdateUIFunction(store.update);\n\n    if (!data.gameData) {\n      loadGameData();\n    }\n\n    executeCode();\n\n    const loadingPromises = [];\n    const errors: any = {};\n    // http://localhost:9090/main.js\n    for (const customComponent of data.customComponents) {\n      if (!customComponent.url) {\n        continue;\n      }\n\n      const p = new Promise((resolve: any) => {\n        const s = document.createElement(\"script\");\n        s.type = \"text/javascript\";\n        s.src = customComponent.url;\n        s.onload = () => {\n          resolve();\n        };\n        s.onerror = (err) => {\n          console.log(err);\n          errors[customComponent.url] = err;\n          resolve();\n        };\n\n        document.head.append(s);\n      });\n\n      loadingPromises.push(p);\n    }\n\n    await Promise.all(loadingPromises);\n\n    console.log(errors);\n\n    this.setState({\n      customComponentsLoaded: true,\n    });\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    if (!this.state.customComponentsLoaded) {\n      return null;\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Context.Provider\n          value={{\n            state: store.state,\n            update: this.update,\n            editorQuery: store.editorQuery,\n          }}\n        >\n          <BrowserRouter basename=\"/idling-engine\">\n            <div>\n              <OptionsDrawer />\n              <StyleDrawer />\n              <Header />\n              <Switch>\n                <Route path=\"/edit\" render={() => <Edit />} />\n                <Route path=\"/code\" render={() => <Code />} />\n                <Route path=\"/play\" render={() => <Play />} />\n                <Route path=\"/documentation\" render={() => <Documentation />} />\n                <Route path=\"/\">\n                  <Redirect to=\"/edit\" />\n                </Route>\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </Context.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/style.css\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
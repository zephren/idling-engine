{"version":3,"sources":["data/game.ts","lib/log.ts","lib/context.ts","views/Code.tsx","views/Documentation/index.tsx","views/Documentation/index-md.ts","config/useSetupComponent.ts","components/user/ToolBarTabs.tsx","components/user/AppBar.tsx","components/Settings/CustomRepeatSetting.ts","components/Controls/Dropdown.tsx","components/Settings/DropdownSetting.tsx","components/Settings/StringSetting.tsx","data/customStyles.ts","lib/localSettings.ts","actions/styleDrawer.ts","components/Settings/StyleSetting.tsx","components/Settings/index.tsx","config/useCustomStyle.ts","components/user/Button/index.tsx","components/user/Button/ButtonSettings.tsx","components/user/Text/index.tsx","components/user/Text/TextSettings.tsx","components/user/Card.tsx","components/user/Container/index.tsx","components/user/Container/ContainerSettings.tsx","components/user/Grid/GridSettings.tsx","components/user/Grid/index.tsx","components/user/PathContainer.tsx","components/user/Table.tsx","components/user/VariableText/VariableTextSettings.tsx","components/user/VariableText/index.tsx","components/Toolbox.tsx","components/SettingsPanel.tsx","data/data.ts","components/user/components.ts","lib/saveGameData.ts","components/AutoSave.tsx","lib/components.ts","lib/loadGameData.ts","views/Edit.tsx","views/Play.tsx","views/Styling.tsx","components/Header.tsx","config/theme.ts","components/OptionsDrawer.tsx","components/StyleDrawer.tsx","App.tsx","index.tsx"],"names":["setUpdateUIFunction","fn","game","update","settings","tickInterval","data","actions","conditionals","dataSources","configure","console","log","isInitialized","_initialize","this","tick","currentTimeout","setTimeout","err","error","executeCode","files","localStorage","gameCode","JSON","parse","finalCode","file","code","lines","split","numberWidth","Math","floor","length","map","line","index","toString","padEnd","join","clearTimeout","eval","initialize","message","window","LogLevels","DEBUG","INFO","WARN","ERROR","c","co","logLevels","logLevel","debug","args","info","warn","store","state","localSettings","highlightComponents","previousHighlightComponents","styleDrawerOpen","styleDrawerComponentName","styleDrawerStyleId","optionsDrawerOpen","editorQuery","Context","React","createContext","Code","history","useHistory","useState","updateValue","save","stringify","useContext","useEffect","interval","setInterval","clearInterval","push","name","variant","location","pathname","includes","color","onClick","path","render","style","position","width","top","bottom","mode","theme","onChange","editorProps","$blockScrolling","height","fontSize","value","tabSize","commands","beautify","to","useStyles","makeStyles","paper","padding","Documentation","classes","Paper","className","Breadcrumbs","aria-label","Link","href","Typography","plugins","children","useSharedStyles","componentEditing","boxShadow","minHeight","minWidth","componentSelected","componentClass","editing","selected","sharedClasses","additonalClasses","useSetupComponent","properties","additionalClasses","useNode","events","connectors","connect","drag","useEditor","enabled","options","componentClassName","refFn","ref","ToolBarTabs","tabs","defaultTab","tab","default","match","parseInt","getCurrentTab","currentTabIndex","Tabs","event","label","root","flexGrow","spacer","fullHeight","mixins","toolbar","AppBar","Toolbar","craft","props","related","node","triggerUpdate","setProp","updateTab","property","TextField","target","Switch","checked","setDefault","CustomRepeatSetting","component","items","item","Dropdown","itemElements","MenuItem","labelElement","InputLabel","shrink","FormControl","fullWidth","Select","DropdownSetting","itemsFn","StringSetting","customStyles","saveLocalSettings","openStyleDrawer","componentName","styleId","StyleSetting","Box","display","alignItems","Object","keys","id","_name","IconButton","Settings","config","settingsRows","configItem","remainingProps","TableRow","TableCell","scope","type","TableContainer","size","TableBody","useCustomStyle","base","styleGroup","customStyleName","setStyle","customStyle","customId","Button","text","onClickAction","actionContext","baseStyle","action","margin","styleProperties","Text","disabled","html","e","tagName","rules","canDrag","CardTop","CardContent","CardBottom","CardActions","canMoveIn","incomingNode","Card","is","canvas","Container","sizes","GridContainer","Grid","container","spacing","GridItem","xs","main","PathContainer","visible","float","TableRows","columnNames","rows","currentContext","column","itemIndex","cells","itemProperty","Error","Table","itemSource","headerRow","itemSourceFunction","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","VariableText","dataProperty","Toolbox","selectedComponent","setSelectedComponent","px","py","direction","justify","pb","create","propertyConfigDefinitions","BaseProperties","definition","mt","Chip","callback","newProps","assign","SettingsPanel","query","currentNodeId","nodes","isDeletable","createElement","delete","gameData","components","allComponents","saveGameData","baseStyles","random","layout","serialize","AutoSave","loadGameData","storedGameData","loadComponentProperties","baseComponents","Content","background","undefined","Edit","resolver","Play","Styling","Header","navigate","createMuiTheme","palette","primary","blueGrey","secondary","ImportExportDialog","onClose","currentAllGameData","btoa","allGameData","setAllGameData","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","reload","OptionsDrawer","showImportExprt","setShowImportExport","Drawer","List","ListItem","button","ListItemIcon","ListItemText","supportedComponents","StyleDrawer","selectedStyle","setSelectedStyle","anchor","BackdropProps","invisible","uuid","styleIds","indexOf","nextStyle","App","setState","ThemeProvider","CssBaseline","Provider","basename","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6af8683f.chunk.js","sourcesContent":["interface AnyObject {\n  [key: string]: any;\n}\n\nexport function setUpdateUIFunction(fn: any) {\n  game.update = fn;\n}\n\nexport const game = {\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Conditionals\n  conditionals: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialize\n  isInitialized: false,\n  _initialize: (data: any) => {\n    console.log(\"game.initialize not defined\");\n  },\n  get initialize() {\n    return this._initialize;\n  },\n  set initialize(fn) {\n    this._initialize = () => {\n      console.log(\"Initializing\");\n      this.isInitialized = true;\n      fn(game.data);\n    };\n  },\n\n  // Tick\n  tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  // Update\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n};\n\nlet currentTimeout: any = null;\n\n// Tick\nfunction tick() {\n  currentTimeout = setTimeout(() => {\n    try {\n      game.tick();\n    } catch (err) {\n      console.error(err);\n    }\n    tick();\n  }, game.settings.tickInterval);\n}\n\nexport function executeCode() {\n  const files: any = localStorage.gameCode\n    ? JSON.parse(localStorage.gameCode)\n    : [];\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\\n\";\n  }\n\n  const lines = finalCode.split(\"\\n\");\n  const numberWidth = Math.floor(Math.log(lines.length));\n\n  console.log(\n    lines\n      .map((line, index) => {\n        const numberedLine = `${(index + 1)\n          .toString()\n          .padEnd(numberWidth)} ${line}`;\n        return numberedLine;\n      })\n      .join(\"\\n\")\n  );\n\n  try {\n    // Stop anything currently executing\n    if (currentTimeout) {\n      clearTimeout(currentTimeout);\n    }\n\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    if (!game.isInitialized) {\n      game.initialize(game.data);\n    }\n\n    game.configure(game.settings);\n\n    tick();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\n(window as any).game = game;\n","// Mutate console for better logging\n\nconst LogLevels = {\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n};\n\nconst c = console as any;\nconst co = { ...console };\n\nc.logLevels = LogLevels;\nc.logLevel = LogLevels.DEBUG;\n\nc.debug = (...args: any) => {\n  if (c.logLevel <= LogLevels.DEBUG) {\n    co.debug(\"DEBUG\", ...args);\n  }\n};\n\nc.info = (...args: any) => {\n  if (c.logLevel <= LogLevels.INFO) {\n    co.info(\"INFO\", ...args);\n  }\n};\n\nc.warn = (...args: any) => {\n  if (c.logLevel <= LogLevels.WARN) {\n    co.warn(\"WARN\", ...args);\n  }\n};\n\nc.error = (...args: any) => {\n  if (c.logLevel <= LogLevels.ERROR) {\n    co.error(\"ERROR\", ...args);\n  }\n};\n\nexport default console;\n","import React from \"react\";\n\nexport const store = {\n  state: {\n    localSettings: {\n      highlightComponents: true,\n      previousHighlightComponents: true,\n      styleDrawerOpen: false,\n      styleDrawerComponentName: \"\",\n      styleDrawerStyleId: \"\",\n    },\n    optionsDrawerOpen: false,\n  },\n  editorQuery: null as any,\n  update: () => {\n    console.log(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport beautify from \"ace-builds/src-noconflict/ext-beautify\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../lib/context\";\nimport { executeCode } from \"../data/game\";\n\nconst initialCode = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = () => {\n  // Update any initial game data here\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n`;\n\nconst files: any = localStorage.gameCode\n  ? JSON.parse(localStorage.gameCode)\n  : [];\n\nexport function Code() {\n  const history = useHistory();\n  const [updateValue, update] = useState(false);\n  useContext(Context);\n\n  function save() {\n    localStorage.gameCode = JSON.stringify(files);\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode();\n    };\n  }, []);\n\n  if (files.length === 0) {\n    files.push({\n      name: \"main\",\n      code: \"//main\\n\" + initialCode,\n    });\n  }\n\n  return (\n    <div>\n      {files.map((file: any, index: number) => {\n        const variant = history.location.pathname.includes(file.name)\n          ? \"contained\"\n          : \"text\";\n        return (\n          <Button\n            key={file.name}\n            color=\"primary\"\n            variant={variant}\n            onClick={() => {\n              history.push(`/code/${file.name}`);\n            }}\n          >\n            {file.name}\n          </Button>\n        );\n      })}\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => {\n          const name = `New File ${files.length}`;\n\n          files.push({\n            name: name,\n            code: `//${name}`,\n          });\n\n          update(!updateValue);\n        }}\n      >\n        + New File\n      </Button>\n      ctrl+shift+b - beautify\n      <Switch>\n        {files.map((file: any) => {\n          return (\n            <Route\n              key={file.name}\n              path={`/code/${file.name}`}\n              render={() => {\n                return (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      width: \"100%\",\n                      top: \"73px\",\n                      bottom: \"0px\",\n                    }}\n                  >\n                    <AceEditor\n                      mode=\"javascript\"\n                      theme=\"monokai\"\n                      onChange={(code: string) => {\n                        file.code = code;\n                      }}\n                      name=\"Code Editor\"\n                      editorProps={{ $blockScrolling: true }}\n                      style={{ width: \"100%\", height: \"100%\", fontSize: \"1em\" }}\n                      value={file.code}\n                      tabSize={2}\n                      commands={beautify.commands}\n                    />\n                  </div>\n                );\n              }}\n            />\n          );\n        })}\n        <Route path=\"/code\">\n          <Redirect to={`/code/${files[0].name}`} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import {\n  Breadcrumbs,\n  Container,\n  Link,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport index from \"./index-md\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"1em\",\n  },\n}));\n\nexport function Documentation() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link color=\"inherit\" href=\"/\">\n            Material-UI\n          </Link>\n          <Link color=\"inherit\" href=\"/getting-started/installation/\">\n            Core\n          </Link>\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\n        </Breadcrumbs>\n        <ReactMarkdown plugins={[]} children={index} />\n      </Paper>\n    </Container>\n  );\n}\n","const md = `\n# Idling Engine\n`;\n\nexport default md;\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Context, store } from \"../lib/context\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px rgba(255, 50, 50, 1)\",\n    minHeight: \"5px\",\n    minWidth: \"5px\",\n    padding: \"10px!important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nfunction componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing && store.state.localSettings.highlightComponents\n      ? sharedClasses.componentEditing\n      : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n\ntype Properties = {\n  additionalClasses?: string[];\n};\n\nexport function useSetupComponent(properties: Properties = {}) {\n  const { additionalClasses = [] } = properties;\n\n  const store = useContext(Context);\n\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state: any) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state: any) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n  const componentClassName = componentClass(\n    enabled,\n    selected,\n    sharedClasses,\n    additionalClasses\n  );\n\n  const refFn = (ref: any) => connect(drag(ref));\n\n  return {\n    refFn,\n    // connect,\n    // drag,\n    selected,\n    enabled,\n    // sharedClasses,\n    componentClassName,\n    store,\n  };\n}\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Switch,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetupComponent } from \"../../config/useSetupComponent\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const classes = useStyles();\n  const { refFn, componentClassName, store } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n\n  return (\n    <div\n      ref={refFn}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\" className={componentClassName}>\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const updateTab = (tab: any, property: string, value: any) => {\n    tab[property] = value;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const setDefault = (tab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    updateTab(tab, \"default\", true);\n  };\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <div key={index}>\n            <TextField\n              label=\"Name\"\n              value={tab.name}\n              onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n            />\n            <TextField\n              label=\"Path\"\n              value={tab.path}\n              onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n            />\n            <TextField\n              label=\"To\"\n              value={tab.to}\n              onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n            />\n            <Switch\n              checked={tab.default || false}\n              onChange={() => setDefault(tab)}\n            />\n          </div>\n        );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport const Dropdown = ({ value, items, label, onChange }: any) => {\n  const itemElements = [];\n\n  for (const item of items) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    itemElements.push(\n      <MenuItem key={name} value={value}>\n        {name}\n      </MenuItem>\n    );\n  }\n\n  let labelElement = null;\n  if (label) {\n    labelElement = <InputLabel shrink>{label}</InputLabel>;\n  }\n\n  return (\n    <FormControl fullWidth>\n      {labelElement}\n      <Select value={value || \"\"} onChange={onChange}>\n        {itemElements}\n      </Select>\n    </FormControl>\n  );\n};\n","import { Dropdown } from \"../Controls/Dropdown\";\n\ninterface Props {\n  property: any;\n  value: any;\n  itemsFn: () => { name: string; value: any }[];\n  setProp: any;\n}\n\nexport const DropdownSetting = ({\n  property,\n  value,\n  itemsFn,\n  setProp,\n}: Props) => {\n  return (\n    <Dropdown\n      value={value || \"\"}\n      items={itemsFn()}\n      onChange={(event: any) => {\n        setProp((props: any) => (props[property] = event.target.value));\n      }}\n    />\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => {\n          props[property] = event.target.value;\n        });\n      }}\n    />\n  );\n};\n","export const customStyles: {\n  [key: string]: any;\n} = {};\n","import { store } from \"./context\";\n\nexport function loadLocalSettings() {\n  if (localStorage.localSettings) {\n    store.state.localSettings = JSON.parse(localStorage.localSettings);\n  }\n}\n\nexport function saveLocalSettings() {\n  localStorage.localSettings = JSON.stringify(store.state.localSettings);\n}\n","import { store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function openStyleDrawer(options: any = {}) {\n  store.state.localSettings.styleDrawerOpen = true;\n  store.state.localSettings.previousHighlightComponents =\n    store.state.localSettings.highlightComponents;\n  store.state.localSettings.highlightComponents = false;\n\n  if (options.componentName && options.styleId) {\n    store.state.localSettings.styleDrawerComponentName = options.componentName;\n    store.state.localSettings.styleDrawerStyleId = options.styleId;\n  }\n  console.log(options);\n  saveLocalSettings();\n\n  store.update();\n}\n\nexport function closeStyleDrawer() {\n  store.state.localSettings.styleDrawerOpen = false;\n  store.state.localSettings.highlightComponents =\n    store.state.localSettings.previousHighlightComponents;\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { Box, Button, IconButton } from \"@material-ui/core\";\nimport { customStyles } from \"../../data/customStyles\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { openStyleDrawer } from \"../../actions/styleDrawer\";\n\ninterface Props {\n  property: any;\n  value: any;\n  componentName: string;\n  setProp: any;\n}\n\nexport const StyleSetting = ({\n  property,\n  value,\n  componentName,\n  setProp,\n}: Props) => {\n  console.log(componentName);\n  if (!customStyles[componentName]) {\n    return \"No styles defined...\";\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={Object.keys(customStyles[componentName]).map((id) => ({\n            value: id,\n            name: customStyles[componentName][id]._name,\n          }))}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <SettingsBackupRestoreIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            openStyleDrawer({\n              componentName,\n              styleId: value,\n            });\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport { CustomRepeatSetting } from \"./CustomRepeatSetting\";\nexport { DropdownSetting } from \"./DropdownSetting\";\nexport { SliderSetting } from \"./SliderSetting\";\nexport { StringSetting } from \"./StringSetting\";\nexport { StyleSetting } from \"./StyleSetting\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  for (const configItem of config) {\n    const { property, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={property}>\n        <TableCell component=\"td\" scope=\"row\">\n          {property}\n        </TableCell>\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useState } from \"react\";\n\nexport function useCustomStyle(\n  base: any,\n  styleGroup: any,\n  customStyleName: string\n) {\n  const [style, setStyle] = useState(null as any);\n\n  let customStyle = null;\n  if (customStyleName) {\n    customStyle = styleGroup[customStyleName];\n  }\n\n  // console.log(\n  //   \"style && customStyle.customId !== style.customId\",\n  //   style && customStyle.customId !== style.customId\n  // );\n  // console.log(customStyle);\n\n  // Already have a style and the customId is different\n  // Don't have a style and we have a custom style\n  if (\n    (style && customStyle && customStyle.customId !== style.customId) ||\n    (!style && customStyle)\n  ) {\n    setStyle({\n      ...base,\n      ...customStyle,\n    });\n  }\n\n  // If the customStyle is reset\n  if (style && !customStyle) {\n    setStyle(null);\n  }\n\n  // Return the base style if nothing else\n  return style || base;\n}\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { store } from \"../../../lib/context\";\nimport { game } from \"../../../data/game\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ButtonSettings } from \"./ButtonSettings\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { StringSetting } from \"../../Settings\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Button.baseStyle,\n    customStyles.Button,\n    customStyleName\n  );\n\n  return (\n    <MaterialButton\n      style={style}\n      ref={refFn}\n      className={componentClassName}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Button\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n\nButton.baseStyle = {\n  margin: \"0em\",\n};\n\nButton.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import ContentEditable from \"react-contenteditable\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { TextSettings } from \"./TextSettings\";\nimport { StringSetting } from \"../../Settings\";\n\nexport const Text = ({ text, customStyleName }: any) => {\n  const { refFn, selected, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Text.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn}>\n      <ContentEditable\n        disabled={!selected}\n        html={text}\n        onChange={\n          (e) => null\n          // setProp(\n          //   (props) =>\n          //     (props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\"))\n          // )\n        }\n        tagName=\"span\"\n        style={style}\n        className={componentClassName}\n      />\n      {/* {selected && (\n        <div>\n          <FormControl className=\"text-additional-settings\" size=\"small\">\n            <FormLabel component=\"legend\">Font size</FormLabel>\n            <Slider\n              defaultValue={fontSize}\n              step={1}\n              min={7}\n              max={50}\n              valueLabelDisplay=\"auto\"\n              onChange={(_, value) => {\n                setProp((props) => (props.fontSize = value));\n              }}\n            />\n          </FormControl>\n        </div>\n      )} */}\n    </span>\n  );\n};\n\nText.craft = {\n  props: {\n    text: \"Text\",\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n\nText.baseStyle = {\n  margin: \"0em\",\n};\n\nText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\n\nexport const TextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { Card as MUICard, CardActions, CardContent } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../config/useSetupComponent\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return (\n    <CardContent ref={connect} className=\"text-only\">\n      {children}\n    </CardContent>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return <CardActions ref={connect}>{children}</CardActions>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = () => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUICard ref={refFn} className={componentClassName}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </MUICard>\n  );\n};\n","import { Container as MUIContainer } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ContainerSettings } from \"./ContainerSettings\";\n\nexport const Container = ({ children }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUIContainer\n      ref={refFn}\n      style={Container.baseStyle}\n      className={componentClassName}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n\nContainer.baseStyle = {\n  padding: \"0em\",\n};\n","// import { useNode } from \"@craftjs/core\";\n// import { Settings } from \"../../Settings\";\n// import { StringSetting } from \"../../Settings\";\n// import { game } from \"../../../data/game\";\n// import { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ContainerSettings = () => {\n  // const {\n  //   actions: { setProp },\n  //   props,\n  // } = useNode((node) => ({\n  //   props: node.data.props,\n  // }));\n\n  return null;\n\n  // return (\n  //   <Settings\n  //     config={[\n  //       {\n  //         type: DropdownSetting,\n  //         property: \"onClickAction\",\n  //         itemsFn: () => Object.keys(game.actions),\n  //       },\n  //       {\n  //         type: StringSetting,\n  //         property: \"text\",\n  //       },\n  //     ]}\n  //     properties={props}\n  //     setProp={setProp}\n  //   />\n  // );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nconst sizes = [\n  { name: \"3\", value: 3 },\n  { name: \"4\", value: 4 },\n  { name: \"6\", value: 6 },\n];\n\nexport const GridContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return <Settings config={[]} properties={props} setProp={setProp} />;\n};\n\nexport const GridItemSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"size\",\n          itemsFn: () => sizes,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { GridContainerSettings, GridItemSettings } from \"./GridSettings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { StringSetting } from \"../../Settings\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const GridContainer = ({ children }: any) => {\n  const classes = useStyles();\n  const { refFn, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  return (\n    <Grid container ref={refFn} className={componentClassName} spacing={2}>\n      {children}\n    </Grid>\n  );\n};\n\nGridContainer.craft = {\n  props: {},\n  related: {\n    settings: GridContainerSettings,\n  },\n};\n\nexport const GridItem = ({ children, size, customStyleName }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    GridItem.baseStyle,\n    customStyles.GridItem,\n    customStyleName\n  );\n\n  return (\n    <Grid item xs={size} ref={refFn} className={componentClassName}>\n      <Paper style={style}>{children}</Paper>\n    </Grid>\n  );\n};\n\nGridItem.craft = {\n  props: { size: 6 },\n  related: {\n    settings: GridItemSettings,\n  },\n};\n\nGridItem.baseStyle = {\n  padding: \"0em\",\n  height: \"100%\",\n};\n\nGridItem.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { useNode } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Settings, StyleSetting } from \"../Settings\";\nimport { StringSetting } from \"../Settings\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSetupComponent } from \"../../config/useSetupComponent\";\nimport { useCustomStyle } from \"../../config/useCustomStyle\";\nimport { customStyles } from \"../../data/customStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children, customStyleName }: any) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { refFn, enabled, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.main],\n  });\n\n  const visible = history.location.pathname.includes(path);\n\n  const style = useCustomStyle(\n    PathContainer.baseStyle,\n    customStyles.PathContainer,\n    customStyleName\n  );\n\n  return (\n    <MUIContainer ref={refFn} className={componentClassName} style={style}>\n      {enabled && (\n        <div>\n          <div style={{ float: \"right\", height: \"0em\" }}>\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nPathContainer.styleProperties = [\n  {\n    property: \"margin\",\n    type: StringSetting,\n  },\n];\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"path\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n\nPathContainer.baseStyle = {\n  margin: \"0em\",\n};\n","import React from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { Settings } from \"../Settings\";\nimport { CustomRepeatSetting } from \"../Settings/CustomRepeatSetting\";\nimport { game } from \"../../data/game\";\nimport { Button } from \"./Button\";\nimport { useSetupComponent } from \"../../config/useSetupComponent\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport { DropdownSetting } from \"../Settings/DropdownSetting\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n  const currentContext = {\n    item: {} as any,\n    index: \"0\",\n    column: {} as any,\n  };\n\n  try {\n    for (const itemIndex in items) {\n      const item = items[itemIndex];\n      const cells = [];\n\n      currentContext.item = item;\n\n      for (const index in columnNames) {\n        const column = columnNames[index];\n\n        currentContext.index = index;\n        currentContext.column = column;\n\n        const { name } = column;\n        const itemProperty = item[column.property];\n\n        switch (column.type) {\n          case \"string\":\n            if (typeof itemProperty !== \"string\") {\n              throw new Error(\"Trying to use a non-string value as a string\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n            break;\n          case \"variableString\":\n            if (!itemProperty.data) {\n              throw new Error(\"No data function for a variableString\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n            break;\n          case \"button\":\n            if (!itemProperty.onClickAction) {\n              throw new Error(\"No onClickAcion function for a button\");\n            }\n\n            cells.push(\n              <TableCell key={name}>\n                <Button\n                  text={itemProperty.text}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClickAction={itemProperty.onClickAction}\n                  actionContext={item}\n                />\n              </TableCell>\n            );\n            break;\n        }\n      }\n\n      rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n    }\n  } catch (err) {\n    return (\n      <TableBody>\n        <TableCell>\n          <div>Table Data Error! {err.message}</div>\n          <div>Column Index: {currentContext.index}</div>\n          <div>Column Type: {currentContext.column.type}</div>\n          <div>Item Data: {JSON.stringify(currentContext.item)}</div>\n        </TableCell>\n      </TableBody>\n    );\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={refFn} className={componentClassName}>\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <Dropdown\n        value={item.type || \"\"}\n        items={[\n          { name: \"String\", value: \"string\" },\n          { name: \"Button\", value: \"button\" },\n          { name: \"Variable String\", value: \"variableString\" },\n        ]}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"itemSource\",\n          itemsFn: () => Object.keys(game.dataSources),\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const VariableTextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"dataProperty\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { StringSetting } from \"../../Settings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { VariableTextSettings } from \"./VariableTextSettings\";\n\nexport const VariableText = ({ dataProperty, customStyleName }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    VariableText.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {game.data[dataProperty] ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nVariableText.craft = {\n  props: {},\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: VariableTextSettings,\n  },\n};\n\nVariableText.baseStyle = {\n  margin: \"0em\",\n};\n\nVariableText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n","import { Element, useEditor } from \"@craftjs/core\";\nimport { store } from \"../lib/context\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\nimport { AppBar, GridContainer, GridItem, PathContainer } from \"./user\";\nimport { Button } from \"./user/Button\";\nimport { Container } from \"./user/Container\";\nimport { Text } from \"./user/Text\";\nimport { VariableText } from \"./user/VariableText\";\nimport { Table } from \"./user/Table\";\nimport { useState } from \"react\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport const Toolbox = () => {\n  const { connectors } = useEditor();\n\n  const [selectedComponent, setSelectedComponent] = useState<{\n    component: any;\n  } | null>(null);\n\n  return (\n    <>\n      <Box px={2} py={2}>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={1}\n        >\n          <Box pb={2}>\n            <Typography>Drag to add</Typography>\n            Highlight components\n            <Switch\n              checked={store.state.localSettings.highlightComponents}\n              onChange={() => {\n                store.state.localSettings.highlightComponents = !store.state\n                  .localSettings.highlightComponents;\n\n                saveLocalSettings();\n\n                store.update();\n              }}\n            />\n          </Box>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) => connectors.create(ref, <Button />)}\n              variant=\"contained\"\n              onClick={() => {\n                setSelectedComponent({ component: Button });\n              }}\n            >\n              Button\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) => connectors.create(ref, <Text text=\"Hi world\" />)}\n              variant=\"contained\"\n            >\n              Text\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) =>\n                connectors.create(\n                  ref,\n                  <Element is={Container} canvas>\n                    <Text text=\"Container\" />\n                  </Element>\n                )\n              }\n              variant=\"contained\"\n              onClick={() => {\n                setSelectedComponent({ component: Container });\n              }}\n            >\n              Container\n            </MaterialButton>\n          </Grid>\n          {/* <Grid container direction=\"column\" item>\n          <MaterialButton\n            ref={(ref) => connectors.create(ref, <Card />)}\n            variant=\"contained\"\n          >\n            Card\n          </MaterialButton>\n        </Grid> */}\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) => connectors.create(ref, <VariableText />)}\n              variant=\"contained\"\n            >\n              Variable Text\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) => connectors.create(ref, <AppBar />)}\n              variant=\"contained\"\n            >\n              App Bar\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) =>\n                connectors.create(ref, <Element is={PathContainer} canvas />)\n              }\n              variant=\"contained\"\n              onClick={() => {\n                setSelectedComponent({ component: PathContainer });\n              }}\n            >\n              Path Container\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) => connectors.create(ref, <Table />)}\n              variant=\"contained\"\n            >\n              Table\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) =>\n                connectors.create(\n                  ref,\n                  <Element is={GridContainer} canvas>\n                    <Element is={GridItem} canvas>\n                      <Text text=\"Grid Item\" />\n                    </Element>\n                    <Element is={GridItem} canvas>\n                      <Text text=\"Grid Item\" />\n                    </Element>\n                  </Element>\n                )\n              }\n              variant=\"contained\"\n            >\n              Grid Container\n            </MaterialButton>\n          </Grid>\n          <Grid container direction=\"column\" item>\n            <MaterialButton\n              ref={(ref) =>\n                connectors.create(\n                  ref,\n                  <Element is={GridItem} canvas>\n                    <Text text=\"Grid Item\" />\n                  </Element>\n                )\n              }\n              variant=\"contained\"\n              onClick={() => {\n                setSelectedComponent({ component: GridItem });\n              }}\n            >\n              Grid Item\n            </MaterialButton>\n          </Grid>\n        </Grid>\n      </Box>\n      {selectedComponent ? (\n        <BaseProperties component={selectedComponent.component} />\n      ) : null}\n    </>\n  );\n};\n\nconst propertyConfigDefinitions: {\n  [key: string]: any;\n} = {\n  margin: {\n    property: \"margin\",\n    type: StringSetting,\n  },\n  padding: {\n    property: \"padding\",\n    type: StringSetting,\n  },\n  height: {\n    property: \"height\",\n    type: StringSetting,\n  },\n};\n\nconst BaseProperties = ({ component }: any) => {\n  const { baseStyle } = component;\n\n  const config = [];\n  for (const property in baseStyle) {\n    const definition = propertyConfigDefinitions[property];\n\n    config.push(definition);\n  }\n\n  return (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                  Base Component Config\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={component.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n\n        <Settings\n          config={config}\n          properties={baseStyle}\n          setProp={(callback: (props: any) => void) => {\n            const newProps = Object.assign({}, baseStyle);\n            callback(newProps);\n            component.baseStyle = newProps;\n            store.update();\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","export const data = {\n  gameData: null as any,\n};\n","import * as allComponents from \"./index\";\n\nexport const components: any = {};\n\nfor (const componentName in allComponents) {\n  // Kinda hacky but works\n  components[componentName] = (allComponents as any)[componentName];\n}\n","import { store } from \"./context\";\nimport { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../components/user/components\";\n\nexport function saveGameData() {\n  const { editorQuery } = store;\n\n  if (!editorQuery) {\n    console.error(\"store.editorQuery not set\");\n    return;\n  }\n\n  console.debug(\"Saving game data\");\n\n  const baseStyles: any = {};\n\n  for (const componentName in components) {\n    // Kinda hacky but works\n    const component = (components as any)[componentName];\n\n    baseStyles[componentName] = component.baseStyle;\n  }\n\n  data.gameData = {\n    id: Math.random(),\n    layout: editorQuery.serialize(),\n    baseStyles,\n    customStyles,\n  };\n\n  localStorage.gameData = JSON.stringify(data.gameData);\n}\n","import { useEffect } from \"react\";\nimport { saveGameData } from \"../lib/saveGameData\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      saveGameData();\n    }, 2000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import * as baseComponents from \"../components/user\";\n\nexport const components = {};\n\n// Apply the predefined components to the full list\nObject.assign(components, baseComponents);\n","import { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../components/user/components\";\n\nfunction loadComponentProperties(baseStyles: any) {\n  for (const componentName in baseStyles) {\n    const component = components[componentName];\n    const baseStyle = baseStyles[componentName];\n\n    if (component && baseStyle) {\n      component.baseStyle = {\n        ...component.baseStyle,\n        ...baseStyle,\n      };\n    }\n  }\n}\n\nexport function loadGameData() {\n  try {\n    let storedGameData = localStorage.gameData;\n\n    if (storedGameData) {\n      storedGameData = JSON.parse(storedGameData);\n\n      if (storedGameData.baseStyles) {\n        loadComponentProperties(storedGameData.baseStyles);\n      }\n\n      if (storedGameData.customStyles) {\n        Object.assign(customStyles, storedGameData.customStyles);\n      }\n\n      data.gameData = storedGameData;\n\n      return storedGameData;\n    }\n\n    console.warn(\"No game data loaded\");\n  } catch (err) {\n    console.error(err);\n  }\n\n  data.gameData = {};\n  return null;\n}\n","import { Paper, Grid } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Toolbox } from \"../components/Toolbox\";\nimport { SettingsPanel } from \"../components/SettingsPanel\";\n\nimport { Container, Text } from \"../components/user\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"../components/AutoSave\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\nimport { HashRouter } from \"react-router-dom\";\nimport { data } from \"../data/data\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { useEffect } from \"react\";\n\nfunction Content() {\n  const { query } = useEditor();\n\n  useEffect(() => {\n    return () => {\n      saveGameData();\n    };\n  }, []);\n\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <Grid container>\n      <Grid item xs style={{ background: \"#eee\" }}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}>\n            {/*This is the default layout*/}\n            <Element is={Container} padding={5} background=\"#eee\" canvas>\n              <Text\n                text={\"Start dragging components in (and delete this one)\"}\n              />\n            </Element>\n          </Frame>\n        </HashRouter>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={undefined}>\n          <Toolbox />\n          <SettingsPanel />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function Edit() {\n  return (\n    <div>\n      <Editor resolver={components}>\n        <AutoSave />\n        <Content />\n      </Editor>\n    </div>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { components } from \"../lib/components\";\nimport { loadGameData } from \"../lib/loadGameData\";\nimport { data } from \"../data/data\";\n\nexport function Play() {\n  const history = useHistory();\n\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  useEffect(() => {\n    // If there is no game data, then switch to the editor\n    if (!data.gameData) {\n      console.error(new Error(\"No playGameData routing to /edit\"));\n      history.push(\"/edit\");\n    }\n  }, [history]);\n\n  return (\n    <div style={{ background: \"#eee\" }}>\n      <Editor resolver={components} enabled={false}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { loadGameData } from \"../lib/loadGameData\";\nimport { data } from \"../data/data\";\n\nexport function Styling() {\n  if (!data.gameData) {\n    loadGameData();\n  }\n\n  return <div>Styling</div>;\n}\n","import { Button } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context, store } from \"../lib/context\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { openStyleDrawer } from \"../actions/styleDrawer\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [updateValue, update] = useState(false);\n\n  useContext(Context);\n\n  function navigate(path: string) {\n    history.push(path);\n    update(!updateValue);\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          store.state.optionsDrawerOpen = true;\n          store.update();\n        }}\n      >\n        Options\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/edit\");\n        }}\n        variant={path.includes(\"/edit\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Edit\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/code\");\n        }}\n        variant={path.includes(\"/code\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Code\n      </Button>\n      <Button\n        onClick={() => {\n          openStyleDrawer();\n        }}\n      >\n        Styling\n      </Button>\n      <Button\n        onClick={() => {\n          saveGameData();\n          navigate(\"/play\");\n        }}\n        variant={path.includes(\"/play\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Play\n      </Button>\n      <Button\n        onClick={() => {\n          navigate(\"/documentation\");\n        }}\n        variant={path.includes(\"/documentation\") ? \"contained\" : undefined}\n        color=\"primary\"\n      >\n        Documentation\n      </Button>\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blueGrey[900],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: blueGrey[100],\n    },\n  },\n});\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\n// import { useHistory } from \"react-router-dom\";\nimport { store } from \"../lib/context\";\nimport { useState } from \"react\";\n\nconst ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameData = {\n    gameData: localStorage.gameData,\n    gameCode: localStorage.gameCode,\n  };\n\n  const [allGameData, setAllGameData] = useState(\n    btoa(JSON.stringify(currentAllGameData))\n  );\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Import or export game data\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameData}\n          onChange={(event) => {\n            setAllGameData(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameData));\n            localStorage.gameData = data.gameData;\n            localStorage.gameCode = data.gameCode;\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const OptionsDrawer = () => {\n  // const history = useHistory();\n\n  const [showImportExprt, setShowImportExport] = useState(false);\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.optionsDrawerOpen}\n        onClose={() => {\n          store.state.optionsDrawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              delete localStorage.gameData;\n              delete localStorage.gameCode;\n              window.location.reload();\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Reset All\"\n              secondary=\"Reset all game configuration\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            onClick={() => {\n              setShowImportExport(true);\n            }}\n          >\n            <ListItemIcon>\n              <ImportExportIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Import / Export\"\n              secondary=\"Import or export your game data\"\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n    </div>\n  );\n};\n","import { Box, Button, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { useEffect, useState } from \"react\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { customStyles } from \"../data/customStyles\";\nimport { Dropdown } from \"./Controls/Dropdown\";\nimport * as components from \"./user\";\nimport { v4 as uuid } from \"uuid\";\nimport { closeStyleDrawer } from \"../actions/styleDrawer\";\n\nconst supportedComponents: any = {\n  [components.Button.name]: components.Button,\n  [components.PathContainer.name]: components.PathContainer,\n  [components.GridItem.name]: components.GridItem,\n  [components.Text.name]: components.Text,\n  [components.VariableText.name]: components.VariableText,\n};\n\nexport const StyleDrawer = () => {\n  const [selectedComponent, setSelectedComponent] = useState(\n    store.state.localSettings.styleDrawerComponentName\n  );\n  const [selectedStyle, setSelectedStyle] = useState(\n    store.state.localSettings.styleDrawerStyleId\n  );\n  console.log(\n    store.state.localSettings.styleDrawerComponentName,\n    selectedComponent,\n    selectedStyle\n  );\n  // useEffect(() => {\n  //   if (store.state.localSettings.styleDrawerComponentName) {\n  //     setSelectedComponent(store.state.localSettings.styleDrawerComponentName);\n  //     setSelectedStyle(store.state.localSettings.styleDrawerStyleId);\n  //   }\n  // }, []);\n\n  let component: any = null;\n  if (selectedComponent) {\n    component = customStyles[selectedComponent];\n    console.log(supportedComponents[selectedComponent]);\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.localSettings.styleDrawerOpen}\n        onClose={() => {\n          closeStyleDrawer();\n        }}\n        anchor=\"right\"\n        BackdropProps={{ invisible: true }}\n      >\n        <div style={{ padding: \"1em\" }}>\n          <Typography variant=\"h4\">Style Components</Typography>\n          <Dropdown\n            value={selectedComponent}\n            items={Object.keys(supportedComponents)}\n            label=\"Component\"\n            onChange={(event: any) => {\n              customStyles[event.target.value] =\n                customStyles[event.target.value] || {};\n\n              setSelectedComponent(event.target.value);\n              setSelectedStyle(\"\");\n            }}\n          />\n          {component && (\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box flexGrow={1}>\n                <Dropdown\n                  value={selectedStyle}\n                  items={Object.keys(component).map((id) => ({\n                    value: id,\n                    name: component[id]._name,\n                  }))}\n                  label=\"Styles\"\n                  onChange={(event: any) => {\n                    setSelectedStyle(event.target.value);\n                  }}\n                />\n              </Box>\n              <Box>\n                <Button\n                  onClick={(event) => {\n                    const id = uuid();\n\n                    component[id] = {\n                      _name: `New Style ${Object.keys(component).length + 1}`,\n                    };\n\n                    setSelectedStyle(id);\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Style\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {component && selectedStyle && (\n            <>\n              <Settings\n                config={[\n                  {\n                    property: \"_name\",\n                    type: StringSetting,\n                  },\n                  ...supportedComponents[selectedComponent].styleProperties,\n                ]}\n                properties={component[selectedStyle]}\n                setProp={(callback: (props: any) => void) => {\n                  // Important to assign it a new Id\n                  const newProps = Object.assign({}, component[selectedStyle], {\n                    customId: Math.random(),\n                  });\n                  callback(newProps);\n                  component[selectedStyle] = newProps;\n\n                  store.update();\n                }}\n              />\n              <Button\n                onClick={(event) => {\n                  const styleIds = Object.keys(component);\n                  const index = styleIds.indexOf(selectedStyle);\n\n                  let nextStyle = \"\";\n\n                  delete component[selectedStyle];\n\n                  if (index > 0) {\n                    nextStyle = styleIds[index - 1];\n                  } else if (styleIds.length) {\n                    nextStyle = styleIds[1];\n                  }\n\n                  setSelectedStyle(nextStyle);\n                }}\n                variant=\"contained\"\n              >\n                Delete Style\n              </Button>\n            </>\n          )}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./lib/log\";\nimport { Edit, Play, Code, Documentation, Styling } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { theme } from \"./config/theme\";\nimport { executeCode, setUpdateUIFunction } from \"./data/game\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\nimport { StyleDrawer } from \"./components/StyleDrawer\";\nimport { loadLocalSettings } from \"./lib/localSettings\";\n\nloadLocalSettings();\n\nexport default class App extends Component {\n  componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n\n    setUpdateUIFunction(store.update);\n    executeCode();\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Context.Provider\n          value={{\n            state: store.state,\n            update: this.update,\n            editorQuery: store.editorQuery,\n          }}\n        >\n          <BrowserRouter basename=\"/idling-engine\">\n            <div>\n              <OptionsDrawer />\n              <StyleDrawer />\n              <Header />\n              <Switch>\n                <Route\n                  path=\"/edit\"\n                  render={() => {\n                    return <Edit />;\n                  }}\n                />\n                <Route\n                  path=\"/code\"\n                  render={() => {\n                    return <Code />;\n                  }}\n                />\n                <Route\n                  path=\"/styling\"\n                  render={() => {\n                    return <Styling />;\n                  }}\n                />\n                <Route\n                  path=\"/play\"\n                  render={() => {\n                    return <Play />;\n                  }}\n                />\n                <Route\n                  path=\"/documentation\"\n                  render={() => {\n                    return <Documentation />;\n                  }}\n                />\n                <Route path=\"/\">\n                  <Redirect to=\"/edit\" />\n                </Route>\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </Context.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
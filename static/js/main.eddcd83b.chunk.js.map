{"version":3,"sources":["data/game.ts","data/data.ts","lib/dataStorage.ts","lib/log.ts","lib/context.ts","data/initial/code.ts","lib/localSettings.ts","data/customStyles.ts","config/useSetupComponent.ts","data/documentation.ts","data/components.ts","lib/saveGameData.ts","views/Code.tsx","views/Documentation/Breadcrumbs.tsx","views/Documentation/components-md.ts","views/Documentation/index.tsx","views/Documentation/index-md.ts","components/Settings/CustomRepeatSetting.ts","components/Controls/Dropdown.tsx","components/Settings/DropdownSetting.tsx","components/Settings/StringSetting.tsx","actions/styleDrawer.ts","components/Settings/StyleSetting.tsx","components/Settings/index.tsx","components/Toolbox/getToolboxComponents.tsx","components/Toolbox/index.tsx","components/SettingsPanel.tsx","components/Settings/SwitchSetting.tsx","components/CustomComponents/AppBar/AppBarDocumentation.ts","components/CustomComponents/AppBar/ToolBarTabs.tsx","components/CustomComponents/AppBar/index.tsx","config/useCustomStyle.ts","components/CustomComponents/Button/ButtonDocumentation.ts","components/CustomComponents/Button/index.tsx","components/CustomComponents/Button/ButtonSettings.tsx","components/CustomComponents/Text/TextSettings.tsx","components/CustomComponents/Text/TextDocumentation.ts","components/CustomComponents/Text/index.tsx","components/CustomComponents/Card/index.tsx","lib/checkVisibility.ts","components/CustomComponents/Container/ContainerDocumentation.ts","components/CustomComponents/Container/index.tsx","components/CustomComponents/Container/ContainerSettings.tsx","components/CustomComponents/Grid/GridSettings.tsx","components/CustomComponents/Grid/GridContainerDocumentation.ts","components/CustomComponents/Grid/GridItemDocumentation.ts","components/CustomComponents/Grid/index.tsx","components/CustomComponents/PathContainer/PathContainerDocumentation.ts","components/CustomComponents/PathContainer/index.tsx","components/CustomComponents/Table/TableDocumentation.ts","components/CustomComponents/Table/index.tsx","components/CustomComponents/VariableText/VariableTextSettings.tsx","components/CustomComponents/VariableText/VariableTextDocumentation.ts","components/CustomComponents/VariableText/index.tsx","views/Edit/AutoSave.tsx","styles/shared.ts","views/Edit/index.tsx","views/Play.tsx","components/Header.tsx","config/theme.ts","components/OptionsDrawer/ImportExportDialog.tsx","components/OptionsDrawer/ConfirmResetDialog.tsx","config/useUpdate.ts","components/OptionsDrawer/CustomComponentsDialog.tsx","components/OptionsDrawer/index.tsx","components/StyleDrawer.tsx","lib/loadGameData.ts","App.tsx","index.tsx"],"names":["setUpdateUIFunction","fn","game","update","settings","tickInterval","data","actions","conditionals","dataSources","visibilitySources","configure","console","log","isInitialized","isGameDataInitialized","_initialize","loadedGameData","_initializeGameData","this","tick","currentTimeout","setTimeout","err","error","executeCode","files","gameData","codeFiles","finalCode","file","code","lines","split","numberWidth","Math","floor","length","map","line","index","toString","padEnd","join","clearTimeout","eval","dataStorage","get","initialize","message","setInterval","set","window","customComponents","key","defaultValue","localStorage","JSON","parse","value","stringify","LogLevels","DEBUG","INFO","WARN","ERROR","c","co","logLevels","logLevel","debug","args","info","warn","store","state","localSettings","highlightComponents","previousHighlightComponents","styleDrawerOpen","styleDrawerComponentName","styleDrawerStyleId","lastCodeFile","optionsDrawerOpen","editorQuery","Context","React","createContext","initialCode","saveLocalSettings","customStyles","useSharedStyles","makeStyles","theme","componentEditing","boxShadow","minHeight","minWidth","padding","componentSelected","componentClass","editing","selected","sharedClasses","additonalClasses","useSetupComponent","properties","additionalClasses","useContext","useNode","events","connectors","connect","drag","useEditor","enabled","options","componentClassName","refFn","ref","documentation","components","component","componentName","registerCustomComponent","Component","addComponent","saveGameData","baseStyles","baseStyle","layout","serialize","id","random","useStyles","fileName","fontSize","typography","Code","history","useHistory","classes","useState","updateValue","deletingFiles","setDeletingFiles","selectedFiles","setSelectedFiles","save","deleteFiles","newFiles","setFiles","filter","item","addFile","name","push","uuid","useEffect","interval","clearInterval","Grid","container","style","position","height","width","sm","List","dense","overflowY","top","bottom","location","pathname","includes","ListItem","cursor","onClick","newSelectedFiles","handleFileClick","ListItemIcon","ListItemText","primary","TextField","onChange","event","target","size","inputProps","className","Divider","button","checked","secondary","background","path","render","mode","editorProps","$blockScrolling","tabSize","commands","beautify","focus","to","Breadcrumbs","parts","cumulativePath","aria-label","part","pathPart","getComponents","Object","keys","renderers","link","props","href","children","paper","Documentation","Paper","basename","match","params","plugins","md","CustomRepeatSetting","items","Dropdown","label","itemElements","MenuItem","labelElement","InputLabel","shrink","FormControl","fullWidth","Select","DropdownSetting","property","itemsFn","setProp","Box","display","alignItems","flexGrow","IconButton","StringSetting","openStyleDrawer","styleId","StyleSetting","styleName","variant","Settings","config","settingsRows","Error","configItem","remainingProps","TableRow","TableCell","scope","type","TableContainer","TableBody","getToolboxComponents","reduce","acc","toolboxItem","Toolbox","selectedComponent","setSelectedComponent","px","py","direction","justify","spacing","pb","Typography","Switch","selectNode","propertyConfigDefinitions","margin","BaseProperties","definition","mt","xs","Chip","color","callback","newProps","assign","SettingsPanel","query","currentNodeId","nodes","related","isDeletable","node","createElement","delete","SwitchSetting","AppBarDocumentation","ToolBarTabs","tabs","defaultTab","tab","default","parseInt","getCurrentTab","currentTabIndex","Tabs","visibilitySource","root","spacer","fullHeight","mixins","toolbar","AppBar","Toolbar","craft","triggerUpdate","setDefault","create","useCustomStyle","base","styleGroup","customStyleName","setStyle","customStyle","customId","ButtonDocumentation","Button","text","onClickAction","actionContext","action","styleProperties","TextDocumentation","Text","rules","canDrag","CardTop","CardContent","CardBottom","CardActions","canMoveIn","incomingNode","checkVisibility","extraStyle","opacity","ContainerDocumentation","Container","is","canvas","sizes","GridContainerDocumentation","GridItemDocumentation","GridContainer","GridItem","PathContainerDocumentation","main","PathContainer","visible","float","TableDocumentation","TableRows","columnNames","rows","currentContext","column","itemIndex","cells","itemProperty","Table","itemSource","headerRow","itemSourceFunction","TableHead","ColumnSetting","marginBottom","updateVariable","updateVarible","VariableTextDocumentation","VariableText","dataProperty","subProperty","undefined","AutoSave","gameArea","Content","right","Edit","resolver","Play","Header","navigate","createMuiTheme","palette","blueGrey","ImportExportDialog","onClose","currentAllGameData","btoa","allGameData","setAllGameData","Dialog","open","DialogTitle","DialogContent","DialogContentText","multiline","DialogActions","atob","reload","ConfirmResetDialog","useUpdate","CustomComponent","icon","status","ok","indexOf","splice","url","CustomComponentsDialog","newComponentUrl","setNewComponentUrl","checkComponent","Promise","accept","a","axios","result","response","requests","all","OptionsDrawer","showImportExprt","setShowImportExport","showConfirmReset","setShowConfirmReset","showCustomComponents","setShowCustomComponents","Drawer","initializeGameData","packageJson","version","supportedComponents","StyleDrawer","selectedStyle","updateSettings","anchor","BackdropProps","invisible","styleIds","nextStyle","initialGameData","loadGameData","storedGameData","loadComponentProperties","App","customComponentsLoaded","setState","loadingPromises","errors","customComponent","p","resolve","s","document","src","onload","onerror","head","append","ThemeProvider","CssBaseline","Provider","flexDirection","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.eddcd83b.chunk.js","sourcesContent":["import { dataStorage } from \"../lib/dataStorage\";\nimport { data } from \"./data\";\n\ninterface AnyObject {\n  [key: string]: any;\n}\n\nexport function setUpdateUIFunction(fn: any) {\n  game.update = fn;\n}\n\nexport const game = {\n  // Settings\n  settings: {\n    tickInterval: 1000,\n  },\n\n  // Data\n  data: {} as AnyObject,\n\n  // Actions\n  actions: {} as AnyObject,\n\n  // Conditionals\n  conditionals: {} as AnyObject,\n\n  // Data sources\n  dataSources: {} as AnyObject,\n\n  // Visibility sources\n  visibilitySources: {} as AnyObject,\n\n  // Configure\n  configure: (settings: AnyObject) => {\n    console.log(\"game.configure not defined\");\n  },\n\n  // Initialize\n  isInitialized: false,\n  isGameDataInitialized: false,\n\n  _initialize: (loadedGameData: any) => {\n    console.log(\"game.initialize not defined\");\n  },\n\n  _initializeGameData: () => {\n    console.log(\"game.initializeGameData not defined\");\n  },\n\n  get initialize() {\n    return this._initialize;\n  },\n\n  set initialize(fn) {\n    this._initialize = (loadedGameData: any) => {\n      console.log(\"Initializing Game\");\n      this.isInitialized = true;\n      fn(loadedGameData);\n    };\n  },\n\n  get initializeGameData() {\n    return this._initializeGameData;\n  },\n\n  set initializeGameData(fn) {\n    this._initializeGameData = () => {\n      console.log(\"Initializing Game Data\");\n      this.isInitialized = true;\n      fn();\n    };\n  },\n\n  // Tick\n  tick: () => {\n    console.log(\"game.tick not defined\");\n  },\n\n  // Update\n  update: () => {\n    console.log(\"game.update not defined\");\n  },\n};\n\nlet currentTimeout: any = null;\n\n// Tick\nfunction tick() {\n  currentTimeout = setTimeout(() => {\n    try {\n      game.tick();\n    } catch (err) {\n      console.error(err);\n    }\n    tick();\n  }, game.settings.tickInterval);\n}\n\nexport function executeCode() {\n  const files: any = data.gameData.codeFiles;\n\n  let finalCode = \"\";\n  for (const file of files) {\n    finalCode += file.code + \"\\n\\n\";\n  }\n\n  const lines = finalCode.split(\"\\n\");\n  const numberWidth = Math.floor(Math.log(lines.length));\n\n  console.log(\n    lines\n      .map((line, index) => {\n        const numberedLine = `${(index + 1)\n          .toString()\n          .padEnd(numberWidth)} ${line}`;\n        return numberedLine;\n      })\n      .join(\"\\n\")\n  );\n\n  try {\n    // Stop anything currently executing\n    if (currentTimeout) {\n      clearTimeout(currentTimeout);\n    }\n\n    // eslint-disable-next-line no-eval\n    eval(finalCode);\n\n    let loadedGameData = dataStorage.get(\"savedGameData\", {});\n\n    console.log(\"loadedGameData\", loadedGameData);\n\n    if (!game.isInitialized) {\n      game.initialize(loadedGameData);\n    }\n\n    game.configure(game.settings);\n\n    tick();\n  } catch (err) {\n    err.message = \"GAME SCRIPT ERROR: \" + err.message;\n    console.error(err);\n  }\n}\n\nsetInterval(() => {\n  dataStorage.set(\"savedGameData\", game.data);\n}, 5000);\n\n(window as any).game = game;\n","export const data = {\n  gameData: null as any,\n  customComponents: [] as any[],\n};\n","class DataStorage {\n  get(key: string, defaultValue?: any) {\n    return localStorage[key] ? JSON.parse(localStorage[key]) : defaultValue;\n  }\n\n  set(key: string, value: any) {\n    localStorage[key] = JSON.stringify(value);\n  }\n\n  delete(key: string) {\n    delete localStorage[key];\n  }\n}\n\nexport const dataStorage = new DataStorage();\n","// Mutate console for better logging\n\nconst LogLevels = {\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n};\n\nconst c = console as any;\nconst co = { ...console };\n\nc.logLevels = LogLevels;\nc.logLevel = LogLevels.DEBUG;\n\nc.debug = (...args: any) => {\n  if (c.logLevel <= LogLevels.DEBUG) {\n    co.debug(\"DEBUG\", ...args);\n  }\n};\n\nc.info = (...args: any) => {\n  if (c.logLevel <= LogLevels.INFO) {\n    co.info(\"INFO\", ...args);\n  }\n};\n\nc.warn = (...args: any) => {\n  if (c.logLevel <= LogLevels.WARN) {\n    co.warn(\"WARN\", ...args);\n  }\n};\n\nc.error = (...args: any) => {\n  if (c.logLevel <= LogLevels.ERROR) {\n    co.error(\"ERROR\", ...args);\n  }\n};\n\nexport default console;\n","import React from \"react\";\n\nexport const store = {\n  state: {\n    localSettings: {\n      highlightComponents: true,\n      previousHighlightComponents: true,\n      styleDrawerOpen: false,\n      styleDrawerComponentName: \"\",\n      styleDrawerStyleId: \"\",\n      lastCodeFile: \"\",\n    },\n    optionsDrawerOpen: false,\n  },\n  editorQuery: null as any,\n  update: () => {\n    console.log(\"Update function not defined\");\n  },\n};\n\nexport const Context = React.createContext(store);\n\n(window as any).store = store;\n","const main = `\n\n// You may wish to move each of the following to its own file\n\ngame.configure = (settings) => {\n  // Update any game settings here\n  // settings.tickInterval = 5000\n}\n\ngame.initialize = (loadedGameData) => {\n  // Code executed when the application starts up\n  game.data = new GameData(loadedGameData);\n}\n\ngame.initializeGameData = () => {\n  // Code executed when the resetting the game data\n  game.data = new GameData({});\n  game.update();\n}\n\ngame.tick = () => {\n  // The main function to handle game logic\n};\n\n// Define actions using game.actions ...\n// Define conditionals using game.conditionals ...\n\ngame.actions.buttonClick = () => {\n  game.data.counter++;\n  game.update();\n}\n`;\n\nconst gameData = `\n\nclass GameData {\n  constructor(data) {\n    this._updateData(data);\n\n    // Set the data\n    for (const property in data) {\n      this[property] = data[property];\n    }\n  }\n\n  _updateData() {\n    // Use this to update game data as changes are made\n    if (!this.counter) {\n      this.counter = 0;\n    }\n  }\n\n  // Can use getters as well for use with variableText\n}\n`;\n\nexport const initialCode = {\n  main,\n  gameData,\n};\n","import { store } from \"./context\";\nimport { dataStorage } from \"./dataStorage\";\n\nexport function loadLocalSettings() {\n  store.state.localSettings = dataStorage.get(\"localSettings\", undefined);\n}\n\nexport function saveLocalSettings() {\n  dataStorage.set(\"localSettings\", store.state.localSettings);\n}\n","export const customStyles: {\n  [key: string]: any;\n} = {};\n","import { useEditor, useNode } from \"@craftjs/core\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Context, store } from \"../lib/context\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  componentEditing: {\n    boxShadow: \"inset 0em 0em 0em 2px rgba(255, 50, 50, 1)\",\n    minHeight: \"5px\",\n    minWidth: \"5px\",\n    padding: \"10px!important\",\n  },\n  componentSelected: {\n    boxShadow: \"inset 0em 0em 0em 2px green\",\n  },\n}));\n\nfunction componentClass(\n  editing: boolean,\n  selected: boolean,\n  sharedClasses: any,\n  additonalClasses: string[] = []\n) {\n  return [\n    ...additonalClasses,\n    editing && store.state.localSettings.highlightComponents\n      ? sharedClasses.componentEditing\n      : \"\",\n    selected ? sharedClasses.componentSelected : \"\",\n  ].join(\" \");\n}\n\ntype Properties = {\n  additionalClasses?: string[];\n};\n\nexport function useSetupComponent(properties: Properties = {}) {\n  const { additionalClasses = [] } = properties;\n\n  const store = useContext(Context);\n\n  const {\n    connectors: { connect, drag },\n    selected,\n  } = useNode((state: any) => ({\n    selected: state.events.selected,\n  }));\n\n  const { enabled } = useEditor((state: any) => ({\n    enabled: state.options.enabled,\n  }));\n\n  const sharedClasses = useSharedStyles();\n  const componentClassName = componentClass(\n    enabled,\n    selected,\n    sharedClasses,\n    additionalClasses\n  );\n\n  const refFn = (ref: any) => connect(drag(ref));\n\n  return {\n    refFn,\n    // connect,\n    // drag,\n    selected,\n    enabled,\n    // sharedClasses,\n    componentClassName,\n    store,\n  };\n}\n","class Documentation {\n  components: any = {};\n\n  addComponent(component: any) {\n    this.components[component.componentName] = {\n      componentName: component.componentName,\n      component,\n    };\n  }\n}\n\nexport const documentation = new Documentation();\n","import { useSetupComponent } from \"../config/useSetupComponent\";\nimport { documentation } from \"./documentation\";\n\nexport const components: any = {};\n\nexport function registerCustomComponent(Component: any) {\n  console.log(`Registering custom component ${Component.componentName}`);\n  components[Component.componentName] = Component;\n\n  documentation.addComponent(Component);\n}\n\n(window as any).registerCustomComponent = registerCustomComponent;\n\n(window as any).useSetupComponent = useSetupComponent;\n","import { store } from \"./context\";\nimport { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../data/components\";\nimport { dataStorage } from \"./dataStorage\";\n\nexport function saveGameData() {\n  const { editorQuery } = store;\n\n  if (!editorQuery) {\n    console.error(\"store.editorQuery not set\");\n    return;\n  }\n\n  console.debug(\"Saving game data\");\n\n  const baseStyles: any = {};\n\n  for (const componentName in components) {\n    // Kinda hacky but works\n    const component = (components as any)[componentName];\n\n    baseStyles[componentName] = component.baseStyle;\n  }\n\n  // Layout is a string\n  let layout = editorQuery.serialize();\n\n  // If this condition matches, then there was some error\n  if (layout === \"{}\") {\n    layout = null;\n  }\n\n  data.gameData = {\n    id: Math.random(),\n    layout,\n    baseStyles,\n    customStyles,\n    customComponents: data.customComponents,\n    codeFiles: data.gameData.codeFiles,\n  };\n\n  dataStorage.set(\"gameData\", data.gameData);\n}\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport beautify from \"ace-builds/src-noconflict/ext-beautify\";\n\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Switch as MUISwitch,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { data } from \"../data/data\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context, store } from \"../lib/context\";\nimport { executeCode, game } from \"../data/game\";\nimport { v4 as uuid } from \"uuid\";\nimport { initialCode } from \"../data/initial/code\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\nimport { saveGameData } from \"../lib/saveGameData\";\n\n// let files: any[] = [];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  fileName: {\n    fontSize: theme.typography.fontSize,\n  },\n}));\n\nexport function Code() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [updateValue, update] = useState(false);\n  const [deletingFiles, setDeletingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles]: [any, any] = useState({});\n  useContext(Context);\n\n  let files = data.gameData.codeFiles;\n\n  function save() {\n    saveGameData();\n  }\n\n  function setFiles(newFiles: string[]) {\n    files = newFiles;\n    data.gameData.codeFiles = newFiles;\n  }\n\n  function handleFileClick(id: string, index: number) {\n    if (deletingFiles) {\n      const newSelectedFiles = { ...selectedFiles };\n      newSelectedFiles[index] = !newSelectedFiles[index];\n      setSelectedFiles(newSelectedFiles);\n      // update(!updateValue);\n    } else {\n      store.state.localSettings.lastCodeFile = id;\n      saveLocalSettings();\n      history.push(`/code/${id}`);\n    }\n  }\n\n  function deleteFiles() {\n    const newFiles = files.filter((item: any, index: number) => {\n      return !selectedFiles[index];\n    });\n\n    setFiles(newFiles);\n    setSelectedFiles({});\n  }\n\n  function addFile(name: string, code: string) {\n    files.push({\n      id: uuid(),\n      name,\n      code,\n    });\n  }\n\n  // Did mount / unmount\n  useEffect(() => {\n    const interval = setInterval(() => {\n      save();\n    }, 1000);\n\n    return () => {\n      // Update the code when navigating away\n      clearInterval(interval);\n      save();\n      executeCode();\n      game.initialize(game.data);\n    };\n  }, []);\n\n  if (files.length === 0) {\n    addFile(\"main\", \"//main\\n\" + initialCode.main);\n    addFile(\"gameData\", \"//gameData\\n\" + initialCode.gameData);\n  }\n\n  return (\n    <Grid\n      container\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      <Grid item sm={2} style={{ position: \"relative\" }}>\n        <List\n          dense={true}\n          style={{\n            overflowY: \"auto\",\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"0px\",\n            bottom: \"0px\",\n          }}\n        >\n          {files.map((file: any, index: number) => {\n            const selected = history.location.pathname.includes(file.id);\n\n            return (\n              <ListItem\n                key={file.id}\n                style={{ cursor: \"pointer\" }}\n                selected={selected}\n                onClick={() => {\n                  handleFileClick(file.id, index);\n                }}\n              >\n                {deletingFiles && (\n                  <ListItemIcon>\n                    {selectedFiles[index] ? (\n                      <CheckBoxIcon />\n                    ) : (\n                      <CheckBoxOutlineBlankIcon />\n                    )}\n                  </ListItemIcon>\n                )}\n                {selected ? (\n                  <ListItemText\n                    primary={\n                      <TextField\n                        value={file.name}\n                        onChange={(event) => {\n                          file.name = event.target.value;\n                          update(!updateValue);\n                        }}\n                        size=\"small\"\n                        inputProps={{ className: classes.fileName }}\n                      />\n                    }\n                  />\n                ) : (\n                  <ListItemText primary={file.name} />\n                )}\n              </ListItem>\n            );\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              const name = `New File ${files.length}`;\n\n              addFile(name, `//${name}`);\n\n              update(!updateValue);\n            }}\n          >\n            <ListItemText primary=\"+ New File\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemText primary=\"Delete Files\" />\n            <MUISwitch\n              onChange={(event) => {\n                if (deletingFiles) {\n                  deleteFiles();\n                }\n\n                setDeletingFiles(event.target.checked);\n              }}\n              checked={deletingFiles}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary=\"Beautify\" secondary=\"Ctrl + Shift + B\" />\n          </ListItem>\n        </List>\n      </Grid>\n      <Grid item sm={10} style={{ background: \"red\", position: \"relative\" }}>\n        <Switch>\n          {files.map((file: any) => {\n            return (\n              <Route\n                key={file.id}\n                path={`/code/${file.id}`}\n                render={() => {\n                  return (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        top: \"0px\",\n                        bottom: \"0px\",\n                      }}\n                    >\n                      <AceEditor\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        onChange={(code: string) => {\n                          file.code = code;\n                        }}\n                        name=\"Code Editor\"\n                        editorProps={{ $blockScrolling: true }}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          fontSize: \"1.1em\",\n                        }}\n                        value={file.code}\n                        tabSize={2}\n                        commands={beautify.commands}\n                        focus\n                      />\n                    </div>\n                  );\n                }}\n              />\n            );\n          })}\n          <Route path=\"/code\">\n            <Redirect to={`/code/${files[0].id}`} />\n          </Route>\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Breadcrumbs as MUIBreadcrumbs } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport function Breadcrumbs({ parts }: any) {\n  let cumulativePath: any[] = [];\n\n  return (\n    <MUIBreadcrumbs aria-label=\"breadcrumb\">\n      {parts.map((part: any, index: number) => {\n        const [name, pathPart] = part;\n\n        if (pathPart) {\n          cumulativePath.push(pathPart);\n        }\n\n        // if (index < parts.length) {\n        return (\n          <Link\n            key={cumulativePath.join(\"\")}\n            to={`/${cumulativePath.join(\"/\")}`}\n          >\n            {name}\n          </Link>\n        );\n        // }\n\n        // return <Typography color=\"textPrimary\">{name}</Typography>;\n      })}\n    </MUIBreadcrumbs>\n  );\n}\n","import { documentation } from \"../../data/documentation\";\n\nexport function getComponents() {\n  const componentsDocs = Object.keys(documentation.components).map(\n    (componentName) => {\n      const component = documentation.components[componentName];\n\n      return `[${component.componentName}](/components/${component.componentName})`;\n    }\n  );\n\n  return componentsDocs;\n}\n\nexport default function components() {\n  return `\n# Components\n${getComponents().join(\"\\n\\n\")}\n`;\n}\n","import { Container, makeStyles, Paper } from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { documentation } from \"../../data/documentation\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport index from \"./index-md\";\nimport components from \"./components-md\";\n\nconst renderers = {\n  link: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>;\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"1em\",\n  },\n}));\n\nexport function Documentation() {\n  const classes = useStyles();\n\n  console.log(\"Documentation render\");\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <BrowserRouter basename=\"/idling-engine/documentation\">\n          <div className=\"markdown-container\">\n            {/*Components*/}\n            <Switch>\n              <Route\n                path=\"/components/:componentName\"\n                render={(history) => {\n                  const { component } = documentation.components[\n                    history.match.params.componentName\n                  ];\n\n                  return (\n                    <>\n                      <Breadcrumbs\n                        parts={[\n                          [\"Documentation\", \"\"],\n                          [\"Components\", \"components\"],\n                          [component.componentName, component.componentName],\n                        ]}\n                      />\n                      <ReactMarkdown\n                        plugins={[]}\n                        children={component.documentation.md}\n                        renderers={renderers}\n                      />\n                    </>\n                  );\n                }}\n              />\n              <Route\n                path=\"/components\"\n                render={() => (\n                  <>\n                    <Breadcrumbs\n                      parts={[\n                        [\"Documentation\", \"\"],\n                        [\"Components\", \"components\"],\n                      ]}\n                    />\n                    <ReactMarkdown\n                      plugins={[]}\n                      children={components()}\n                      renderers={renderers}\n                    />\n                  </>\n                )}\n              />\n              {/*Index*/}\n              <Route\n                path=\"/\"\n                render={() => (\n                  <>\n                    <Breadcrumbs parts={[[\"Documentation\", \"\"]]} />\n                    <ReactMarkdown\n                      plugins={[]}\n                      children={index()}\n                      renderers={renderers}\n                    />\n                  </>\n                )}\n              />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Paper>\n    </Container>\n  );\n}\n","import { getComponents } from \"./components-md\";\n\nexport default function index() {\n  return `\n# Idling Engine\n\n## Components\n${getComponents().join(\"\\n\\n\")}\n  `;\n}\n","export const CustomRepeatSetting = ({ component, items }: any) => {\n  return items.map((item: any, index: number) => {\n    return component(item, index);\n  });\n};\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport const Dropdown = ({ value, items, label, onChange }: any) => {\n  const itemElements = [];\n\n  for (const item of items) {\n    let name = \"\";\n    let value = null;\n\n    if (typeof item === \"string\") {\n      name = item;\n      value = item;\n    } else {\n      name = item.name;\n      value = item.value;\n    }\n\n    itemElements.push(\n      <MenuItem key={name} value={value}>\n        {name}\n      </MenuItem>\n    );\n  }\n\n  let labelElement = null;\n  if (label) {\n    labelElement = <InputLabel shrink>{label}</InputLabel>;\n  }\n\n  return (\n    <FormControl fullWidth>\n      {labelElement}\n      <Select value={value || \"\"} onChange={onChange}>\n        {itemElements}\n      </Select>\n    </FormControl>\n  );\n};\n","import { Box, IconButton } from \"@material-ui/core\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\ninterface Props {\n  property: any;\n  value: any;\n  itemsFn: () => { name: string; value: any }[];\n  setProp: any;\n}\n\nexport const DropdownSetting = ({\n  property,\n  value,\n  itemsFn,\n  setProp,\n}: Props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={itemsFn()}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\n\nexport const StringSetting = ({ property, value, setProp }: any) => {\n  return (\n    <TextField\n      fullWidth\n      value={value || \"\"}\n      onChange={(event: any) => {\n        setProp((props: any) => {\n          props[property] = event.target.value;\n        });\n      }}\n    />\n  );\n};\n","import { customStyles } from \"../data/customStyles\";\nimport { store } from \"../lib/context\";\nimport { saveLocalSettings } from \"../lib/localSettings\";\n\nexport function openStyleDrawer(options: any = {}) {\n  store.state.localSettings.styleDrawerOpen = true;\n  store.state.localSettings.previousHighlightComponents =\n    store.state.localSettings.highlightComponents;\n  store.state.localSettings.highlightComponents = false;\n\n  if (options.componentName) {\n    store.state.localSettings.styleDrawerComponentName = options.componentName;\n    store.state.localSettings.styleDrawerStyleId = options.styleId || \"\";\n\n    customStyles[options.componentName] =\n      customStyles[options.componentName] || {};\n  }\n\n  saveLocalSettings();\n\n  store.update();\n}\n\nexport function closeStyleDrawer() {\n  store.state.localSettings.styleDrawerOpen = false;\n  store.state.localSettings.highlightComponents =\n    store.state.localSettings.previousHighlightComponents;\n\n  saveLocalSettings();\n\n  store.update();\n}\n","import { Box, Button, IconButton } from \"@material-ui/core\";\nimport { customStyles } from \"../../data/customStyles\";\nimport { Dropdown } from \"../Controls/Dropdown\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { openStyleDrawer } from \"../../actions/styleDrawer\";\n\ninterface Props {\n  property: any;\n  value: any;\n  componentName: string;\n  setProp: any;\n}\n\nexport const StyleSetting = ({\n  property,\n  value,\n  componentName,\n  setProp,\n}: Props) => {\n  if (\n    !customStyles[componentName] ||\n    Object.keys(customStyles[componentName]).length === 0\n  ) {\n    return (\n      <Button\n        fullWidth\n        variant=\"contained\"\n        onClick={() => {\n          openStyleDrawer({\n            componentName,\n          });\n        }}\n      >\n        Define a Style\n      </Button>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\">\n      <Box flexGrow={1}>\n        <Dropdown\n          value={value || \"\"}\n          items={Object.keys(customStyles[componentName]).map((id) => ({\n            value: id,\n            name: customStyles[componentName][id].styleName,\n          }))}\n          onChange={(event: any) => {\n            setProp((props: any) => (props[property] = event.target.value));\n          }}\n        />\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setProp((props: any) => (props[property] = null));\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </Box>\n      <Box>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            openStyleDrawer({\n              componentName,\n              styleId: value,\n            });\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport { CustomRepeatSetting } from \"./CustomRepeatSetting\";\nexport { DropdownSetting } from \"./DropdownSetting\";\nexport { SliderSetting } from \"./SliderSetting\";\nexport { StringSetting } from \"./StringSetting\";\nexport { StyleSetting } from \"./StyleSetting\";\n\nexport const Settings = ({ config, properties, setProp }: any) => {\n  const settingsRows = [];\n\n  if (!properties) {\n    console.error(config, new Error());\n    return null;\n  }\n\n  for (const configItem of config) {\n    const { property, ...remainingProps } = configItem;\n    const value = properties[property];\n\n    settingsRows.push(\n      <TableRow key={property}>\n        <TableCell component=\"td\" scope=\"row\">\n          {property}\n        </TableCell>\n        <TableCell style={{ width: \"1em\" }} />\n        <TableCell>\n          <configItem.type\n            property={property}\n            value={value}\n            setProp={setProp}\n            {...remainingProps}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table size=\"small\" padding=\"none\">\n        <TableBody>{settingsRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { EventConnectors } from \"@craftjs/core\";\nimport { components } from \"../../data/components\";\n\nexport const getToolboxComponents = (connectors: EventConnectors) => {\n  return [\n    ...Object.keys(components).reduce((acc: any[], componentName: any) => {\n      const component = components[componentName];\n\n      if (component.toolboxItem) {\n        acc.push(component.toolboxItem(connectors));\n      }\n\n      return acc;\n    }, []),\n  ];\n};\n","import { useEditor } from \"@craftjs/core\";\nimport { store } from \"../../lib/context\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button as MaterialButton,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\n\nimport { useState } from \"react\";\nimport { Settings, StringSetting } from \"../Settings\";\nimport { saveLocalSettings } from \"../../lib/localSettings\";\nimport { getToolboxComponents } from \"./getToolboxComponents\";\n\nexport const Toolbox = () => {\n  const { connectors, actions } = useEditor();\n\n  const [selectedComponent, setSelectedComponent] = useState<{\n    component: any;\n  } | null>(null);\n\n  return (\n    <>\n      <Box px={2} py={2}>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={1}\n        >\n          <Box pb={2}>\n            <Typography>Drag to add</Typography>\n            Highlight components\n            <Switch\n              checked={store.state.localSettings.highlightComponents}\n              onChange={() => {\n                store.state.localSettings.highlightComponents = !store.state\n                  .localSettings.highlightComponents;\n\n                saveLocalSettings();\n\n                store.update();\n              }}\n            />\n          </Box>\n          {getToolboxComponents(connectors).map((component) => {\n            return (\n              <Grid key={component.name} container direction=\"column\" item>\n                <MaterialButton\n                  ref={component.ref}\n                  variant=\"contained\"\n                  onClick={() => {\n                    actions.selectNode();\n                    setSelectedComponent({ component: component.component });\n                  }}\n                >\n                  {component.name}\n                </MaterialButton>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n      {selectedComponent ? (\n        <BaseProperties component={selectedComponent.component} />\n      ) : null}\n    </>\n  );\n};\n\nconst propertyConfigDefinitions: {\n  [key: string]: any;\n} = {\n  margin: {\n    property: \"margin\",\n    type: StringSetting,\n  },\n  padding: {\n    property: \"padding\",\n    type: StringSetting,\n  },\n  height: {\n    property: \"height\",\n    type: StringSetting,\n  },\n};\n\nconst BaseProperties = ({ component }: any) => {\n  const { baseStyle } = component;\n\n  if (!baseStyle) {\n    return null;\n  }\n\n  const config = [];\n  for (const property in baseStyle) {\n    const definition = propertyConfigDefinitions[property];\n\n    config.push(definition);\n  }\n\n  return (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                  Base Component Config\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Chip\n                  size=\"small\"\n                  color=\"primary\"\n                  label={component.componentName}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n\n        <Settings\n          config={config}\n          properties={baseStyle}\n          setProp={(callback: (props: any) => void) => {\n            const newProps = Object.assign({}, baseStyle);\n            callback(newProps);\n            component.baseStyle = newProps;\n            store.update();\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Chip,\n  Grid,\n  Typography,\n  Button as MaterialButton,\n} from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\n\nexport const SettingsPanel = () => {\n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n    let selected;\n\n    if (currentNodeId) {\n      selected = {\n        id: currentNodeId,\n        name: state.nodes[currentNodeId].data.name,\n        settings:\n          state.nodes[currentNodeId].related &&\n          state.nodes[currentNodeId].related.settings,\n        isDeletable: query.node(currentNodeId).isDeletable(),\n      };\n    }\n\n    return {\n      selected,\n    };\n  });\n\n  return selected ? (\n    <Box mt={2} px={2} py={2}>\n      <Grid container direction=\"column\" spacing={0}>\n        <Grid item>\n          <Box pb={2}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs>\n                <Typography variant=\"subtitle1\">Selected</Typography>\n              </Grid>\n              <Grid item>\n                <Chip size=\"small\" color=\"primary\" label={selected.name} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {selected.settings && React.createElement(selected.settings)}\n        {selected.isDeletable ? (\n          <MaterialButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              actions.delete(selected.id);\n            }}\n          >\n            Delete\n          </MaterialButton>\n        ) : null}\n      </Grid>\n    </Box>\n  ) : null;\n};\n","import { Switch } from \"@material-ui/core\";\n\nexport const SwitchSetting = ({ property, value, onChange }: any) => {\n  return <Switch checked={value || false} onChange={onChange} />;\n};\n","const md = `\n# AppBar\n\n## Properties\n\n\n`;\n\nexport const AppBarDocumentation = {\n  md,\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Tab as MUITab, Tabs } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { game } from \"../../../data/game\";\n\ninterface Tab {\n  name: string;\n  default?: boolean;\n  path: RegExp;\n  to: string;\n  visibilitySource: string;\n}\n\ninterface Props {\n  path: string;\n  tabs: Tab[];\n  className?: string;\n}\n\nfunction getCurrentTab(path: string, tabs: Tab[]): [number, Tab | null] {\n  let defaultTab = null;\n\n  for (const index in tabs) {\n    const tab = tabs[index];\n\n    if (tab.default) {\n      defaultTab = tab;\n    }\n\n    if (path.match(tab.path)) {\n      return [parseInt(index), tab];\n    }\n  }\n\n  // Redirect at this point;\n  if (defaultTab) {\n    return [-1, defaultTab];\n  }\n\n  return [-1, null];\n}\n\nexport function ToolBarTabs({ path, tabs, className }: Props) {\n  const {\n    connectors: { connect },\n  } = useNode();\n  const history = useHistory();\n\n  const [currentTabIndex, tab] = getCurrentTab(path, tabs);\n\n  if (currentTabIndex === -1) {\n    if (tab) {\n      history.push(tab.to);\n    }\n\n    return null;\n  }\n\n  return (\n    <Tabs\n      ref={connect}\n      value={currentTabIndex}\n      onChange={(event, value) => {\n        const tab = tabs[value];\n        history.push(tab.to);\n      }}\n      className={className}\n    >\n      {tabs.map((tab: Tab) => {\n        if (tab.visibilitySource) {\n          if (!game.visibilitySources[tab.visibilitySource]()) {\n            return null;\n          }\n        }\n\n        return <MUITab key={tab.name} label={tab.name} className={className} />;\n      })}\n    </Tabs>\n  );\n}\n","import { useNode } from \"@craftjs/core\";\nimport {\n  AppBar as MUIAppBar,\n  Button,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting, Settings, StringSetting } from \"../../Settings\";\nimport { SwitchSetting } from \"../../Settings/SwitchSetting\";\nimport { AppBarDocumentation } from \"./AppBarDocumentation\";\nimport { ToolBarTabs } from \"./ToolBarTabs\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function AppBar({ tabs }: any) {\n  const classes = useStyles();\n  const { refFn, componentClassName, store } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const history = useHistory();\n\n  const [updateValue, update] = useState(true);\n\n  return (\n    <div\n      ref={refFn}\n      className={classes.root}\n      onClick={() => {\n        setTimeout(() => {\n          update(!updateValue);\n          store.update();\n        });\n      }}\n    >\n      <MUIAppBar position=\"static\" className={componentClassName}>\n        <Toolbar>\n          <ToolBarTabs\n            path={history.location.pathname}\n            tabs={tabs}\n            className={classes.fullHeight}\n          />\n          <div className={classes.spacer}></div>\n        </Toolbar>\n      </MUIAppBar>\n    </div>\n  );\n}\n\nconst AppBarSettings = () => {\n  const {\n    actions: { setProp },\n    triggerUpdate,\n    tabs,\n  } = useNode((node) => ({\n    props: node.data.props,\n    triggerUpdate: !!node.data.props.triggerUpdate,\n    tabs: node.data.props.tabs,\n  }));\n\n  const setDefault = (defaultTab: any) => {\n    for (const tab of tabs) {\n      tab.default = false;\n    }\n\n    defaultTab.default = true;\n\n    return setProp((props: any) => {\n      props.triggerUpdate = !triggerUpdate;\n    });\n  };\n\n  const visibilitySources = Object.keys(game.visibilitySources);\n\n  return (\n    <div>\n      {tabs.map((tab: any, index: number) => {\n        return (\n          <Settings\n            config={[\n              {\n                type: StringSetting,\n                property: \"name\",\n              },\n              {\n                type: StringSetting,\n                property: \"path\",\n              },\n              {\n                type: StringSetting,\n                property: \"to\",\n              },\n              {\n                type: DropdownSetting,\n                property: \"visibilitySource\",\n                itemsFn: () => visibilitySources,\n              },\n              {\n                type: SwitchSetting,\n                property: \"default\",\n                onChange: () => setDefault(tab),\n              },\n            ]}\n            properties={tab}\n            setProp={(callback: any) => {\n              // Custom set prop function\n              // Call the callback with the tab as the \"props\" we want to update\n              callback(tab);\n\n              // Then call the actual setProp to trigger the update\n              setProp((props: any) => {\n                props.triggerUpdate = !triggerUpdate;\n              });\n            }}\n          />\n        );\n\n        // return (\n        //   <div key={index}>\n        //     <TextField\n        //       label=\"Name\"\n        //       value={tab.name}\n        //       onChange={(event) => updateTab(tab, \"name\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"Path\"\n        //       value={tab.path}\n        //       onChange={(event) => updateTab(tab, \"path\", event.target.value)}\n        //     />\n        //     <TextField\n        //       label=\"To\"\n        //       value={tab.to}\n        //       onChange={(event) => updateTab(tab, \"to\", event.target.value)}\n        //     />\n        //     <Switch\n        //       checked={tab.default || false}\n        //       onChange={() => setDefault(tab)}\n        //     />\n        //   </div>\n        // );\n      })}\n      <Button\n        onClick={() => {\n          tabs.push({ name: \"New Tab\", path: \"\", to: \"\" });\n          return setProp((props) => (props.triggerUpdate = !triggerUpdate));\n        }}\n      >\n        Add Tab\n      </Button>\n    </div>\n  );\n};\n\nAppBar.componentName = \"AppBar\";\n\nAppBar.craft = {\n  props: {\n    tabs: [\n      {\n        name: \"Tab 1\",\n        path: \"tab1\",\n        to: `/tab1`,\n        default: true,\n      },\n      {\n        name: \"Tab 2\",\n        path: \"tab2\",\n        to: `/tab2`,\n      },\n      {\n        name: \"Tab 3\",\n        path: \"tab3\",\n        to: `/tab3`,\n      },\n    ],\n  },\n  related: {\n    settings: AppBarSettings,\n  },\n};\n\nAppBar.documentation = AppBarDocumentation;\n\nAppBar.toolboxItem = (connectors: any) => {\n  return {\n    name: \"AppBar\",\n    component: AppBar,\n    ref: (ref: any) => connectors.create(ref, <AppBar />),\n  };\n};\n\nregisterCustomComponent(AppBar);\n","import { useState } from \"react\";\n\nexport function useCustomStyle(\n  base: any,\n  styleGroup: any,\n  customStyleName: string\n) {\n  const [style, setStyle] = useState(null as any);\n\n  let customStyle = null;\n  if (customStyleName) {\n    customStyle = styleGroup[customStyleName];\n  }\n\n  // console.log(\n  //   \"style && customStyle.customId !== style.customId\",\n  //   style && customStyle.customId !== style.customId\n  // );\n  // console.log(customStyle);\n\n  // Already have a style and the customId is different\n  // Don't have a style and we have a custom style\n  if (\n    (style && customStyle && customStyle.customId !== style.customId) ||\n    (!style && customStyle)\n  ) {\n    setStyle({\n      ...base,\n      ...customStyle,\n    });\n  }\n\n  // If the customStyle is reset\n  if (style && !customStyle) {\n    setStyle(null);\n  }\n\n  // Return the base style if nothing else\n  return style || base;\n}\n","const md = `\n# Button\n\n## Properties\n\n### onClickAction\nThis is an action made avaiable from \\`game.actions\\`. No parameters are passed to the action.\n`;\n\nexport const ButtonDocumentation = {\n  md,\n};\n","import { Button as MaterialButton } from \"@material-ui/core\";\nimport { store } from \"../../../lib/context\";\nimport { game } from \"../../../data/game\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { ButtonSettings } from \"./ButtonSettings\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { StringSetting } from \"../../Settings\";\nimport { ButtonDocumentation } from \"./ButtonDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const Button = ({\n  size,\n  variant,\n  color,\n  text,\n  onClickAction,\n  actionContext,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Button.baseStyle,\n    customStyles.Button,\n    customStyleName\n  );\n\n  return (\n    <MaterialButton\n      style={style}\n      ref={refFn}\n      className={componentClassName}\n      size={size}\n      variant={variant}\n      color={color}\n      onClick={() => {\n        const action = game.actions[onClickAction];\n\n        if (action) {\n          action(actionContext);\n          store.update();\n        }\n      }}\n    >\n      {text}\n    </MaterialButton>\n  );\n};\n\nButton.componentName = \"Button\";\n\nButton.craft = {\n  props: {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    text: \"Button\",\n  },\n  related: {\n    settings: ButtonSettings,\n  },\n};\n\nButton.baseStyle = {\n  margin: \"0em\",\n};\n\nButton.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nButton.documentation = ButtonDocumentation;\n\nButton.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Button\",\n    component: Button,\n    ref: (ref: any) => connectors.create(ref, <Button />),\n  };\n};\n\nregisterCustomComponent(Button);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"onClickAction\",\n          itemsFn: () => Object.keys(game.actions),\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const TextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"text\",\n          componentName,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# Text\n\n## Properties\n\n### text\nThe text to show\n\n`;\n\nexport const TextDocumentation = {\n  md,\n};\n","import { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { TextSettings } from \"./TextSettings\";\nimport { StringSetting } from \"../../Settings\";\nimport { TextDocumentation } from \"./TextDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const Text = ({ text, customStyleName }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    Text.baseStyle,\n    customStyles.Text,\n    customStyleName\n  );\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {text}\n    </span>\n  );\n};\n\nText.componentName = \"Text\";\n\nText.craft = {\n  props: {\n    text: \"Text\",\n  },\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: TextSettings,\n  },\n};\n\nText.baseStyle = {\n  margin: \"0em\",\n};\n\nText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nText.documentation = TextDocumentation;\n\nText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Text\",\n    component: Text,\n    ref: (ref: any) => connectors.create(ref, <Text text=\"Some text\" />),\n  };\n};\n\nregisterCustomComponent(Text);\n","import { Text } from \"../Text\";\nimport { Button } from \"../Button\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { Card as MUICard, CardActions, CardContent } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\n\nexport const CardTop = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return (\n    <CardContent ref={connect} className=\"text-only\">\n      {children}\n    </CardContent>\n  );\n};\n\nCardTop.craft = {\n  rules: {\n    // Only accept Text\n    // canMoveIn: (incomingNode: any) => incomingNode.data.type === Text,\n  },\n};\n\nexport const CardBottom = ({ children }: any) => {\n  const {\n    connectors: { connect },\n  } = useNode();\n\n  return <CardActions ref={connect}>{children}</CardActions>;\n};\n\nCardBottom.craft = {\n  rules: {\n    // Only accept Buttons\n    canMoveIn: (incomingNode: any) => incomingNode.data.type === Button,\n  },\n};\n\nexport const Card = () => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  return (\n    <MUICard ref={refFn} className={componentClassName}>\n      <Element id=\"text\" is={CardTop} canvas>\n        <Text text=\"Title\" fontSize={20} />\n        <Text text=\"Subtitle\" fontSize={15} />\n      </Element>\n      <Element id=\"buttons\" is={CardBottom} canvas>\n        <Button size=\"small\" text=\"Learn more\" variant=\"outlined\">\n          Hi!\n        </Button>\n      </Element>\n    </MUICard>\n  );\n};\n","import { game } from \"../data/game\";\n\nexport function checkVisibility(visibilitySource: string, enabled: boolean) {\n  if (!visibilitySource) {\n    return {};\n  }\n\n  const extraStyle: any = {};\n\n  if (\n    game.visibilitySources[visibilitySource] &&\n    !game.visibilitySources[visibilitySource]()\n  ) {\n    if (enabled) {\n      extraStyle.opacity = \"0.25\";\n    } else {\n      return null;\n    }\n  }\n\n  return extraStyle;\n}\n","const md = `\n# Container\n\n## Properties\n\n\n`;\n\nexport const ContainerDocumentation = {\n  md,\n};\n","import { Element } from \"@craftjs/core\";\nimport { Container as MUIContainer } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { Text } from \"../Text\";\nimport { ContainerDocumentation } from \"./ContainerDocumentation\";\nimport { ContainerSettings } from \"./ContainerSettings\";\n\nexport const Container = ({ children, visibilitySource }: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <MUIContainer\n      ref={refFn}\n      style={{ ...Container.baseStyle, ...extraStyle }}\n      className={componentClassName}\n    >\n      {children}\n    </MUIContainer>\n  );\n};\n\nContainer.componentName = \"Container\";\n\nContainer.craft = {\n  props: {\n    padding: \"0px\",\n  },\n  related: {\n    settings: ContainerSettings,\n  },\n};\n\nContainer.baseStyle = {\n  padding: \"0em\",\n};\n\nContainer.documentation = ContainerDocumentation;\n\nContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Container\",\n    component: Container,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={Container} canvas>\n          <Text text=\"Container\" />\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(Container);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings } from \"../../Settings\";\nimport { game } from \"../../../data/game\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nexport const ContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","import { useNode } from \"@craftjs/core\";\nimport { game } from \"../../../data/game\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\n\nconst sizes = [\n  { name: \"3\", value: 3 },\n  { name: \"4\", value: 4 },\n  { name: \"6\", value: 6 },\n];\n\nexport const GridContainerSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nexport const GridItemSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: DropdownSetting,\n          property: \"size\",\n          itemsFn: () => sizes,\n        },\n        {\n          type: DropdownSetting,\n          property: \"visibilitySource\",\n          itemsFn: () => Object.keys(game.visibilitySources),\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# GridContainer\n\n## Properties\n\n\n\n`;\n\nexport const GridContainerDocumentation = {\n  md,\n};\n","const md = `\n# GridItem\n\n## Properties\n\n\n\n`;\n\nexport const GridItemDocumentation = {\n  md,\n};\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { GridContainerSettings, GridItemSettings } from \"./GridSettings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { StringSetting } from \"../../Settings\";\nimport { checkVisibility } from \"../../../lib/checkVisibility\";\nimport { GridContainerDocumentation } from \"./GridContainerDocumentation\";\nimport { GridItemDocumentation } from \"./GridItemDocumentation\";\nimport { documentation } from \"../../../data/documentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\nimport { Element } from \"@craftjs/core\";\nimport { Text } from \"../Text\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const GridContainer = ({ children, visibilitySource }: any) => {\n  const classes = useStyles();\n  const { refFn, componentClassName, enabled } = useSetupComponent({\n    additionalClasses: [classes.root],\n  });\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      container\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n      spacing={2}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nGridContainer.componentName = \"GridContiainer\";\n\nGridContainer.craft = {\n  props: {},\n  related: {\n    settings: GridContainerSettings,\n  },\n};\n\nexport const GridItem = ({\n  children,\n  size,\n  visibilitySource,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName, enabled } = useSetupComponent();\n\n  const style = useCustomStyle(\n    GridItem.baseStyle,\n    customStyles.GridItem,\n    customStyleName\n  );\n\n  const extraStyle = checkVisibility(visibilitySource, enabled);\n\n  if (!extraStyle) {\n    return null;\n  }\n\n  return (\n    <Grid\n      item\n      xs={size}\n      ref={refFn}\n      className={componentClassName}\n      style={extraStyle}\n    >\n      <Paper style={style}>{children}</Paper>\n    </Grid>\n  );\n};\n\nGridItem.componentName = \"GridItem\";\n\nGridItem.craft = {\n  props: { size: 6 },\n  related: {\n    settings: GridItemSettings,\n  },\n};\n\nGridItem.baseStyle = {\n  padding: \"0em\",\n  height: \"100%\",\n};\n\nGridItem.styleProperties = [\n  {\n    property: \"padding\",\n    type: StringSetting,\n  },\n];\n\nGridContainer.documentation = GridContainerDocumentation;\nGridItem.documentation = GridItemDocumentation;\n\ndocumentation.addComponent(GridContainer);\ndocumentation.addComponent(GridItem);\n\nGridContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridContainer\",\n    component: GridContainer,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridContainer} canvas>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n          <Element is={GridItem} canvas>\n            <Text text=\"Grid Item\" />\n          </Element>\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(GridContainer);\n\nGridItem.toolboxItem = (connectors: any) => {\n  return {\n    name: \"GridItem\",\n    component: GridItem,\n    ref: (ref: any) =>\n      connectors.create(\n        ref,\n        <Element is={GridItem} canvas>\n          <Text text=\"Grid Item\" />\n        </Element>\n      ),\n  };\n};\n\nregisterCustomComponent(GridItem);\n","const md = `\n# PathContainer\n\n## Properties\n\n\n`;\n\nexport const PathContainerDocumentation = {\n  md,\n};\n","import {\n  Container as MUIContainer,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { Element, useNode } from \"@craftjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Settings, StyleSetting } from \"../../Settings\";\nimport { StringSetting } from \"../../Settings\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { PathContainerDocumentation } from \"./PathContainerDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    padding: \"0em\",\n  },\n}));\n\nexport const PathContainer = ({ path, children, customStyleName }: any) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { refFn, enabled, componentClassName } = useSetupComponent({\n    additionalClasses: [classes.main],\n  });\n\n  const visible = history.location.pathname.includes(path);\n\n  const style = useCustomStyle(\n    PathContainer.baseStyle,\n    customStyles.PathContainer,\n    customStyleName\n  );\n\n  return (\n    <MUIContainer ref={refFn} className={componentClassName} style={style}>\n      {enabled && (\n        <div>\n          <div style={{ float: \"right\", height: \"0em\" }}>\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </div>\n          {path} : {history.location.pathname}\n        </div>\n      )}\n      {visible ? children : null}\n    </MUIContainer>\n  );\n};\n\nPathContainer.styleProperties = [\n  {\n    property: \"margin\",\n    type: StringSetting,\n  },\n];\n\nconst PathContainerSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"path\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nPathContainer.componentName = \"PathContainer\";\n\nPathContainer.craft = {\n  props: {\n    path: \"/tab1\",\n  },\n  related: {\n    settings: PathContainerSettings,\n  },\n};\n\nPathContainer.baseStyle = {\n  margin: \"0em\",\n};\n\nPathContainer.documentation = PathContainerDocumentation;\n\nPathContainer.toolboxItem = (connectors: any) => {\n  return {\n    name: \"PathContainer\",\n    component: PathContainer,\n    ref: (ref: any) =>\n      connectors.create(ref, <Element is={PathContainer} canvas />),\n  };\n};\n\nregisterCustomComponent(PathContainer);\n","const md = `\n# Table\n\n## Properties\n\n`;\n\nexport const TableDocumentation = {\n  md,\n};\n","import React from \"react\";\nimport { useNode } from \"@craftjs/core\";\nimport {\n  Table as MUITable,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { Settings } from \"../../Settings\";\nimport { CustomRepeatSetting } from \"../../Settings/CustomRepeatSetting\";\nimport { game } from \"../../../data/game\";\nimport { Button } from \"../Button\";\nimport { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { Dropdown } from \"../../Controls/Dropdown\";\nimport { DropdownSetting } from \"../../Settings/DropdownSetting\";\nimport { TableDocumentation } from \"./TableDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nconst TableRows = ({ items, columnNames }: any) => {\n  const rows = [];\n  const currentContext = {\n    item: {} as any,\n    index: \"0\",\n    column: {} as any,\n  };\n\n  try {\n    for (const itemIndex in items) {\n      const item = items[itemIndex];\n      const cells = [];\n\n      currentContext.item = item;\n\n      for (const index in columnNames) {\n        const column = columnNames[index];\n\n        currentContext.index = index;\n        currentContext.column = column;\n\n        const { name } = column;\n        const itemProperty = item[column.property];\n\n        switch (column.type) {\n          case \"string\":\n            if (typeof itemProperty !== \"string\") {\n              throw new Error(\"Trying to use a non-string value as a string\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty}</TableCell>);\n            break;\n          case \"variableString\":\n            if (!itemProperty.data) {\n              throw new Error(\"No data function for a variableString\");\n            }\n\n            cells.push(<TableCell key={name}>{itemProperty.data()}</TableCell>);\n            break;\n          case \"button\":\n            if (!itemProperty.onClickAction) {\n              throw new Error(\"No onClickAcion function for a button\");\n            }\n\n            cells.push(\n              <TableCell key={name}>\n                <Button\n                  text={itemProperty.text}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClickAction={itemProperty.onClickAction}\n                  actionContext={item}\n                />\n              </TableCell>\n            );\n            break;\n        }\n      }\n\n      rows.push(<TableRow key={itemIndex}>{cells}</TableRow>);\n    }\n  } catch (err) {\n    return (\n      <TableBody>\n        <TableCell>\n          <div>Table Data Error! {err.message}</div>\n          <div>Column Index: {currentContext.index}</div>\n          <div>Column Type: {currentContext.column.type}</div>\n          <div>Item Data: {JSON.stringify(currentContext.item)}</div>\n        </TableCell>\n      </TableBody>\n    );\n  }\n\n  return <TableBody>{rows}</TableBody>;\n};\n\nexport const Table = ({ columnNames = [], itemSource }: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const headerRow = [];\n\n  for (const column of columnNames) {\n    headerRow.push(<TableCell key={column.name}>{column.name}</TableCell>);\n  }\n\n  const itemSourceFunction = game.dataSources[itemSource];\n\n  const items = itemSourceFunction ? itemSourceFunction() : [];\n\n  return (\n    <div ref={refFn} className={componentClassName}>\n      <TableContainer>\n        <MUITable size=\"small\">\n          <TableHead>\n            <TableRow>{headerRow}</TableRow>\n          </TableHead>\n          <TableRows items={items} columnNames={columnNames} />\n        </MUITable>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst ColumnSetting = ({ item, update }: any) => {\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <TextField\n        fullWidth\n        value={item.name}\n        label=\"Name\"\n        onChange={(event: any) => {\n          item.name = event.target.value;\n          update();\n        }}\n      />\n      <TextField\n        fullWidth\n        value={item.property}\n        label=\"Property\"\n        onChange={(event: any) => {\n          item.property = event.target.value;\n          update();\n        }}\n      />\n      <Dropdown\n        value={item.type || \"\"}\n        items={[\n          { name: \"String\", value: \"string\" },\n          { name: \"Button\", value: \"button\" },\n          { name: \"Variable String\", value: \"variableString\" },\n        ]}\n        label=\"Type\"\n        onChange={(event: any) => {\n          item.type = event.target.value;\n          update();\n        }}\n      />\n    </div>\n  );\n};\n\nconst TableSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: DropdownSetting,\n          property: \"itemSource\",\n          itemsFn: () => Object.keys(game.dataSources),\n        },\n        {\n          type: CustomRepeatSetting,\n          property: \"columnNames\",\n          component: (item: any, index: number) => (\n            <ColumnSetting\n              key={index}\n              item={item}\n              update={() => {\n                setProp(\n                  (props: any) => (props.updateVarible = !props.updateVarible)\n                );\n              }}\n            />\n          ),\n          items: props.columnNames,\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n\nTable.componentName = \"Table\";\n\nTable.craft = {\n  props: {\n    columnNames: [\n      { name: \"Colum 1\", property: \"col1\", type: \"string\" },\n      { name: \"Colum 2\", property: \"col2\", type: \"string\" },\n      { name: \"Colum 3\", property: \"col3\", type: \"button\" },\n    ],\n    itemSource: \"\",\n    updateVariable: false,\n  },\n  related: {\n    settings: TableSettings,\n  },\n};\n\nTable.documentation = TableDocumentation;\n\nTable.toolboxItem = (connectors: any) => {\n  return {\n    name: \"Table\",\n    component: Table,\n    ref: (ref: any) => connectors.create(ref, <Table />),\n  };\n};\n\nregisterCustomComponent(Table);\n","import { useNode } from \"@craftjs/core\";\nimport { Settings, StringSetting, StyleSetting } from \"../../Settings\";\n\nexport const VariableTextSettings = () => {\n  const {\n    actions: { setProp },\n    componentName,\n    props,\n  } = useNode((node) => ({\n    componentName: node.data.name,\n    props: node.data.props,\n  }));\n\n  return (\n    <Settings\n      config={[\n        {\n          type: StyleSetting,\n          property: \"customStyleName\",\n          componentName,\n        },\n        {\n          type: StringSetting,\n          property: \"dataProperty\",\n        },\n        {\n          type: StringSetting,\n          property: \"subProperty\",\n        },\n      ]}\n      properties={props}\n      setProp={setProp}\n    />\n  );\n};\n","const md = `\n# VariableText\n\n## Properties\n\n`;\n\nexport const VariableTextDocumentation = {\n  md,\n};\n","import { useSetupComponent } from \"../../../config/useSetupComponent\";\nimport { game } from \"../../../data/game\";\nimport { StringSetting } from \"../../Settings\";\nimport { customStyles } from \"../../../data/customStyles\";\nimport { useCustomStyle } from \"../../../config/useCustomStyle\";\nimport { VariableTextSettings } from \"./VariableTextSettings\";\nimport { VariableTextDocumentation } from \"./VariableTextDocumentation\";\nimport { registerCustomComponent } from \"../../../data/components\";\n\nexport const VariableText = ({\n  dataProperty,\n  subProperty,\n  customStyleName,\n}: any) => {\n  const { refFn, componentClassName } = useSetupComponent();\n\n  const style = useCustomStyle(\n    VariableText.baseStyle,\n    customStyles.VariableText,\n    customStyleName\n  );\n\n  let value = game.data[dataProperty];\n  if (value && subProperty) {\n    value = value[subProperty];\n  }\n\n  if (typeof value === \"object\") {\n    value = undefined;\n  }\n\n  return (\n    <span ref={refFn} className={componentClassName} style={style}>\n      {value ?? \"##NO VALUE##\"}\n    </span>\n  );\n};\n\nVariableText.componentName = \"VariableText\";\n\nVariableText.craft = {\n  props: {},\n  rules: {\n    canDrag: (node: any) => true,\n  },\n  related: {\n    settings: VariableTextSettings,\n  },\n};\n\nVariableText.baseStyle = {\n  margin: \"0em\",\n};\n\nVariableText.styleProperties = [\n  {\n    property: \"fontSize\",\n    type: StringSetting,\n  },\n];\n\nVariableText.documentation = VariableTextDocumentation;\n\nVariableText.toolboxItem = (connectors: any) => {\n  return {\n    name: \"VariableText\",\n    component: VariableText,\n    ref: (ref: any) => connectors.create(ref, <VariableText />),\n  };\n};\n\nregisterCustomComponent(VariableText);\n","import { useEffect } from \"react\";\nimport { saveGameData } from \"../../lib/saveGameData\";\n\nexport const AutoSave = () => {\n  // Did mount / unmount\n  useEffect(() => {\n    console.debug(\"Starting autosave\");\n\n    const interval = setInterval(() => {\n      saveGameData();\n    }, 2000);\n\n    return () => {\n      console.debug(\"Stopping autosave\");\n      clearInterval(interval);\n    };\n  }, []);\n\n  return null;\n};\n","import { makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useSharedStyles = makeStyles((theme: Theme) => ({\n  gameArea: {\n    position: \"absolute\",\n    background: \"#eee\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"auto\",\n  },\n}));\n","import { store } from \"../../lib/context\";\nimport { Toolbox } from \"../../components/Toolbox\";\nimport { SettingsPanel } from \"../../components/SettingsPanel\";\n\nimport { Container, Text } from \"../../components/CustomComponents\";\n\nimport { Editor, Frame, Element, useEditor } from \"@craftjs/core\";\nimport { AutoSave } from \"./AutoSave\";\nimport { components } from \"../../data/components\";\nimport { HashRouter } from \"react-router-dom\";\nimport { data } from \"../../data/data\";\nimport { saveGameData } from \"../../lib/saveGameData\";\nimport { useEffect } from \"react\";\nimport { useSharedStyles } from \"../../styles/shared\";\n\nfunction Content() {\n  const { query } = useEditor();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    return () => {\n      saveGameData();\n    };\n  }, []);\n\n  // Setting the editor query data here so that it can be used elsewhere,\n  // including outside of the editor context\n  store.editorQuery = query;\n\n  return (\n    <>\n      <div style={{ position: \"absolute\", width: \"80%\", height: \"100%\" }}>\n        <div className={classes.gameArea}>\n          <HashRouter>\n            <Frame data={data.gameData.layout}>\n              {/*This is the default layout*/}\n              <Element is={Container} padding={5} canvas>\n                <Text\n                  text={\"Start dragging components in (and delete this one)\"}\n                />\n              </Element>\n            </Frame>\n          </HashRouter>\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          right: \"0%\",\n          width: \"20%\",\n          height: \"100%\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Toolbox />\n        <SettingsPanel />\n      </div>\n    </>\n  );\n}\n\nexport function Edit() {\n  return (\n    <Editor resolver={components}>\n      <AutoSave />\n      <Content />\n    </Editor>\n  );\n}\n","import { Editor, Frame } from \"@craftjs/core\";\nimport { useEffect } from \"react\";\nimport { HashRouter, useHistory } from \"react-router-dom\";\nimport { components } from \"../data/components\";\nimport { data } from \"../data/data\";\nimport { useSharedStyles } from \"../styles/shared\";\n\nexport function Play() {\n  const history = useHistory();\n  const classes = useSharedStyles();\n\n  useEffect(() => {\n    // If there is no game data, then switch to the editor\n    if (!data.gameData) {\n      console.error(new Error(\"No gameData routing to /edit\"));\n      history.push(\"/edit\");\n    }\n  }, [history]);\n\n  return (\n    <div className={classes.gameArea}>\n      <Editor resolver={components} enabled={false}>\n        <HashRouter>\n          <Frame data={data.gameData.layout}></Frame>\n        </HashRouter>\n      </Editor>\n    </div>\n  );\n}\n","import { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context, store } from \"../lib/context\";\nimport { saveGameData } from \"../lib/saveGameData\";\nimport { openStyleDrawer } from \"../actions/styleDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [updateValue, update] = useState(false);\n\n  useContext(Context);\n\n  function navigate(path: string) {\n    history.push(path);\n    update(!updateValue);\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <Button\n          onClick={() => {\n            store.state.optionsDrawerOpen = true;\n            store.update();\n          }}\n        >\n          <MenuIcon />\n        </Button>\n        <Button\n          onClick={() => {\n            navigate(\"/edit\");\n          }}\n          variant={path.includes(\"/edit\") ? \"contained\" : undefined}\n          color=\"primary\"\n        >\n          Edit\n        </Button>\n        <Button\n          onClick={() => {\n            let file = store.state.localSettings.lastCodeFile;\n\n            if (file) {\n              file = `/${file}`;\n            }\n\n            navigate(`/code${file}`);\n          }}\n          variant={path.includes(\"/code\") ? \"contained\" : undefined}\n          color=\"primary\"\n        >\n          Code\n        </Button>\n        <Button\n          onClick={() => {\n            openStyleDrawer();\n          }}\n        >\n          Styling\n        </Button>\n        <Button\n          onClick={() => {\n            saveGameData();\n            navigate(\"/play\");\n          }}\n          variant={path.includes(\"/play\") ? \"contained\" : undefined}\n          color=\"primary\"\n        >\n          Play\n        </Button>\n        <Button\n          onClick={() => {\n            navigate(\"/documentation\");\n          }}\n          variant={path.includes(\"/documentation\") ? \"contained\" : undefined}\n          color=\"primary\"\n        >\n          Documentation\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blueGrey[900],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: blueGrey[100],\n    },\n  },\n});\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { dataStorage } from \"../../lib/dataStorage\";\n\nexport const ImportExportDialog = ({ onClose }: any) => {\n  const currentAllGameData = {\n    gameData: dataStorage.get(\"gameData\"),\n  };\n\n  const [allGameData, setAllGameData] = useState(\n    btoa(JSON.stringify(currentAllGameData))\n  );\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Import or export game data</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Copy and paste the existing data somewhere to save it. Or paste in\n          data you have and import it.\n        </DialogContentText>\n        <TextField\n          fullWidth\n          label=\"Current Game Data\"\n          multiline\n          rows={4}\n          value={allGameData}\n          onChange={(event) => {\n            setAllGameData(event.target.value);\n          }}\n          variant=\"filled\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const data = JSON.parse(atob(allGameData));\n            console.debug(\"Imported game data\", JSON.stringify(data, null, 2));\n            dataStorage.set(\"gameData\", data.gameData);\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { dataStorage } from \"../../lib/dataStorage\";\n\nexport const ConfirmResetDialog = ({ onClose }: any) => {\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Reset Game Configuration</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to reset the curret game data?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            dataStorage.delete(\"gameData\");\n            window.location.reload();\n          }}\n          color=\"primary\"\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useState } from \"react\";\n\nexport function useUpdate() {\n  const [updateValue, update] = useState(false);\n\n  return () => update(!updateValue);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  IconButton,\n  TableHead,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport HelpOutlinedIcon from \"@material-ui/icons/HelpOutlined\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useUpdate } from \"../../config/useUpdate\";\nimport { data } from \"../../data/data\";\nimport { saveGameData } from \"../../lib/saveGameData\";\n\nfunction CustomComponent({ component, components, update }: any) {\n  let icon = null;\n\n  if (component.status === \"Checking\") {\n    icon = <HelpOutlinedIcon />;\n  } else if (component.ok) {\n    icon = <CheckCircleIcon style={{ color: \"green\" }} />;\n  } else {\n    icon = <ErrorIcon style={{ color: \"red\" }} />;\n  }\n\n  return (\n    <TableRow>\n      <TableCell>\n        <IconButton\n          onClick={() => {\n            const index = components.indexOf(component);\n            components.splice(index, 1);\n            update();\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n      <TableCell>{component.url}</TableCell>\n      <TableCell>{icon}</TableCell>\n      <TableCell>{component.status}</TableCell>\n    </TableRow>\n  );\n}\n\nexport const CustomComponentsDialog = ({ onClose }: any) => {\n  const update = useUpdate();\n  const [newComponentUrl, setNewComponentUrl] = useState(\"\");\n\n  function checkComponent(component: any) {\n    component.status = \"Checking\";\n\n    return new Promise(async function (accept: any) {\n      try {\n        const result = await axios.get(component.url);\n\n        console.log(result.status);\n        if (result.status === 200) {\n          component.status = \"Ok\";\n          component.ok = true;\n        }\n      } catch (err) {\n        component.status = `Failed (${err.response.status})`;\n        component.ok = false;\n      }\n\n      accept();\n    });\n  }\n\n  async function checkComponentUrls() {\n    const requests = data.customComponents.map((component) => {\n      return checkComponent(component);\n    });\n\n    update();\n\n    await Promise.all(requests);\n\n    update();\n  }\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>Custom Components</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Add custom components to your game.\n        </DialogContentText>\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>URL</TableCell>\n                <TableCell></TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.customComponents.map((component) => {\n                return (\n                  <CustomComponent\n                    component={component}\n                    components={data.customComponents}\n                    update={update}\n                  />\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <br />\n\n        <TextField\n          value={newComponentUrl}\n          onChange={(event: any) => {\n            setNewComponentUrl(event.target.value);\n          }}\n        />\n        <Button\n          onClick={() => {\n            const component = {\n              url: newComponentUrl,\n              status: \"New\",\n            };\n\n            data.customComponents.push(component);\n\n            checkComponent(component);\n\n            setNewComponentUrl(\"\");\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Component\n        </Button>\n        <Button\n          onClick={checkComponentUrls}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Check Components\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            onClose();\n          }}\n          color=\"primary\"\n        >\n          Done\n        </Button>\n        <Button\n          onClick={() => {\n            saveGameData();\n            window.location.reload();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Save And Reload\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport packageJson from \"../../../package.json\";\nimport { store } from \"../../lib/context\";\nimport { useState } from \"react\";\nimport { ImportExportDialog } from \"./ImportExportDialog\";\nimport { ConfirmResetDialog } from \"./ConfirmResetDialog\";\nimport { CustomComponentsDialog } from \"./CustomComponentsDialog\";\nimport { game } from \"../../data/game\";\n\nexport const OptionsDrawer = () => {\n  const [showImportExprt, setShowImportExport] = useState(false);\n  const [showConfirmReset, setShowConfirmReset] = useState(false);\n  const [showCustomComponents, setShowCustomComponents] = useState(false);\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.optionsDrawerOpen}\n        onClose={() => {\n          store.state.optionsDrawerOpen = false;\n          store.update();\n        }}\n      >\n        <List>\n          {/* Initialize Game Data */}\n          <ListItem\n            button\n            onClick={() => {\n              game.initializeGameData();\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Initialize Game Data\" />\n          </ListItem>\n          {/* Reset Game Configuration */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowConfirmReset(true);\n            }}\n          >\n            <ListItemIcon>\n              <LoopIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Reset Game Configuration\"\n              secondary=\"Reset all game configuration\"\n            />\n          </ListItem>\n          {/* Import / Export */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowImportExport(true);\n            }}\n          >\n            <ListItemIcon>\n              <ImportExportIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Import / Export\"\n              secondary=\"Import or export your game data\"\n            />\n          </ListItem>\n          {/* Custom Components */}\n          <ListItem\n            button\n            onClick={() => {\n              setShowCustomComponents(true);\n            }}\n          >\n            <ListItemIcon>\n              <AppsIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Custom Components\"\n              secondary=\"Custom components for your game\"\n            />\n          </ListItem>\n          <Divider />\n          {/* Version */}\n          <ListItem onClick={() => {}}>\n            <ListItemText\n              primary=\"Idling Engine\"\n              secondary={`Version ${packageJson.version}`}\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {showImportExprt && (\n        <ImportExportDialog onClose={() => setShowImportExport(false)} />\n      )}\n\n      {showConfirmReset && (\n        <ConfirmResetDialog onClose={() => setShowConfirmReset(false)} />\n      )}\n\n      {showCustomComponents && (\n        <CustomComponentsDialog\n          onClose={() => setShowCustomComponents(false)}\n        />\n      )}\n    </div>\n  );\n};\n","import { Box, Button, Drawer, Typography } from \"@material-ui/core\";\nimport { store } from \"../lib/context\";\nimport { Settings, StringSetting } from \"./Settings\";\nimport { customStyles } from \"../data/customStyles\";\nimport { Dropdown } from \"./Controls/Dropdown\";\nimport * as components from \"./CustomComponents\";\nimport { v4 as uuid } from \"uuid\";\nimport { closeStyleDrawer } from \"../actions/styleDrawer\";\nimport { useUpdate } from \"../config/useUpdate\";\n\nconst supportedComponents: any = {\n  [components.Button.name]: components.Button,\n  [components.PathContainer.name]: components.PathContainer,\n  [components.GridItem.name]: components.GridItem,\n  [components.Text.name]: components.Text,\n  [components.VariableText.name]: components.VariableText,\n};\n\nexport const StyleDrawer = () => {\n  const update = useUpdate();\n\n  let {\n    styleDrawerComponentName: selectedComponent,\n    styleDrawerStyleId: selectedStyle,\n  } = store.state.localSettings;\n\n  const updateSettings = (\n    styleDrawerComponentName: string,\n    styleDrawerStyleId: string\n  ) => {\n    store.state.localSettings.styleDrawerComponentName = styleDrawerComponentName;\n    store.state.localSettings.styleDrawerStyleId = styleDrawerStyleId;\n    update();\n  };\n\n  let component: any = null;\n  if (selectedComponent) {\n    component = customStyles[selectedComponent];\n  }\n\n  // The selectedStyle id doesn't actually exist\n  // Could be an artifact of the localSettings\n  if (!component || !component[selectedStyle]) {\n    selectedStyle = \"\";\n  }\n\n  return (\n    <div>\n      <Drawer\n        open={store.state.localSettings.styleDrawerOpen}\n        onClose={() => {\n          closeStyleDrawer();\n        }}\n        anchor=\"right\"\n        BackdropProps={{ invisible: true }}\n      >\n        <div style={{ padding: \"1em\" }}>\n          <Typography variant=\"h4\">Style Components</Typography>\n          <Dropdown\n            value={selectedComponent}\n            items={Object.keys(supportedComponents)}\n            label=\"Component\"\n            onChange={(event: any) => {\n              customStyles[event.target.value] =\n                customStyles[event.target.value] || {};\n\n              updateSettings(event.target.value, \"\");\n              update();\n            }}\n          />\n          {component && (\n            <Box display=\"flex\" alignItems=\"flex-end\">\n              <Box flexGrow={1}>\n                <Dropdown\n                  value={selectedStyle}\n                  items={Object.keys(component).map((id) => ({\n                    value: id,\n                    name: component[id].styleName,\n                  }))}\n                  label=\"Styles\"\n                  onChange={(event: any) => {\n                    updateSettings(selectedComponent, event.target.value);\n                  }}\n                />\n              </Box>\n              <Box>\n                <Button\n                  onClick={(event) => {\n                    const id = uuid();\n\n                    component[id] = {\n                      styleName: `New Style ${\n                        Object.keys(component).length + 1\n                      }`,\n                    };\n\n                    updateSettings(selectedComponent, id);\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Style\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {component && selectedStyle && (\n            <>\n              <Settings\n                config={[\n                  {\n                    property: \"styleName\",\n                    type: StringSetting,\n                  },\n                  ...supportedComponents[selectedComponent].styleProperties,\n                ]}\n                properties={component[selectedStyle]}\n                setProp={(callback: (props: any) => void) => {\n                  // Important to assign it a new Id\n                  const newProps = Object.assign({}, component[selectedStyle], {\n                    customId: Math.random(),\n                  });\n                  callback(newProps);\n                  component[selectedStyle] = newProps;\n\n                  store.update();\n                }}\n              />\n              <Button\n                onClick={(event) => {\n                  const styleIds = Object.keys(component);\n                  const index = styleIds.indexOf(selectedStyle);\n\n                  let nextStyle = \"\";\n\n                  delete component[selectedStyle];\n\n                  if (index > 0) {\n                    nextStyle = styleIds[index - 1];\n                  } else if (styleIds.length) {\n                    nextStyle = styleIds[1];\n                  }\n\n                  updateSettings(selectedComponent, nextStyle);\n                }}\n                variant=\"contained\"\n              >\n                Delete Style\n              </Button>\n            </>\n          )}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import { customStyles } from \"../data/customStyles\";\nimport { data } from \"../data/data\";\nimport { components } from \"../data/components\";\nimport { dataStorage } from \"./dataStorage\";\n\nconst initialGameData = {\n  codeFiles: [],\n};\n\nfunction loadComponentProperties(baseStyles: any) {\n  for (const componentName in baseStyles) {\n    const component = components[componentName];\n    const baseStyle = baseStyles[componentName];\n\n    if (component && baseStyle) {\n      component.baseStyle = {\n        ...component.baseStyle,\n        ...baseStyle,\n      };\n    }\n  }\n}\n\nexport function loadGameData() {\n  try {\n    let storedGameData = dataStorage.get(\"gameData\");\n\n    if (storedGameData) {\n      if (storedGameData.baseStyles) {\n        loadComponentProperties(storedGameData.baseStyles);\n      }\n\n      if (storedGameData.customStyles) {\n        Object.assign(customStyles, storedGameData.customStyles);\n      }\n\n      data.gameData = storedGameData;\n      data.customComponents = storedGameData.customComponents || [];\n\n      return storedGameData;\n    }\n\n    console.warn(\"No game data loaded\");\n  } catch (err) {\n    console.error(err);\n  }\n\n  data.gameData = initialGameData;\n\n  return null;\n}\n","import React, { Component } from \"react\";\nimport \"./lib/log\";\nimport { Edit, Play, Code, Documentation } from \"./views\";\nimport { Context, store } from \"./lib/context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport { theme } from \"./config/theme\";\nimport { executeCode, setUpdateUIFunction } from \"./data/game\";\nimport { OptionsDrawer } from \"./components/OptionsDrawer\";\nimport { StyleDrawer } from \"./components/StyleDrawer\";\nimport { loadLocalSettings } from \"./lib/localSettings\";\nimport { loadGameData } from \"./lib/loadGameData\";\nimport { data } from \"./data/data\";\n\nloadLocalSettings();\n\nexport default class App extends Component {\n  state = {\n    customComponentsLoaded: false,\n  };\n\n  async componentDidMount() {\n    // This allows components to update the state\n    // without being tied to the context\n    store.update = this.update;\n\n    setUpdateUIFunction(store.update);\n\n    if (!data.gameData) {\n      loadGameData();\n    }\n\n    executeCode();\n\n    const loadingPromises = [];\n    const errors: any = {};\n    // http://localhost:9090/main.js\n    for (const customComponent of data.customComponents) {\n      if (!customComponent.url) {\n        continue;\n      }\n\n      const p = new Promise((resolve: any) => {\n        const s = document.createElement(\"script\");\n        s.type = \"text/javascript\";\n        s.src = customComponent.url;\n        s.onload = () => {\n          resolve();\n        };\n        s.onerror = (err) => {\n          console.log(err);\n          errors[customComponent.url] = err;\n          resolve();\n        };\n\n        document.head.append(s);\n      });\n\n      loadingPromises.push(p);\n    }\n\n    await Promise.all(loadingPromises);\n\n    console.log(errors);\n\n    this.setState({\n      customComponentsLoaded: true,\n    });\n  }\n\n  update = () => {\n    // This causes the context provider to update\n    this.setState({});\n  };\n\n  render() {\n    if (!this.state.customComponentsLoaded) {\n      return null;\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Context.Provider\n          value={{\n            state: store.state,\n            update: this.update,\n            editorQuery: store.editorQuery,\n          }}\n        >\n          <BrowserRouter basename=\"/idling-engine\">\n            <div\n              style={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}\n            >\n              <OptionsDrawer />\n              <StyleDrawer />\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              >\n                <Header />\n                <div style={{ position: \"relative\", flexGrow: 1 }}>\n                  <Switch>\n                    <Route path=\"/edit\" render={() => <Edit />} />\n                    <Route path=\"/code\" render={() => <Code />} />\n                    <Route path=\"/play\" render={() => <Play />} />\n                    <Route\n                      path=\"/documentation\"\n                      render={() => <Documentation />}\n                    />\n                    <Route path=\"/\">\n                      <Redirect to=\"/edit\" />\n                    </Route>\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </BrowserRouter>\n        </Context.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/style.css\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}